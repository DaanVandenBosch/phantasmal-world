(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{QRTb:function(t,e,n){"use strict";n.r(e),n.d(e,"TextureController",(function(){return x}));var o=n("mKaR"),c=n("wtpc"),r=n("iPoI"),s=n("yub1"),i=n("NRxM"),u=n("bcBH"),a=n("/UnV"),l=n("rwco"),f=n("ouMO"),w=function(t,e,n,o){return new(n||(n=Promise))((function(c,r){function s(t){try{u(o.next(t))}catch(t){r(t)}}function i(t){try{u(o.throw(t))}catch(t){r(t)}}function u(t){var e;t.done?c(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,i)}u((o=o.apply(t,e||[])).next())}))};const h=l.c.get("viewer/controllers/TextureController");class x extends o.a{constructor(){super(...arguments),this._textures=Object(f.c)(),this.textures=this._textures,this.load_file=t=>w(this,void 0,void 0,(function*(){try{const e=Object(c.g)(t.name).toLowerCase(),n=yield Object(r.b)(t);if("xvm"===e){const t=Object(s.a)(new i.a(n,u.a.Little));this._textures.splice(0,1/0,...t.textures)}else if("afs"===e){const t=Object(a.a)(new i.a(n,u.a.Little)),e=[];for(const n of t){const t=Object(s.a)(new i.a(n,u.a.Little));e.push(...t.textures)}this._textures.val=e}}catch(t){h.error("Couldn't read file.",t)}}))}}}}]);