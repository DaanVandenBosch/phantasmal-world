(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{543:function(e,t,s){"use strict";s.d(t,"a",(function(){return a}));var r=s(23),i=s(462),l=s(27);const n=r.a.get("core/data_formats/parsing/afs"),o=5457473;function a(e){const t=Object(i.b)(n);if(e.bytes_left<8)return t.add_problem(l.b.Error,"AFS archive is corrupted.","Too small to be an AFS archive.").failure();if(e.u32()!==o)return t.add_problem(l.b.Error,"AFS archive is corrupted.","Magic bytes not present.").failure();const s=e.u16();e.seek(2);const r=[];for(let i=1;i<=s;i++){if(e.bytes_left<8){t.add_problem(l.b.Warning,`AFS file entry ${i} is invalid.`,`Couldn't read file entry ${i}, only ${e.bytes_left} bytes left.`);break}const s=e.u32(),n=e.u32();if(s>e.size)t.add_problem(l.b.Warning,`AFS file entry ${i} is invalid.`,`Invalid file offset ${s} for entry ${i}.`);else if(s+n>e.size)t.add_problem(l.b.Warning,`AFS file entry ${i} is invalid.`,`File size ${n} (offset: ${s}) of entry ${i} too large.`);else{const t=e.position;e.seek_start(s),r.push(e.array_buffer(n)),e.seek_start(t)}}return t.success(r)}},833:function(e,t,s){"use strict";s.r(t),s.d(t,"TextureController",(function(){return p}));var r=s(140),i=s(40),l=s(500),n=s(539),o=s(468),a=s(456),u=s(543),c=s(23),_=s(14),b=s(628),d=s(462),f=s(27),h=function(e,t,s,r){return new(s||(s=Promise))((function(i,l){function n(e){try{a(r.next(e))}catch(e){l(e)}}function o(e){try{a(r.throw(e))}catch(e){l(e)}}function a(e){var t;e.done?i(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(n,o)}a((r=r.apply(e,t||[])).next())}))};const v=c.a.get("viewer/controllers/TextureController");class p extends r.a{constructor(){super(...arguments),this._textures=Object(_.c)(),this._result_dialog_visible=Object(_.e)(!1),this._result=Object(_.e)(void 0),this._result_problems_message=Object(_.e)(""),this._result_error_message=Object(_.e)(""),this.textures=this._textures,this.result_dialog_visible=this._result_dialog_visible,this.result=this._result,this.result_problems_message=this._result_problems_message,this.result_error_message=this._result_error_message,this.load_file=e=>h(this,void 0,void 0,(function*(){this._result_problems_message.val=`Encountered some problems while opening "${e.name}".`,this._result_error_message.val=`Couldn't open "${e.name}".`;try{const t=Object(i.h)(e.name).toLowerCase(),s=yield Object(l.b)(e),r=new o.a(s,a.a.Little);if("xvm"===t){const e=Object(n.b)(r);this.set_result(e),e.success&&(this._textures.val=e.value.textures)}else if("afs"===t){const e=Object(d.b)(v),t=Object(u.a)(r);if(e.add_result(t),t.success){const s=t.value.flatMap(t=>{var s,r,i,l;const u=new o.a(t,a.a.Little);if(Object(n.a)(u)){const t=Object(n.b)(u);return e.add_result(t),null!==(r=null===(s=t.value)||void 0===s?void 0:s.textures)&&void 0!==r?r:[]}{const t=Object(n.b)(Object(b.a)(u.seek_start(0)));return e.add_result(t),null!==(l=null===(i=t.value)||void 0===i?void 0:i.textures)&&void 0!==l?l:[]}});s.length?this.set_result(e.success(s)):this.set_result(e.failure()),this._textures.val=s}else this.set_result(e.failure())}else v.debug(`Unsupported file extension in filename "${e.name}".`),this.set_result(Object(d.a)([{severity:f.b.Error,ui_message:"Unsupported file type."}]))}catch(e){v.error("Couldn't read file.",e),this.set_result(Object(d.a)())}})),this.dismiss_result_dialog=()=>{this._result_dialog_visible.val=!1}}set_result(e){this._result.val=e,e.problems.length&&(this._result_dialog_visible.val=!0)}}}}]);