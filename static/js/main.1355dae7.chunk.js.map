{"version":3,"sources":["data_formats/vector.ts","enums.ts","domain/items.ts","domain/NpcType.ts","domain/ObjectType.ts","domain/index.ts","Loadable.ts","stores/ApplicationStore.ts","stores/ServerMap.ts","stores/ItemTypeStore.ts","stores/DpsCalcStore.ts","ui/BigSelect.tsx","ui/dps_calc/DpsCalcComponent.tsx","ui/ErrorBoundary.tsx","stores/HuntMethodStore.ts","ui/BigTable.tsx","ui/hunt_optimizer/MethodsComponent.tsx","stores/ItemDropStore.ts","stores/HuntOptimizerStore.ts","ui/hunt_optimizer/WantedItemsComponent.tsx","ui/SectionIdIcon.tsx","ui/hunt_optimizer/OptimizationResultComponent.tsx","ui/time.ts","ui/hunt_optimizer/OptimizerComponent.tsx","ui/hunt_optimizer/HuntOptimizerComponent.tsx","data_formats/index.ts","data_formats/cursor/index.ts","data_formats/cursor/ArrayBufferCursor.ts","data_formats/parsing/rel.ts","data_formats/parsing/area_collision_geometry.ts","data_formats/parsing/iff.ts","data_formats/parsing/ninja/njcm.ts","data_formats/parsing/ninja/xj.ts","data_formats/parsing/ninja/index.ts","data_formats/parsing/area_geometry.ts","rendering/conversion/GeometryBuilder.ts","rendering/conversion/index.ts","rendering/conversion/ninja_geometry.ts","rendering/conversion/areas.ts","loading/load_array_buffer.ts","loading/LoadingCache.ts","loading/areas.ts","stores/AreaStore.ts","data_formats/cursor/ResizableBufferCursor.ts","data_formats/cursor/WritableResizableBufferCursor.ts","data_formats/ResizableBuffer.ts","data_formats/compression/prs/compress.ts","data_formats/compression/prs/decompress.ts","data_formats/parsing/quest/bin.ts","data_formats/parsing/quest/dat.ts","data_formats/cursor/WritableArrayBufferCursor.ts","data_formats/parsing/quest/qst.ts","data_formats/parsing/quest/index.ts","read_file.ts","undo.ts","stores/QuestEditorStore.ts","ui/quest_editor/EntityInfoComponent.tsx","ui/quest_editor/QuestInfoComponent.tsx","rendering/conversion/entities.ts","ui/RendererComponent.tsx","rendering/conversion/create_mesh.ts","rendering/QuestEntityControls.ts","data_formats/parsing/ninja/texture.ts","rendering/conversion/ninja_textures.ts","loading/entities.ts","rendering/QuestModelManager.ts","rendering/QuestRenderer.ts","rendering/Renderer.ts","data_formats/parsing/ninja/motion.ts","ui/quest_editor/QuestEditorComponent.tsx","loading/player.ts","rendering/conversion/ninja_animation.ts","stores/ModelViewerStore.ts","rendering/ModelRenderer.ts","ui/viewer/models/AnimationSelectionComponent.tsx","ui/viewer/models/ModelSelectionComponent.tsx","rendering/TextureRenderer.ts","ui/viewer/models/ModelViewerComponent.tsx","stores/TextureViewerStore.ts","ui/viewer/textures/TextureViewerComponent.tsx","ui/ApplicationComponent.tsx","ui/viewer/ViewerComponent.tsx","index.tsx"],"names":["Vec2","x","y","Object","classCallCheck","this","createClass","key","value","v","Vec3","z","enum_values","e","values","number_values","filter","length","EnumMap","enum_","initial_value","keys","Map","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","set","err","return","get","WeaponItemType","id","name","min_atp","max_atp","ata","max_grind","required_atp","ArmorItemType","atp","min_evp","max_evp","min_dfp","max_dfp","mst","hp","lck","ShieldItemType","UnitItemType","ToolItemType","WeaponItem","_class","type","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","grind","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","computed","getOwnPropertyDescriptor","NpcType","code","simple_name","ultimate_name","episode","enemy","rare_type","Number","isInteger","Error","concat","by_code_map","map","by_ep_and_name","check_episode","Unknown","FemaleFat","FemaleMacho","FemaleTall","MaleDwarf","MaleFat","MaleMacho","MaleOld","BlueSoldier","RedSoldier","Principal","Tekker","GuildLady","Scientist","Nurse","Irene","ItemShop","Nurse2","Hildebear","Hildeblue","RagRappy","AlRappy","Monest","Mothmant","SavageWolf","BarbarousWolf","Booma","Gobooma","Gigobooma","Dragon","GrassAssassin","PoisonLily","NarLily","NanoDragon","EvilShark","PalShark","GuilShark","PofuillySlime","PouillySlime","PanArms","Migium","Hidoom","DeRolLe","Dubchic","Gilchic","Garanz","SinowBeat","SinowGold","Canadine","Canane","Dubswitch","VolOpt","Delsaber","ChaosSorcerer","DarkGunner","DeathGunner","ChaosBringer","DarkBelra","Dimenian","LaDimenian","SoDimenian","Bulclaw","Bulk","Claw","DarkFalz","Hildebear2","Hildeblue2","RagRappy2","LoveRappy","StRappy","HalloRappy","EggRappy","Monest2","Mothmant2","PoisonLily2","NarLily2","GrassAssassin2","Dimenian2","LaDimenian2","SoDimenian2","DarkBelra2","BarbaRay","SavageWolf2","BarbarousWolf2","PanArms2","Migium2","Hidoom2","Dubchic2","Gilchic2","Garanz2","Dubswitch2","Delsaber2","ChaosSorcerer2","GolDragon","SinowBerill","SinowSpigell","Merillia","Meriltas","Mericarol","Mericus","Merikle","UlGibbon","ZolGibbon","Gibbles","Gee","GiGue","IllGill","DelLily","Epsilon","GalGryphon","Deldepth","Delbiter","Dolmolm","Dolmdarl","Morfos","Recobox","Recon","SinowZoa","SinowZele","OlgaFlow","SandRappy","DelRappy","Astark","SatelliteLizard","Yowie","MerissaA","MerissaAA","Girtablulu","Zu","Pazuzu","Boota","ZeBoota","BaBoota","Dorphon","DorphonEclair","Goran","PyroGoran","GoranDetonator","SaintMilion","Shambertin","Kondrieu","NpcTypes","EnemyNpcTypes","ObjectType","pso_id","psoId","PlayerSet","Particle","Teleporter","Warp","LightCollision","Item","EnvSound","FogCollision","EventCollision","CharaCollision","ElementalTrap","StatusTrap","HealTrap","LargeElementalTrap","ObjRoomID","Sensor","UnknownItem16","Lensflare","ScriptCollision","HealRing","MapCollision","ScriptCollisionA","ItemLight","RadarCollision","FogCollisionSW","BossTeleporter","ImageBoard","QuestWarp","Epilogue","UnknownItem29","UnknownItem30","UnknownItem31","BoxDetectObject","SymbolChatObject","TouchPlateObject","TargetableObject","EffectObject","CountDownObject","UnknownItem38","UnknownItem39","UnknownItem40","UnknownItem41","MenuActivation","TelepipeLocation","BGMCollision","MainRagolTeleporter","LobbyTeleporter","PrincipalWarp","ShopDoor","HuntersGuildDoor","TeleporterDoor","MedicalCenterDoor","Elevator","EasterEgg","ValentinesHeart","ChristmasTree","ChristmasWreath","HalloweenPumpkin","TwentyFirstCentury","Sonic","WelcomeBoard","Firework","LobbyScreenDoor","MainRagolTeleporterBattleInNextArea","LabTeleporterDoor","Pioneer2InvisibleTouchplate","ForestDoor","ForestSwitch","LaserFence","LaserSquareFence","ForestLaserFenceSwitch","LightRays","BlueButterfly","Probe","RandomTypeBox1","ForestWeatherStation","Battery","ForestConsole","BlackSlidingDoor","RicoMessagePod","EnergyBarrier","ForestRisingBridge","SwitchNoneDoor","EnemyBoxGrey","FixedTypeBox","EnemyBoxBrown","EmptyTypeBox","LaserFenseEx","LaserSquareFenceEx","FloorPanel1","Caves4ButtonDoor","CavesNormalDoor","CavesSmashingPillar","CavesSign1","CavesSign2","CavesSign3","HexagalTank","BrownPlatform","WarningLightObject","Rainbow","FloatingJelifish","FloatingDragonfly","CavesSwitchDoor","RobotRechargeStation","CavesCakeShop","Caves1SmallRedRock","Caves1MediumRedRock","Caves1LargeRedRock","Caves2SmallRock1","Caves2MediumRock1","Caves2LargeRock1","Caves2SmallRock2","Caves2MediumRock2","Caves2LargeRock2","Caves3SmallRock","Caves3MediumRock","Caves3LargeRock","FloorPanel2","DestructableRockCaves1","DestructableRockCaves2","DestructableRockCaves3","MinesDoor","FloorPanel3","MinesSwitchDoor","LargeCryoTube","ComputerLikeCalus","GreenScreenOpeningAndClosing","FloatingRobot","FloatingBlueLight","SelfDestructingObject1","SelfDestructingObject2","SelfDestructingObject3","SparkMachine","MinesLargeFlashingCrate","RuinsSeal","RuinsTeleporter","RuinsWarpSiteToSite","RuinsSwitch","FloorPanel4","Ruins1Door","Ruins3Door","Ruins2Door","Ruins11ButtonDoor","Ruins21ButtonDoor","Ruins31ButtonDoor","Ruins4ButtonDoor","Ruins2ButtonDoor","RuinsSensor","RuinsFenceSwitch","RuinsLaserFence4x2","RuinsLaserFence6x2","RuinsLaserFence4x4","RuinsLaserFence6x4","RuinsPoisonBlob","RuinsPilarTrap","PopupTrapNoTech","RuinsCrystal","Monument","RuinsRock1","RuinsRock2","RuinsRock3","RuinsRock4","RuinsRock5","RuinsRock6","RuinsRock7","Poison","FixedBoxTypeRuins","RandomBoxTypeRuins","EnemyTypeBoxYellow","EnemyTypeBoxBlue","EmptyTypeBoxBlue","DestructableRock","PopupTrapsTechs","FlyingWhiteBird","Tower","FloatingRocks","FloatingSoul","Butterfly","LobbyGameMenu","LobbyWarpObject","Lobby1EventObjectDefaultTree","UnknownItem387","UnknownItem388","UnknownItem389","LobbyEventObjectStaticPumpkin","LobbyEventObject3ChristmasWindows","LobbyEventObjectRedAndWhiteCurtain","UnknownItem393","UnknownItem394","LobbyFishTank","LobbyEventObjectButterflies","UnknownItem400","GreyWallLow","SpaceshipDoor","GreyWallHigh","TempleNormalDoor","BreakableWallWallButUnbreakable","BrokenCilinderAndRubble","ThreeBrokenWallPiecesOnFloor","HighBrickCilinder","LyingCilinder","BrickConeWithFlatTop","BreakableTempleWall","TempleMapDetect","SmallBrownBrickRisingBridge","LongRisingBridgeWithPinkHighEdges","FourSwitchTempleDoor","FourButtonSpaceshipDoor","ItemBoxCca","TeleporterEp2","CCADoor","SpecialBoxCCA","BigCCADoor","BigCCADoorSwitch","LittleRock","Little3StoneWall","Medium3StoneWall","SpiderPlant","CCAAreaTeleporter","UnknownItem523","WhiteBird","OrangeBird","Saw","LaserDetect","UnknownItem529","UnknownItem530","Seagull","Fish","SeabedDoorWithBlueEdges","SeabedDoorAlwaysOpenNonTriggerable","LittleCryotube","WideGlassWallBreakable","BlueFloatingRobot","RedFloatingRobot","Dolphin","CaptureTrap","VRLink","UnknownItem576","WarpInBarbaRayRoom","UnknownItem672","GeeNest","LabComputerConsole","LabComputerConsoleGreenScreen","ChairYelllowPillow","OrangeWallWithHoleInMiddle","GreyWallWithHoleInMiddle","LongTable","GBAStation","TalkLinkToSupport","InstaWarp","LabInvisibleObject","LabGlassWindowDoor","UnknownItem700","LabCelingWarp","Ep4LightSource","Cacti","BigBrownRock","BreakableBrownRock","UnknownItem832","UnknownItem833","PoisonPlant","UnknownItem897","UnknownItem898","OozingDesertPlant","UnknownItem901","BigBlackRocks","UnknownItem903","UnknownItem904","UnknownItem905","UnknownItem906","FallingRock","DesertPlantHasCollision","DesertFixedTypeBoxBreakableCrystals","UnknownItem910","BeeHive","UnknownItem912","Heat","TopOfSaintMillionEgg","UnknownItem961","Server","RARE_ENEMY_PROB","KONDRIEU_PROB","Episode","SectionId","Difficulty","SectionIds","LoadableState","Difficulties","Section","position","y_axis_rotation","sin_y_axis_rotation","cos_y_axis_rotation","Math","sin","cos","Quest","domain_class","short_description","long_description","area_variants","objects","npcs","dat_unknowns","bin_data","domain_descriptor","domain_descriptor2","domain_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","Array","QuestEntity","_dec","ref","_dec2","_dec3","_class3","area_id","section_id","rotation","_descriptor9","_section_id","_descriptor10","_descriptor11","_descriptor12","getPrototypeOf","section","_this$position","rel_x","rel_y","rel_z","sec_pos","rot_z","action","QuestObject","_class5","_QuestEntity","dat","_this","possibleConstructorReturn","call","_descriptor13","assertThisInitialized","inherits","QuestNpc","_class7","_QuestEntity2","_this2","_descriptor14","Area","order","AreaVariant","_dec4","shallow","_class9","area","_descriptor15","EnemyDrop","difficulty","npc_type","item_type","anything_rate","rare_rate","rate","HuntMethod","_class11","quest","default_time","enemy_counts","_descriptor16","user_time","SimpleQuest","PlayerModel","head_style_count","hair_styles_count","hair_styles_with_accessory","PlayerAnimation","Loadable","Loadable_class","load","Loadable_descriptor","Loadable_descriptor2","Loadable_descriptor3","_load","Loadable_descriptor4","_value","load_value","_load_value","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","is_loading","abrupt","_promise","_state","Initializing","sent","Nominal","_error","t0","stop","apply","arguments","Uninitialized","defer","Reloading","Promise","resolve","application_store","key_event_handlers","on_global_keyup","tool","handler","dispatch_global_keyup","current_tool","param","window","location","search","slice","split","find","p","startsWith","Ephinea","init_tool","ServerMap","ServerMap_class","_EnumMap","current_server","ItemTypeStore","ItemTypeStore_class","id_to_item_type","ItemTypeStore_descriptor","_ref","server","response","data","item_types","item_type_dto","fetch","process","toLowerCase","json","class","minAtp","maxAtp","maxGrind","requiredAtp","minEvp","maxEvp","minDfp","maxDfp","push","t1","finish","_x","item_type_stores","store","Weapon","item","shifta_factor","grind_atp","shifta_atp","armor_atp","shield_atp","base_atp","base_shifta_atp","final_min_atp","enemy_dfp","final_max_atp","min_normal_damage","max_normal_damage","NORMAL_DAMAGE_FACTOR","min_heavy_damage","max_heavy_damage","dps_calc_store","add_weapon","weapons","current","it","armor_type","shield_type","char_atp","mag_pow","shifta_lvl","array","BigSelect","_PureComponent","react_default","createElement","commonjs_default","assign","className","props","PureComponent","DpsCalcComponent","observer","DpsCalcComponent_class","_Component","_getPrototypeOf2","_len","args","_key","selected","get_by_id","armor_changed","shield_changed","BigSelect_BigSelect","placeholder","options","weapon_types","wt","label","onChange","weapon","i","input_number","size","min","max","step","toFixed","avg_normal_damage","avg_heavy_damage","armor_types","at","shield_types","st","Component","ErrorBoundary","state","has_error","es_alert","message","children","with_error_boundary","ComponentErrorBoundary","ErrorBoundary_ErrorBoundary","displayName","logger","Logger","hunt_method_store","storage_disposer","load_from_local_storage","methods","method_user_times_json","localStorage","getItem","user_times","JSON","parse","method","autorun","store_in_local_storage","error","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","setItem","stringify","quests","total_count","_i","_Object$entries","entries","enemyCounts","_ref3","_ref2","slicedToArray","count","by_code","test","load_hunt_methods","BigTable","sort_columns","column_width","index","columns","width","cell_renderer","cell","sort_indicator","title","columnIndex","rowIndex","style","column","classes","sortable","sort","direction","SortDirection","ASC","height","viewBox","d","fill","class_name","footer","row_count","footer_value","footer_tooltip","result","record","tooltip","on_click","header_clicked","join","onClick","old_index","findIndex","sc","old","splice","DESC","unshift","es","rowHeight","rowCount","fixedRowCount","overscanRowCount","overscan_row_count","columnWidth","columnCount","fixedColumnCount","fixed_column_count","overscanColumnCount","overscan_column_count","cellRenderer","classNameTopLeftGrid","classNameTopRightGrid","updateTigger","update_trigger","MethodsComponent","MethodsComponent_temp","_class2","sorts","b","cmp","localeCompare","time","_ref4","BigTable_BigTable","MethodsComponent_TimeComponent","_loop","toString","MethodsComponent_class","TimeComponent","change","_this3","hour","minute","floor","round","time_picker","moment","format","allowClear","suffixIcon","React","EnemyDropTable","table","item_type_to_drops","drop","drops","item_type_id","ItemDropStore","ItemDropStore_dec","ItemDropStore_class","ItemDropStore_descriptor","item_drop_stores","item_type_store","drop_dto","promise","warn","itemTypeId","sectionId","set_drop","dropRate","rareRate","enemy_drops","WantedItem","HuntOptimizerStore_class","amount","HuntOptimizerStore_descriptor","HuntOptimizerStore_descriptor2","OptimalResult","wanted_items","optimal_methods","OptimalMethod","section_ids","method_name","method_episode","method_time","runs","item_counts","total_time","hunt_optimizer_store","HuntOptimizerStore","HuntOptimizerStore_descriptor3","HuntOptimizerStore_descriptor4","optimize","drop_table","constraints","wanted","variables","variable_details","_method","counts","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_ref9","_ref5","_count","old_count","counts_list","pan_arms_count","split_counts","pan_arms_2_count","_split_counts","_counts","split_pan_arms","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_iterator5","_step5","variable","add_variable","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_iterator6","_step6","_ref8","_ref7","_ref10","variable_name","runs_or_other","details","_method2","_difficulty","_split_pan_arms","_variable","items","_i2","_Object$entries2","_ref13","_ref12","_item_name","expected_amount","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_iterator8","_step8","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_iterator7","_step7","sid","match_found","_i3","_Object$keys","_item_name2","Set","w","delete","get_drop","has","t2","full_method_name","t3","t4","t5","solver","Solve","opType","feasible","item_name","t6","t7","toConsumableArray","initialize","_callee2","_context2","_callee3","wanted_items_json","item_store","wi","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_iterator9","_step9","_ref17","itemKindId","_context3","replace","_ref18","itemType","item_drop_store","get_drops_for_item_type","WantedItemsComponent","WantedItemsComponent_class","help_visible","add_wanted","remove_wanted","table_remove_cell_renderer","rowData","es_button","icon","no_rows_renderer","on_help_visible_change","visible","setState","helpVisible","popover","content","Help","trigger","onVisibleChange","huntable_item_types","marginLeft","headerHeight","rowGetter","noRowsRenderer","dataKey","WantedItemsComponent_WantedAmountCell","wantedItem","flexGrow","cellDataGetter","WantedAmountCell","wanted_amount_changed","SectionIdIcon","_ref$size","display","backgroundImage","backgroundSize","OptimizationResultComponent","OptimizationResultComponent_class2","total_runs","hours","h","m","padStart","hours_to_string","totalCount","OptimizationResultComponent_class","OptimizerComponent","WantedItemsComponent_WantedItemsComponent","OptimizationResultComponent_OptimizationResultComponent","TabPane","tabs","Endianness","ASCII_DECODER","TextDecoder","UTF_16BE_DECODER","UTF_16LE_DECODER","ASCII_ENCODER","TextEncoder","UTF_16BE_ENCODER","UTF_16LE_ENCODER","ArrayBufferCursor","buffer","endianness","offset","byteLength","_position","little_endian","dv","utf16_decoder","utf16_encoder","DataView","byteOffset","Little","Big","seek_start","u8_at","getUint8","r","u16_at","getUint16","u32_at","getUint32","i8_at","getInt8","i16_at","getInt16","i32_at","getInt32","f32_at","getFloat32","n","f32","wrapper","max_byte_length","null_terminated","drop_remaining","string_length","index_of_u8","view","decode","index_of_u16","Uint8Array","max_pos","parse_rel","cursor","parse_index","seek_end","index_offset","u32","index_size","seek","data_offset","compact_offsets","u16_array","expanded_offset","compact_offset","parse_indices","parse_area_collision_geometry","main_offset_table_offset","object","meshes","bytes_left","start_pos","block_trailer_offset","mesh","vertices","triangles","vertex_count","vertex_table_offset","triangle_count","triangle_table_offset","v1","u16","v2","v3","flags","n_x","n_y","n_z","indices","normal","parse_iff","chunks","take","NjcmChunkType","parse_njcm_model","cached_chunk_offsets","vlist_offset","plist_offset","bounding_sphere_center","vec3_f32","bounding_sphere_radius","parse_chunks","chunk","Vertex","vertex","bone_weight","bone_weight_status","calc_continue","texture_id","Tiny","Strip","triangle_strips","collision_sphere_center","collision_sphere_radius","wide_end_chunks","loop","type_id","u8","chunk_start_position","Null","Bits","cache_index","CachePolygonList","cached_offset","DrawPolygonList","texture_bits_and_id","flip_u","flip_v","clamp_u","clamp_v","mipmap_d_adjust","filter_mode","super_sample","Material","parse_vertex_chunk","Volume","parse_triangle_strip_chunk","End","chunk_type_id","render_flags","ignore_light","ignore_specular","ignore_ambient","use_alpha","double_side","flat_shading","environment_mapping","user_offset_and_strip_count","user_flags_size","strip_count","has_tex_coords","has_color","has_normal","has_double_tex_coords","strips","winding_flag_and_index_count","i16","clockwise_winding","index_count","abs","j","tex_coords","objectSpread","parse_xj_model","_model$meshes","_model$meshes2","_model$vertices","vertex_info_table_offset","vertex_info_count","triangle_strip_table_offset","triangle_strip_count","transparent_triangle_strip_table_offset","transparent_triangle_strip_count","model","collision_sphere_position","vertex_type","vertex_size","uv","vec2_f32","parse_vertex_info_table","parse_triangle_strip_table","triangle_strip_list_offset","material_table_offset","material_table_size","index_list_offset","material_properties","parse_triangle_strip_material_properties","alpha_src","alpha_dst","diffuse_r","diffuse_g","diffuse_b","diffuse_a","ANGLE_TO_RAD","PI","NJCM","NjObject","evaluation_flags","scale","bone_cache","_bone_count","id_ref","get_bone_internal","Infinity","bone_id","bone","skip","break_child_trace","child","parse_nj","parse_ninja","parse_xj","parse_xj_object","parse_sibling_objects","parse_model","context","flatMap","siblings","eval_flags","no_translate","no_rotate","no_scale","hidden","zxy_rotation_order","shape_skip","model_offset","pos_x","pos_y","pos_z","rotation_x","i32","rotation_y","rotation_z","scale_x","scale_y","scale_z","child_offset","sibling_offset","parse_geometry_table","table_offset","table_entry_count","GeometryBuilder","positions","normals","uvs","bones","bone_indices","bone_weights","groups","material_indices","Vector3","weight","material_index","last_group","mat_idx","add","geom","BufferGeometry","userData","created_by_geometry_builder","addAttribute","Float32BufferAttribute","setIndex","Uint16BufferAttribute","normalized_mat_idxs","group","addGroup","normalized_material_indices","computeBoundingSphere","computeBoundingBox","vec3_to_threejs","DEFAULT_NORMAL","DEFAULT_UV","Vector2","NO_TRANSLATION","NO_ROTATION","Quaternion","NO_SCALE","ninja_object_to_geometry_builder","builder","GeometryCreator","to_geometry_builder","ninja_object_to_buffer_geometry","create_buffer_geometry","VerticesHolder","vertices_stack","object_to_geometry","Matrix4","build","parent_bone","parent_matrix","_object$evaluation_fl","euler","Euler","matrix","compose","setFromEuler","premultiply","Bone","setRotationFromEuler","add_bone","model_to_geometry","is_njcm_model","xj_model_to_geometry","njcm_model_to_geometry","normal_matrix","Matrix3","getNormalMatrix","new_vertices","applyMatrix4","applyMatrix3","put","start_index_count","mesh_vertex","add_vertex","add_index","_bones","bone_index","add_bone_weight","add_group","current_mat_idx","tuv","clockwise","c","pa","get_position","pb","pc","na","get_normal","nb","nc","clone","sub","cross","negate","dot","materials","MeshBasicMaterial","color","transparent","opacity","MeshLambertMaterial","side","DoubleSide","wireframe_materials","wireframe","area_collision_geometry_to_object_3d","Group","collision_mesh","Geometry","color_index","faces","Face3","Mesh","renderOrder","wireframe_mesh","load_array_buffer","_load_array_buffer","url","arrayBuffer","LoadingCache","new_value","render_geometry_cache","collision_geometry_cache","area_variant","get_or_set","load_area_sections_and_render_geometry","sections","load_area_render_geometry","_x4","_x5","_x6","_load_area_render_geometry","geometry","load_area_collision_geometry","_x7","_x8","_x9","_load_area_collision_geometry","get_area_asset","then","Color","setHSL","sec","area_geometry_to_sections_and_object_3d","section_count","section_table_offset","section_position","section_rotation","simple_geometry_offset_table_offset","simple_geometry_offset_count","parse_area_geometry","area_base_names","_callee4","base_url","suffix","_context4","area_version_to_base_url","episode_base_names","_episode_base_names$a","base_name","variants","variant","String","_area$area_variants","varis","_","area_store","AreaStore","areas","get_area","get_variant","variant_id","get_area_sections","_x2","_x3","_load_area_sections","load_area_sections","I","II","IV","ResizableBufferCursor","_offset","_size","check_offset","check_size","sub_view","backing_buffer","byte_size","WritableResizableBufferCursor","_ResizableBufferCurso","ensure_size","setUint8","setUint16","setUint32","setInt32","setFloat32","other","copy_to_uint8_array","str","byte_length","encode","byte","write_u8","needed","ResizableBuffer","initial_capacity","_buffer","_data_view","ArrayBuffer","ensure_capacity","min_new_size","capacity","new_size","new_buffer","compress","src","ctx","Context","hash_table","HashTable","set_bit","copy_literal","hash","_ctx$find_longest_mat","find_longest_match","_ctx$find_longest_mat2","mlen","_ctx$find_longest_mat3","_ctx$find_longest_mat4","offset2","mlen2","write_literal","add_intermediates","write_eof","dst","MAX_WINDOW","WINDOW_MASK","HASH_SIZE","flag_bits_left","flag_offset","bit","pos","write_final_flags","s2","len","s1","lazy","entry","hash_to_offset","longest_length","longest_match","match_length","entry_2","set_prev","masked_offset_to_prev","prevOffset","decompress","read_flag_bit","copy_u8","read_u8","read_u16","offset_copy","buf_size","buf","write_cursor","parse_bin","lenient","object_code_offset","function_offset_table_offset","quest_id","language","quest_name","string_utf16","function_offset_count","function_offsets","instructions","main_opcode","opcode","opsize","list","f8_opcode_list","f9_opcode_list","opcode_list","_list$opcode","mnemonic","mask","full_opcode","toUpperCase","opargs","parse_instruction_arguments","parse_object_code","array_buffer","args_size","old_pos","outer","charAt","OBJECT_SIZE","NPC_SIZE","WritableArrayBufferCursor","_ArrayBufferCursor","parse_qst","version","version_a","version_b","headers","file_name","string_ascii","file_name_2","parse_headers","files","expected_sizes","start_position","chunk_no","file","expected_size","chunk_nos","chunk_position","from","actual_size","ceil","contained_files","parse_files","header","name_2","write_qst","params","total_size","f","reduce","write_u16","write_string_ascii","write_u32","dot_pos","lastIndexOf","write_file_headers","no","write_file_chunk","write_file_chunks","write_u8_array","parse_quest","qst","dat_file","bin_file","trim","endsWith","objs","unknowns","entity_type","entities_size","object_count","unknown1","u8_array","unknown2","unknown3","unknown","bytes_read","npc_count","unknown4","skin","unknown5","parse_dat","prs","bin","func_0_ops","operations","func_offset","func_found","func_ops","operation","get_func_operations","npc","obj","bb_maps","op","bb_map","area_variants_array","get_area_variants","set_episode","debug","get_episode","obj_data","_obj_data$position","rot","from_pso_id","npc_data","_npc_data$position","regular","get_npc_type","parse_npc_data","write_quest_qst","grouped_objs","groupBy","obj_area_ids","parseInt","area_objs","write_f32","write_i32","grouped_npcs","npc_area_ids","area_npcs","write_dat","type_data","npc_type_to_dat_data","ext_start","base_file_name","read_file","_read_file","reject","reader","FileReader","addEventListener","readAsArrayBuffer","Action","description","undo","redo","UndoStack","undo_dec","undo_class","undo_descriptor","undo_descriptor2","stack","can_undo","can_redo","quest_editor_store","undo_stack","load_file","set_quest","o","set_section_on_visible_quest_entity","delegateYield","entity","_entity$position","_section$position","sec_x","sec_y","sec_z","rot_x","s","runInAction","save_current_quest_to_file","current_quest","document","href","URL","createObjectURL","Blob","download","body","appendChild","click","revokeObjectURL","removeChild","clear","selected_entity","current_area","set_current_area_id","_this4","EntityInfoComponent","EntityInfoComponent_class","colSpan","EntityInfoComponent_CoordRow","position_type","coord","CoordRow","EntityInfoComponent_CoordInput","CoordInput","disposer","changed","pos_type","start_observing","prev_props","precision","delay","QuestInfoComponent","npc_counts","val","extra_canadines","npc_count_rows","extra","ColorType","RendererComponent","modifyDom","div","renderer","set_size","clientWidth","clientHeight","dom_element","onResize","wrapper_div","parentNode","removeEventListener","on_will_unmount","DUMMY_MATERIAL","DEFAULT_MATERIAL","DEFAULT_SKINNED_MATERIAL","skinning","create_mesh","material","create","default_material","mesh_constructor","mat","mat_idxs","isArray","idx","normalized_idx","SkinnedMesh","bind","Skeleton","OBJECT_COLORS","Normal","Hovered","Selected","NPC_COLORS","create_object_mesh","textures","create_npc_mesh","tex","alphaTest","DOWN_VECTOR","QuestEntityControls","raycaster","Raycaster","hovered","pick","last_pointer_position","moved_since_last_mouse_down","try_highlight_selected","get_entity_mesh","select","on_mouse_down","process_event","stop_transforming","new_pick","pick_entity","pointer_pos_to_device_coords","controls","enabled","schedule_render","on_mouse_up","deselect","on_mouse_move","pointer_device_pos","buttons","shiftKey","translate_vertically","translate_horizontally","mark_hovered","initial_position","new_position","push_action","set_selected_entity","offsetX","offsetY","selection","render_required","selection_equals","set_color","pointer_position","setFromCamera","camera","ray","negative_world_dir","getWorldDirection","plane","Plane","setFromNormalAndCoplanarPoint","normalize","grab_offset","intersection_point","intersectPlane","y_delta","drag_y","drag_adjust","_this$pick_terrain","pick_terrain","intersection","set_position_and_section","point","_this$raycaster$inter","intersectObjects","entity_models","_this$raycaster$inter3","collision_geometry","collision_geom_intersection","distance","pointer_pos","origin","intersections","face","XVMH","XVRT","parse_xvm","header_chunk","texture_count","parse_header","format_1","format_2","parse_texture","xvm_to_textures","xvm","xvm_texture_to_texture","data_size","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","texture_3js","CompressedTexture","minFilter","LinearFilter","wrapS","MirroredRepeatWrapping","wrapT","needsUpdate","DEFAULT_ENTITY","CylinderBufferGeometry","translate","DEFAULT_ENTITY_PROMISE","DEFAULT_ENTITY_TEX","DEFAULT_ENTITY_TEX_PROMISE","npc_cache","npc_tex_cache","AssetType","object_cache","object_tex_cache","entities_i","_arr","load_npc_geometry","_load_npc_geometry","nj_objects","load_npc_data","load_npc_tex","_load_npc_tex","Texture","load_object_geometry","_load_object_geometry","_callee6","object_type","_context6","_callee5","_ref6","_context5","load_object_data","load_object_tex","_load_object_tex","_callee8","_context8","_callee7","_context7","_load_npc_data","_callee9","_context9","npc_type_to_url","_load_object_data","_callee10","_context10","object_type_to_url","CAMERA_POSITION","CAMERA_LOOKAT","DUMMY_OBJECT","Object3D","QuestModelManager","entity_reaction_disposers","_load_models","render_geometry","npc_geom","npc_tex","object_geom","object_tex","_model","dispose_entity_reactions","add_sections_to_collision_geometry","reset_camera","reset_entity_models","load_npc_textures","update_entity_geometry","load_object_textures","collision_geom","render_geom","down","up","collision_area","boundingBox","getCenter","intersection1","intersectObject","intersection2","cud","rud","add_entity_model","OrbitControls","OrbitControlsCreator","THREE","Renderer","_debug","scene","Scene","light_holder","WebGLRenderer","antialias","render_scheduled","light","HemisphereLight","requestAnimationFrame","call_render","render","mouseButtons","ORBIT","MOUSE","RIGHT","PAN","LEFT","background","setPixelRatio","devicePixelRatio","setSize","coords","getSize","look_at","reset","copy","lookAt","domElement","NjInterpolation","NjKeyframeTrackType","QuestRenderer","_Renderer","PerspectiveCamera","_collision_geometry","_render_geometry","_entity_models","entity_to_mesh","entity_controls","model_manager","load_models","remove","aspect","updateProjectionMatrix","esm_get","QuestEditorComponent","QuestEditorComponent_class","save_dialog_open","save_dialog_filename","save_as_clicked","filename","save_dialog_filename_changed","save_dialog_affirmed","save_dialog_cancelled","keyup","ctrlKey","altKey","QuestEditorComponent_Toolbar","on_save_as_clicked","QuestInfoComponent_QuestInfoComponent","RendererComponent_RendererComponent","EntityInfoComponent_EntityInfoComponent","QuestEditorComponent_SaveAsForm","is_open","on_filename_change","on_ok","on_cancel","Toolbar","set_filename","info","originFileObj","save_as","upload","accept","showUploadList","customRequest","es_select","disabled","Option","first_undo","first_redo","SaveAsForm","name_changed","currentTarget","modal","Fragment","onOk","onCancel","es_form","layout","input","autoFocus","maxLength","NMDM","parse_njm","bone_count","chunk_size","parse_motion","parse_njm_v2","offset1","action_offset","motion_offset","parse_action","parse_njm_bb","mdata_offset","frame_count","inp_fn","interpolation","element_count","motion_data_list","motion_data","tracks","keyframe_offsets","keyframe_counts","shift","Position","keyframes","parse_motion_data_f","Rotation","parse_motion_data_a","Scale","frames","frame","keyframe_count","_frames","parse_motion_data_a_wide","get_player_data","_get_player_data","player_class","body_part","player_class_to_url","get_player_animation_data","_get_player_animation_data","animation_id","PSO_FRAME_RATE","create_animation_clip","nj_object","nj_motion","Spline","InterpolateSmooth","InterpolateLinear","forEach","get_bone","times","keyframe","quat","QuaternionKeyframeTrack","VectorKeyframeTrack","AnimationClip","nj_object_cache","nj_motion_cache","model_viewer_store","models","animations","clock","Clock","has_skeleton","set_animation_frame_rate","animation","mixer","timeScale","animation_frame_rate","set_animation_frame","animation_frame_count","animation_frame","load_model","get_player_ninja_object","set_model","current_bone_count","load_animation","get_nj_motion","current_model","set_animation","njm","set_textures","pause_animation","paused","animation_playing","toggle_animation_playing","start","update_animation_frame","clip","current_obj3d","stopAllAction","AnimationMixer","player_animation","clipAction","play","duration","skeleton","player_model","uncacheRoot","current_player_model","set_obj3d","bb","create_skinned_mesh","translateY","head_part","ninja_object","get_all_assets","body_data","head_data","head","add_to_bone","hair_data","hair","accessory_data","accessory","AnimationSelectionComponent","AnimationSelectionComponent_class","ModelSelectionComponent","es_list","itemLayout","dataSource","renderItem","Meta","ModelRenderer","skeleton_helper","show_skeleton","update","getDelta","quaternion","SkeletonHelper","linewidth","ModelViewerComponent","ModelViewerComponent_class","ModelViewerComponent_Toolbar","ModelSelectionComponent_ModelSelectionComponent","AnimationSelectionComponent_AnimationSelectionComponent","es_switch","checked","texture_viewer_store","current_xvm","TextureRenderer","OrthographicCamera","quad_meshes","render_textures","total_width","total_height","tex_3js","quad_mesh","create_quad","enableRotate","_this$scene","left","right","top","bottom","quad","PlaneGeometry","faceVertexUvs","TextureViewerComponent","TextureViewerComponent_Toolbar","Viewer","ViewerComponent","tab","ModelViewerComponent_ModelViewerComponent","TextureViewerComponent_TextureViewerComponent","QuestEditor","HuntOptimizer","OptimizerComponent_OptimizerComponent","MethodsComponent_MethodsComponent","DpsCalc","ApplicationComponent","ApplicationComponent_class","menu_clicked","tool_component","menu","selectedKeys","mode","defaultValue","useDefaults","defaultLevel","ReactDOM","ApplicationComponent_ApplicationComponent","getElementById"],"mappings":"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,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,MAClB,CAAC,IAAM,UAAW,OChgChBj1B,GAASC,IAAO5uB,IAAI,kCAEpB2kD,GAAc,GACdC,GAAW,GCHV,IAAMC,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA9mD,OAAAC,EAAA,EAAAD,CAAAE,KAAA4mD,GAAA9mD,OAAA8jB,EAAA,EAAA9jB,CAAAE,KAAAF,OAAAgjB,EAAA,EAAAhjB,CAAA8mD,GAAA7+B,MAAA/nB,KAAAgoB,YAAA,OAAAloB,OAAAkkB,EAAA,EAAAlkB,CAAA8mD,EAAAC,GAAA/mD,OAAAG,EAAA,EAAAH,CAAA8mD,EAAA,EAAA1mD,IAAA,WAAAC,MAAA,SACaA,GAEL,OADAH,KAAKgmC,GAAGia,SAASjgD,KAAK8lC,YAAa3lC,GAC5BH,OAHf,CAAAE,IAAA,YAAAC,MAAA,SAMcA,GAGN,OAFAH,KAAKgmC,GAAGka,UAAUlgD,KAAKugB,SAAUpgB,EAAOH,KAAK+lC,eAC7C/lC,KAAK8lC,WAAa,EACX9lC,OATf,CAAAE,IAAA,YAAAC,MAAA,SAYcA,GAGN,OAFAH,KAAKgmC,GAAGma,UAAUngD,KAAKugB,SAAUpgB,EAAOH,KAAK+lC,eAC7C/lC,KAAK8lC,WAAa,EACX9lC,OAff,CAAAE,IAAA,YAAAC,MAAA,SAkBcA,GAGN,OAFAH,KAAKgmC,GAAGoa,SAASpgD,KAAKugB,SAAUpgB,EAAOH,KAAK+lC,eAC5C/lC,KAAK8lC,WAAa,EACX9lC,OArBf,CAAAE,IAAA,YAAAC,MAAA,SAwBcA,GAGN,OAFAH,KAAKgmC,GAAGqa,WAAWrgD,KAAKugB,SAAUpgB,EAAOH,KAAK+lC,eAC9C/lC,KAAK8lC,WAAa,EACX9lC,OA3Bf,CAAAE,IAAA,iBAAAC,MAAA,SA8BmBitB,GAGX,OAFA,IAAI8a,WAAWloC,KAAK0lC,OAAQ1lC,KAAK4lC,OAAS5lC,KAAKugB,UAAU3e,IAAI,IAAIsmC,WAAW9a,IAC5EptB,KAAK8lC,WAAa1Y,EAAMxsB,OACjBZ,OAjCf,CAAAE,IAAA,eAAAC,MAAA,SAoCiBmgD,GACT,IAAMlxB,EAAOkxB,EAAMlxB,KAAOkxB,EAAM//B,SAMhC,OALA+/B,EAAMC,oBACF,IAAIrY,WAAWloC,KAAK0lC,OAAQ1lC,KAAK4lC,OAAS5lC,KAAKugB,SAAU6O,GACzDA,GAEJpvB,KAAK8lC,WAAa1W,EACXpvB,OA3Cf,CAAAE,IAAA,qBAAAC,MAAA,SA8CuBqgD,EAAaC,GAC5B,IAAIvxB,EAAI,EAD+ChuB,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAGvD,QAAAC,EAAAC,EAAmB8jC,GAAcqb,OAAOF,GAAxCh/C,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAA8C,KAAnCy/C,EAAmCr/C,EAAAnB,MACtC+uB,EAAIuxB,IACJzgD,KAAK4gD,SAASD,KACZzxB,IAN6C,MAAArtB,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GAUvD,KAAO8tB,EAAIuxB,GACPzgD,KAAK4gD,SAAS,KACZ1xB,EAGN,OAAOlvB,SA7Df4mD,EAAA,CAA+CnhB,ICCzC/U,GAASC,IAAO5uB,IAAI,kCAkBnB,SAAS+kD,GAAUze,GAEtB,IAAI0e,EAAU,KAGRC,EAAY3e,EAAOgE,KACzBhE,EAAOM,KAAK,GACZ,IAAMse,EAAY5e,EAAOgE,KAYzB,GAVkB,KAAd2a,EACAD,EAAU,qBACW,KAAdC,EACW,KAAdC,IACAF,EAAU,cAEO,MAAdC,IACPD,EAAU,sBAGE,eAAZA,EAA0B,CAE1B1e,EAAO9B,WAAW,GAElB,IAAM2gB,EAkEd,SAAuB7e,GAGnB,IAFA,IAAM6e,EAAuB,GAEpBh4B,EAAI,EAAGA,EAAI,IAAKA,EAAG,CACxBmZ,EAAOM,KAAK,GACZ,IAAMoc,EAAW1c,EAAO4B,MACxB5B,EAAOM,KAAK,IACZ,IAAMwe,EAAY9e,EAAO+e,aAAa,IAAI,GAAM,GAC1Ch4B,EAAOiZ,EAAOI,MAEd4e,EAAchf,EAAO+e,aAAa,IAAI,GAAM,GAElDF,EAAQ/7B,KAAK,CACT45B,WACAoC,YACAE,cACAj4B,SAIR,OAAO83B,EAtFaI,CAAcjf,GAExBkf,EAuFd,SAAqBlf,EAAgBmf,GAGjC,IAAMD,EAAQ,IAAItmD,IAUlB,KAAOonC,EAAOiB,YAAc,MAAM,CAC9B,IAAMme,EAAiBpf,EAAO9nB,SAGxBmnC,EAAWrf,EAAOM,KAAK,GAAG0D,KAC1B8a,EAAY9e,EAAOM,KAAK,GAAGye,aAAa,IAAI,GAAM,GAEpDO,EAAOJ,EAAMxlD,IAAIolD,GAErB,IAAKQ,EAAM,CACP,IAAMC,EAAgBJ,EAAezlD,IAAIolD,GACzCI,EAAM3lD,IACFulD,EACCQ,EAAO,CACJzlD,KAAMilD,EACNS,gBACAvf,OAAQ,IAAIyX,GACR,IAAIgB,GAAgB8G,GAAiB,OACrC5iB,GAAWqB,QAEfwhB,UAAW,IAAItoB,MAKvBooB,EAAKE,UAAUloB,IAAI+nB,GACnBh3B,GAAOyI,KAAP,qBAAAp0B,OACyB2iD,EADzB,aAAA3iD,OAC6CoiD,EAD7C,0DAIAQ,EAAKE,UAAU9S,IAAI2S,GAIvB,IAAIt4B,EAAOiZ,EAAOM,KAAK,MAAMF,MAC7BJ,EAAOM,MAAM,MAETvZ,EAAO,OACPsB,GAAOyI,KAAP,wBAAAp0B,OAC4BqqB,EAD5B,oEAGAA,EAAO,MAGX,IAAMjF,EAAOke,EAAOuC,KAAKxb,GACnB04B,EAA4B,KAAXJ,EAOvB,GANAC,EAAKtf,OAAOjZ,KAAOzO,KAAK2O,IAAIw4B,EAAiB14B,EAAMu4B,EAAKtf,OAAOjZ,MAC/Du4B,EAAKtf,OAAO9B,WAAWuhB,GAAgBpD,aAAav6B,GAGpDke,EAAOM,KAAK,KAAOxe,EAAKiF,MAEpBiZ,EAAO9nB,WAAaknC,EAAiB,KACrC,MAAM,IAAI3iD,MAAJ,QAAAC,OACMsjC,EAAO9nB,SACXknC,EAFF,wDAOVpf,EAAOiB,YACP5Y,GAAOyI,KAAP,GAAAp0B,OAAesjC,EAAOiB,WAAtB,yBA1EsF,IAAA5X,GAAA,EAAAC,GAAA,EAAAC,OAAAvwB,EAAA,IA6E1F,QAAAwwB,EAAAC,EAAmBy1B,EAAM9mD,SAAzBe,OAAAC,cAAAiwB,GAAAG,EAAAC,EAAApwB,QAAAC,MAAA+vB,GAAA,EAAmC,KAAxBi2B,EAAwB91B,EAAA1xB,MAE/BwnD,EAAKtf,OAAO9B,WAAW,GACvBohB,EAAKE,UAAY,IAAItoB,IAAIxd,MAAMgmC,KAAKJ,EAAKE,UAAUpnD,UAAUqzB,KAAK,SAAC/M,EAAG+P,GAAJ,OAAU/P,EAAI+P,KAGtD,MAAtB6wB,EAAKC,eAAyBD,EAAKtf,OAAOjZ,OAASu4B,EAAKC,eACxDl3B,GAAOyI,KAAP,QAAAp0B,OACY4iD,EAAKzlD,KADjB,2BAAA6C,OAC+C4iD,EAAKtf,OAAOjZ,KAD3D,kCAAArqB,OACgG4iD,EAAKC,cADrG,MAQJ,IAFA,IAAMI,EAAcrnC,KAAK2O,IAAIq4B,EAAKtf,OAAOjZ,KAAMu4B,EAAKC,eAAiB,GAE5DF,EAAW,EAAGA,EAAW/mC,KAAKsnC,KAAKD,EAAc,QAASN,EAC1DC,EAAKE,UAAUloB,IAAI+nB,IACpBh3B,GAAOyI,KAAP,QAAAp0B,OAAoB4iD,EAAKzlD,KAAzB,sBAAA6C,OAAkD2iD,EAAlD,OA9F8E,MAAA7lD,GAAA8vB,GAAA,EAAAC,EAAA/vB,EAAA,YAAA6vB,GAAA,MAAAI,EAAAhwB,QAAAgwB,EAAAhwB,SAAA,WAAA6vB,EAAA,MAAAC,GAmG1F,IAAMs2B,EAAsC,GAnG8C5sB,GAAA,EAAAC,GAAA,EAAAC,OAAAn6B,EAAA,IAqG1F,QAAAq6B,EAAAD,EAAmB8rB,EAAM9mD,SAAzBe,OAAAC,cAAA65B,GAAAI,EAAAD,EAAA/5B,QAAAC,MAAA25B,GAAA,EAAmC,KAAxBqsB,EAAwBjsB,EAAAv7B,MAC/B+nD,EAAgB/8B,KAAK,CACjBjpB,KAAMylD,EAAKzlD,KACXioB,KAAMw9B,EAAKtf,OAAO9B,WAAW,GAAG8f,kBAxGkD,MAAAxkD,GAAA05B,GAAA,EAAAC,EAAA35B,EAAA,YAAAy5B,GAAA,MAAAG,EAAA35B,QAAA25B,EAAA35B,SAAA,WAAAy5B,EAAA,MAAAC,GA4G1F,OAAO0sB,EAnMWC,CAAY9f,EAAQ,IAAIpnC,IAAIimD,EAAQjiD,IAAI,SAAAo/B,GAAC,MAAI,CAACA,EAAE8iB,UAAW9iB,EAAEjV,UANjDluB,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAQ1B,IAR0B,IAQ1BC,EAR0B+1B,EAAA,eAQfswB,EARermD,EAAAnB,MAShBioD,EAASlB,EAAQ/9B,KAAK,SAAAkb,GAAC,OAAIA,EAAE8iB,YAAcQ,EAAKzlD,OAElDkmD,IACAT,EAAK1lD,GAAKmmD,EAAOrD,SACjB4C,EAAKU,OAASD,EAAOf,cAL7B9lD,EAAmBgmD,EAAnB/lD,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAA0Bm2B,IARA,MAAAx1B,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GAiB1B,MAAO,CACH2lD,UACAQ,SAGJ72B,GAAOe,MAAP,eAAA1sB,OAA4BgiD,EAA5B,gBAoBD,SAASuB,GAAUC,GACtB,IAAMhB,EAAQgB,EAAOhB,MACfiB,EAAajB,EACdtiD,IAAI,SAAAwjD,GAAC,OAAI,GAA2C,KAAtC9nC,KAAKsnC,KAAKQ,EAAEt+B,KAAK0b,WAAa,QAC5C6iB,OAAO,SAAC3hC,EAAG+P,GAAJ,OAAU/P,EAAI+P,IACpB4O,EAAS,IAAIwb,YAAYsH,GACzBngB,EAAS,IAAIue,GAA0BlhB,EAAQV,GAAWqB,QAKhE,GAuJJ,SAA4BgC,EAAwBkf,GAAsC,IAAAjrB,GAAA,EAAAC,GAAA,EAAAC,OAAAn7B,EAAA,IACtF,QAAAq7B,EAAAD,EAAmB8qB,EAAnB/lD,OAAAC,cAAA66B,GAAAI,EAAAD,EAAA/6B,QAAAC,MAAA26B,GAAA,EAA0B,KAAfqrB,EAAejrB,EAAAv8B,MACtB,GAAIwnD,EAAKzlD,KAAKtB,OAAS,GACnB,MAAMkE,MAAK,QAAAC,OAAS4iD,EAAKzlD,KAAd,2CAGfmmC,EAAOsgB,UAAU,IACjBtgB,EAAOsgB,UAAU,IACjBtgB,EAAOsgB,UAAUhB,EAAK1lD,IAAM,GAE5B,IAAK,IAAIitB,EAAI,EAAGA,EAAI,KAAMA,EACtBmZ,EAAOuY,SAAS,GAGpBvY,EAAOugB,mBAAmBjB,EAAKzlD,KAAM,IACrCmmC,EAAOwgB,UAAUlB,EAAKx9B,KAAK0b,YAE3B,IAAIwhB,OAAmB,EAEvB,GAAmB,MAAfM,EAAKU,OAAgB,CAErB,IAAMS,EAAUnB,EAAKzlD,KAAK6mD,YAAY,KACtC1B,GACiB,IAAbyB,EACMnB,EAAKzlD,KAAO,KACZylD,EAAKzlD,KAAK+mB,MAAM,EAAG6/B,GAAW,KAAOnB,EAAKzlD,KAAK+mB,MAAM6/B,QAE/DzB,EAAcM,EAAKU,OAGvB,GAAIhB,EAAYzmD,OAAS,GACrB,MAAMkE,MAAK,QAAAC,OACC4iD,EAAKzlD,KADN,+BAAA6C,OACwCsiD,EADxC,iCAKfhf,EAAOugB,mBAAmBvB,EAAa,KApC2C,MAAAxlD,GAAA06B,GAAA,EAAAC,EAAA36B,EAAA,YAAAy6B,GAAA,MAAAG,EAAA36B,QAAA26B,EAAA36B,SAAA,WAAAy6B,EAAA,MAAAC,IA1JtFwsB,CAAmB3gB,EAAQkf,GAkM/B,SAA2Blf,EAAwBkf,GAG/C,IAAM5c,EAAS4c,EAAMtiD,IAAI,SAAA0iD,GAAI,MAAK,CAC9BsB,GAAI,EACJ9+B,KAAM,IAAIsb,GAAkBkiB,EAAKx9B,KAAM6a,GAAWqB,QAClDnkC,KAAMylD,EAAKzlD,QAGf,KAAOyoC,EAAO/pC,QAGV,IAFA,IAAIsuB,EAAI,EAEDA,EAAIyb,EAAO/pC,QACTsoD,GAAiB7gB,EAAQsC,EAAOzb,GAAG/E,KAAMwgB,EAAOzb,GAAG+5B,KAAMte,EAAOzb,GAAGhtB,QAIlEgtB,EAFFyb,EAAOrV,OAAOpG,EAAG,GAhN7Bi6B,CAAkB9gB,EAAQkf,GAEtBlf,EAAOjZ,OAASo5B,EAChB,MAAM,IAAI1jD,MAAJ,iCAAAC,OAA2CyjD,EAA3C,cAAAzjD,OAAkEsjC,EAAOjZ,KAAzE,MAGV,OAAOsW,EAqNX,SAASwjB,GACL7gB,EACAle,EACAu9B,EACAxlD,GAEAmmC,EAAO+gB,eAAe,CAAC,GAAI,EAAG,GAAI,IAClC/gB,EAAOuY,SAAS8G,GAChBrf,EAAO+gB,eAAe,CAAC,EAAG,EAAG,IAC7B/gB,EAAOugB,mBAAmB1mD,EAAM,IAEhC,IAAMktB,EAAOzO,KAAK0O,IAAI,KAAMlF,EAAKmf,YACjCjB,EAAOqc,aAAav6B,EAAKygB,KAAKxb,IAG9B,IAAK,IAAIF,EAAIE,EAAMF,EAAI,OAAQA,EAC3BmZ,EAAOuY,SAAS,GAMpB,OAHAvY,EAAOwgB,UAAUz5B,GACjBiZ,EAAOwgB,UAAU,GAEV1+B,EAAKmf,WAAa,ECrU7B,gBAAM5Y,GAASC,IAAO5uB,IAAI,8BAOnB,SAASsnD,GAAYhhB,GAA6D,IAA7Cuc,EAA6C58B,UAAApnB,OAAA,QAAAS,IAAA2mB,UAAA,IAAAA,UAAA,GAC/EshC,EAAMxC,GAAUze,GAEtB,GAAKihB,EAAL,CAIA,IAAIC,EACAC,EARiFtoD,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAUrF,QAAAC,EAAAC,EAAmB+nD,EAAI/B,MAAvB/lD,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAA8B,KAAnBymD,EAAmBrmD,EAAAnB,MACpBgnD,EAAYQ,EAAKzlD,KAAKunD,OAAOj/B,cAE/B28B,EAAUuC,SAAS,QACnBH,EAAW5B,EACJR,EAAUuC,SAAS,UAC1BF,EAAW7B,IAhBkE,MAAA9lD,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GAsBrF,GAAKmoD,EAAL,CAKA,GAAKC,EAAL,CAKA,IAAM9lC,EHTH,SAAmB2kB,GAKtB,IAJA,IAAMshB,EAAoB,GACpBvoC,EAAiB,GACjBwoC,EAAyB,GAExBvhB,EAAOiB,YAAY,CACtB,IAAMugB,EAAcxhB,EAAOI,MACrB+f,EAAangB,EAAOI,MACpBnmB,EAAU+lB,EAAOI,MACjBqhB,EAAgBzhB,EAAOI,MAE7B,GAAoB,IAAhBohB,EACA,MAEA,GAAIC,IAAkBtB,EAAa,GAC/B,MAAM1jD,MAAK,oDAAAC,OAC6CyjD,EAChD,GAFG,UAAAzjD,OAEQ+kD,EAFR,MAMf,GAAoB,IAAhBD,EAAmB,CAKnB,IAHA,IAAME,EAAeppC,KAAKkX,MAAMiyB,EAAgBpD,IAC1Ce,EAAiBpf,EAAO9nB,SAErB2O,EAAI,EAAGA,EAAI66B,IAAgB76B,EAAG,CACnC,IAAMkd,EAAU/D,EAAO4B,MACjB+f,EAAW3hB,EAAO4hB,SAAS,IAC3B1nC,EAAa8lB,EAAO4B,MACpBigB,EAAW7hB,EAAO4hB,SAAS,GAC3BrqD,EAAIyoC,EAAOb,MACX3nC,EAAIwoC,EAAOb,MACXlnC,EAAI+nC,EAAOb,MACX6L,EAAchL,EAAOiL,MAAQ,MAAU,EAAI3yB,KAAKuwB,GAChDqC,EAAclL,EAAOiL,MAAQ,MAAU,EAAI3yB,KAAKuwB,GAChDsC,EAAcnL,EAAOiL,MAAQ,MAAU,EAAI3yB,KAAKuwB,GAEhDiZ,EAAW9hB,EAAO4hB,SAAS,IAEjCN,EAAKx+B,KAAK,CACNihB,UACA7pB,aACAhC,SAAU,IAAIlgB,EAAKT,EAAGC,EAAGS,GACzBkiB,SAAU,IAAIniB,EAAKgzC,EAAYE,EAAYC,GAC3ClxB,UACA8nC,QAAS,CAACJ,EAAUE,EAAUC,KAItC,IAAME,EAAahiB,EAAO9nB,SAAWknC,EAEjC4C,IAAeP,IACfp5B,GAAOyI,KAAP,QAAAp0B,OACYslD,EADZ,+BAAAtlD,OACoD+kD,EADpD,qBAAA/kD,OACqF8kD,EADrF,eAGAxhB,EAAOM,KAAKmhB,EAAgBO,SAE7B,GAAoB,IAAhBR,EAAmB,CAK1B,IAHA,IAAMS,EAAY3pC,KAAKkX,MAAMiyB,EAAgBnD,IACvCc,EAAiBpf,EAAO9nB,SAErB2O,EAAI,EAAGA,EAAIo7B,IAAap7B,EAAG,CAChC,IAAMkd,EAAU/D,EAAO4B,MACjB+f,EAAW3hB,EAAO4hB,SAAS,IAC3B1nC,EAAa8lB,EAAO4B,MACpBigB,EAAW7hB,EAAO4hB,SAAS,GAC3BrqD,EAAIyoC,EAAOb,MACX3nC,EAAIwoC,EAAOb,MACXlnC,EAAI+nC,EAAOb,MACX6L,EAAchL,EAAOiL,MAAQ,MAAU,EAAI3yB,KAAKuwB,GAChDqC,EAAclL,EAAOiL,MAAQ,MAAU,EAAI3yB,KAAKuwB,GAChDsC,EAAcnL,EAAOiL,MAAQ,MAAU,EAAI3yB,KAAKuwB,GAChDiZ,EAAW9hB,EAAO4hB,SAAS,GAC3B7f,EAAQ/B,EAAOb,MACf+iB,EAAWliB,EAAO4hB,SAAS,IAC3BO,EAAOniB,EAAOI,MACdgiB,EAAWpiB,EAAO4hB,SAAS,GAEjC7oC,EAAK+J,KAAK,CACNihB,UACA7pB,aACAhC,SAAU,IAAIlgB,EAAKT,EAAGC,EAAGS,GACzBkiB,SAAU,IAAIniB,EAAKgzC,EAAYE,EAAYC,GAC3CgX,OACAloC,UACA8nB,QACAggB,QAAS,CAACJ,EAAUE,EAAUC,EAAUI,EAAUE,KAI1D,IAAMJ,EAAahiB,EAAO9nB,SAAWknC,EAEjC4C,IAAeP,IACfp5B,GAAOyI,KAAP,QAAAp0B,OACYslD,EADZ,+BAAAtlD,OACoD+kD,EADpD,qBAAA/kD,OACqF8kD,EADrF,YAGAxhB,EAAOM,KAAKmhB,EAAgBO,SAIhCT,EAASz+B,KAAK,CACV0+B,cACArB,aACAlmC,UACAwnC,gBACA3/B,KAAMke,EAAO4hB,SAASH,KAMtC,MAAO,CAAEH,OAAMvoC,OAAMwoC,YGxGTc,CAAUC,GAAe,IAAIllB,GAAkB8jB,EAASp/B,KAAM6a,GAAWqB,UAC/EukB,EAAMjG,GACRgG,GAAe,IAAIllB,GAAkB+jB,EAASr/B,KAAM6a,GAAWqB,SAC/Due,GAEAngD,EAAU,EACVyc,EAA+B,GAEnC,GAAI0pC,EAAIxF,iBAAiBxkD,OAAQ,CAC7B,IAAMiqD,EAuHd,SACIC,EACAC,GAEA,IAAIxqC,EAAW,EACXyqC,GAAa,EACXC,EAA0B,GAHP/tB,GAAA,EAAAC,GAAA,EAAAC,OAAA/7B,EAAA,IAKzB,QAAAi8B,EAAAD,EAAwBytB,EAAxBtpD,OAAAC,cAAAy7B,GAAAI,EAAAD,EAAA37B,QAAAC,MAAAu7B,GAAA,EAAoC,KAAzBguB,EAAyB5tB,EAAAn9B,MAKhC,GAJIogB,IAAawqC,IACbC,GAAa,GAGbA,IACAC,EAAS9/B,KAAK+/B,GAGW,IAArBA,EAAU3F,QACV,MAIRhlC,GAAY2qC,EAAU97B,MAnBD,MAAAvtB,GAAAs7B,GAAA,EAAAC,EAAAv7B,EAAA,YAAAq7B,GAAA,MAAAG,EAAAv7B,QAAAu7B,EAAAv7B,SAAA,WAAAq7B,EAAA,MAAAC,GAsBzB,OAAO4tB,EAAaC,OAAW5pD,EAhJR8pD,CAAoBP,EAAIvF,aAAcuF,EAAIxF,iBAAiB,IAE1EyF,EAEA3pC,EAwEZ,SACIwC,EACAjf,EACAomD,EACAjG,GAGA,IAAM1jC,EAAgB,IAAIjgB,IAFbywB,GAAA,EAAAC,GAAA,EAAAC,OAAAvwB,EAAA,IAIb,QAAAwwB,EAAAC,EAAkBpO,EAAItC,KAAtB5f,OAAAC,cAAAiwB,GAAAG,EAAAC,EAAApwB,QAAAC,MAAA+vB,GAAA,EAA4B,KAAjB05B,EAAiBv5B,EAAA1xB,MACxB+gB,EAActf,IAAIwpD,EAAI9oC,QAAS,IALtB,MAAAzgB,GAAA8vB,GAAA,EAAAC,EAAA/vB,EAAA,YAAA6vB,GAAA,MAAAI,EAAAhwB,QAAAgwB,EAAAhwB,SAAA,WAAA6vB,EAAA,MAAAC,GAAA,IAAA0J,GAAA,EAAAC,GAAA,EAAAC,OAAAn6B,EAAA,IAQb,QAAAq6B,EAAAD,EAAkB/X,EAAIimC,KAAtBnoD,OAAAC,cAAA65B,GAAAI,EAAAD,EAAA/5B,QAAAC,MAAA25B,GAAA,EAA4B,KAAjB+vB,EAAiB3vB,EAAAv7B,MACxB+gB,EAActf,IAAIypD,EAAI/oC,QAAS,IATtB,MAAAzgB,GAAA05B,GAAA,EAAAC,EAAA35B,EAAA,YAAAy5B,GAAA,MAAAG,EAAA35B,QAAA25B,EAAA35B,SAAA,WAAAy5B,EAAA,MAAAC,GAYb,IAAM8vB,EAAUT,EAAWlqD,OAAO,SAAA4qD,GAAE,MAAoB,qBAAhBA,EAAGzF,WAZ9BxpB,GAAA,EAAAC,GAAA,EAAAC,OAAAn7B,EAAA,IAcb,QAAAq7B,EAAAD,EAAqB6uB,EAArB9pD,OAAAC,cAAA66B,GAAAI,EAAAD,EAAA/6B,QAAAC,MAAA26B,GAAA,EAA8B,KAAnBkvB,EAAmB9uB,EAAAv8B,MACpBmiB,EAAUkpC,EAAOp9B,KAAK,GACtBywB,EAAa2M,EAAOp9B,KAAK,GAC/BlN,EAActf,IAAI0gB,EAASu8B,IAjBlB,MAAAh9C,GAAA06B,GAAA,EAAAC,EAAA36B,EAAA,YAAAy6B,GAAA,MAAAG,EAAA36B,QAAA26B,EAAA36B,SAAA,WAAAy6B,EAAA,MAAAC,GAoBb,IAAMivB,EAAsB,IAAI1pC,MApBnB4a,GAAA,EAAAC,GAAA,EAAAC,OAAAx7B,EAAA,IAsBb,QAAA07B,EAAAD,EAAoC5b,EAAcmR,UAAlD7wB,OAAAC,cAAAk7B,GAAAI,EAAAD,EAAAp7B,QAAAC,MAAAg7B,GAAA,EAA6D,KAAApK,EAAAwK,EAAA58B,MAAAqyB,EAAA1yB,OAAA2yB,GAAA,EAAA3yB,CAAAyyB,EAAA,GAAjDjQ,EAAiDkQ,EAAA,GAAxCqsB,EAAwCrsB,EAAA,GACzD,IACIi5B,EAAoBtgC,KAAKqzB,GAAWI,YAAYn6C,EAAS6d,EAASu8B,IACpE,MAAOr+C,GACL,IAAIokD,EAGA,MAAMpkD,EAFNkwB,GAAOe,MAAP,wBAAsCjxB,KA3BrC,MAAAqB,GAAA+6B,GAAA,EAAAC,EAAAh7B,EAAA,YAAA86B,GAAA,MAAAG,EAAAh7B,QAAAg7B,EAAAh7B,SAAA,WAAA86B,EAAA,MAAAC,GAmCb,OAAO4uB,EAAoB33B,KAAK,SAAC/M,EAAG+P,GAAJ,OAAU/P,EAAEnC,KAAKL,MAAQuS,EAAElS,KAAKL,OAASwC,EAAE9kB,GAAK60B,EAAE70B,KAhH1DypD,CAAkBhoC,EADlCjf,EAsDZ,SAAqBomD,GACjB,IAAMc,EAAcd,EAAW1hC,KAAK,SAAAoiC,GAAE,MAAoB,gBAAhBA,EAAGzF,WAE7C,IAAI6F,EAYA,OADAj7B,GAAOk7B,MAAM,8CACN,EAXP,OAAQD,EAAYv9B,KAAK,IACrB,QACA,KAAK,EACD,OAAO,EACX,KAAK,EACD,OAAO,EACX,KAAK,EACD,OAAO,GAjEDy9B,CAAYhB,GAC0BA,EAAYjG,GAE5Dl0B,GAAOyI,KAAP,qBAAAp0B,OAAiC6lD,EAAIxF,iBAAiB,GAAtD,sBAGJ10B,GAAOyI,KAAK,+BAGhB,OAAO,IAAIrY,GACPyoC,EAAStnD,GACT2oD,EAAI3F,WACJ2F,EAAI5pC,kBACJ4pC,EAAI3pC,iBACJxc,EACAyc,EACewC,EAAIimC,KAiIX1kD,IAAI,SAAA6mD,GAAY,IAAAC,EACJD,EAASvrC,SAArB3gB,EADgBmsD,EAChBnsD,EAAGC,EADaksD,EACblsD,EAAGS,EADUyrD,EACVzrD,EACR0rD,EAAMF,EAAStpC,SACrB,OAAO,IAAIe,GACPuoC,EAASxpC,QACTwpC,EAASvpC,WACT,IAAIliB,EAAKT,EAAGC,EAAGS,GACf,IAAID,EAAK2rD,EAAIpsD,EAAGosD,EAAInsD,EAAGmsD,EAAI1rD,GAC3B6N,GAAW89C,YAAYH,EAAS1f,SAChC0f,KAKZ,SAAwBrnD,EAAiB2c,GACrC,OAAOA,EAAKnc,IAAI,SAAAinD,GAAY,IAAAC,EACJD,EAAS3rC,SAArB3gB,EADgBusD,EAChBvsD,EAAGC,EADassD,EACbtsD,EAAGS,EADU6rD,EACV7rD,EACR0rD,EAAME,EAAS1pC,SACrB,OAAO,IAAIyB,GACPioC,EAAS5pC,QACT4pC,EAAS3pC,WACT,IAAIliB,EAAKT,EAAGC,EAAGS,GACf,IAAID,EAAK2rD,EAAIpsD,EAAGosD,EAAInsD,EAAGmsD,EAAI1rD,GAQvC,SAAsBmE,EAAtByyB,GAA2F,IAAlDkV,EAAkDlV,EAAlDkV,QAAShC,EAAyClT,EAAzCkT,MAAOogB,EAAkCtzB,EAAlCszB,KAAMloC,EAA4B4U,EAA5B5U,QACrD8pC,EAAUzrC,KAAKouB,IAAI3E,EAAQ,GAAK,KAEtC,UAAArlC,OAAWqnC,EAAX,MAAArnC,OAAuBylD,EAAO,EAA9B,MAAAzlD,OAAoCN,IAChC,OAAAM,OAAQ,GAAR,UACI,OAAOV,EAAQyC,MACnB,OAAA/B,OAAQ,GAAR,UACI,OAAOV,EAAQ0C,QACnB,OAAAhC,OAAQ,GAAR,UACI,OAAOV,EAAQ2C,UAEnB,OAAAjC,OAAQ,GAAR,UACI,OAAOV,EAAQiD,UACnB,OAAAvC,OAAQ,GAAR,UACI,OAAOV,EAAQkD,SACnB,OAAAxC,OAAQ,GAAR,UACI,OAAOV,EAAQmD,UAEnB,OAAAzC,OAAQ,IAAR,UACI,OAAOV,EAAQyE,SACnB,OAAA/D,OAAQ,IAAR,UACI,OAAOV,EAAQ4F,UACnB,OAAAlF,OAAQ,IAAR,UACI,OAAOV,EAAQ0E,WACnB,OAAAhE,OAAQ,IAAR,UACI,OAAOV,EAAQ6F,YACnB,OAAAnF,OAAQ,IAAR,UACI,OAAOV,EAAQ2E,WACnB,OAAAjE,OAAQ,IAAR,UACI,OAAOV,EAAQ8F,YAEnB,OAAApF,OAAQ,IAAR,UACI,OAAOV,EAAQiH,UACnB,OAAAvG,OAAQ,IAAR,UACI,OAAOV,EAAQkH,QACnB,OAAAxG,OAAQ,IAAR,UACI,OAAOV,EAAQmH,QAEnB,OAAAzG,OAAQ,IAAR,UACI,OAAOV,EAAQiJ,MACnB,OAAAvI,OAAQ,IAAR,UACI,OAAOV,EAAQkJ,QACnB,OAAAxI,OAAQ,IAAR,UACI,OAAOV,EAAQmJ,QACnB,OAAAzI,OAAQ,IAAR,UACI,OAAOV,EAAQsJ,MACnB,OAAA5I,OAAQ,IAAR,UACI,OAAOV,EAAQuJ,UACnB,OAAA7I,OAAQ,IAAR,UACI,OAAOV,EAAQwJ,eAGvB,UAAA9I,OAAWqnC,EAAX,MAAArnC,OAAuBylD,EAAO,EAA9B,MAAAzlD,OAAoCN,IAChC,OAAAM,OAAQ,GAAR,UACI,OAAOV,EAAQiC,UACnB,OAAAvB,OAAQ,GAAR,UACI,OAAOV,EAAQgF,WACnB,OAAAtE,OAAQ,GAAR,UACI,OAAOV,EAAQkC,UACnB,OAAAxB,OAAQ,GAAR,UACI,OAAOV,EAAQiF,WACnB,OAAAvE,OAAQ,GAAR,UACI,OAAOV,EAAQmC,SACnB,OAAAzB,OAAQ,GAAR,UACI,OAAOV,EAAQkF,UACnB,OAAAxE,OAAQ,GAAR,UACI,OAAOV,EAAQuI,UACnB,OAAA7H,OAAQ,GAAR,UACI,OAAOV,EAAQoC,QACnB,OAAA1B,OAAQ,GAAR,UACI,OAAOV,EAAQmF,UACnB,OAAAzE,OAAQ,GAAR,UACI,OAAOV,EAAQwI,SAEnB,OAAA9H,OAAQ,IAAR,UACI,OAAOV,EAAQ0D,QACnB,OAAAhD,OAAQ,IAAR,UACI,OAAOV,EAAQsG,SACnB,OAAA5F,OAAQ,IAAR,UACI,OAAOV,EAAQ2D,QACnB,OAAAjD,OAAQ,IAAR,UACI,OAAOV,EAAQuG,SAEnB,OAAA7F,OAAQ,IAAR,UACI,OAAOV,EAAQ6G,YACnB,OAAAnG,OAAQ,IAAR,UACI,OAAOV,EAAQ8G,aACnB,OAAApG,OAAQ,IAAR,UACI,OAAOV,EAAQ+G,SACnB,OAAArG,OAAQ,IAAR,UACI,OAAOV,EAAQgH,SACnB,OAAAtG,OAAQ,IAAR,UACI,OAAOV,EAAQoH,SACnB,OAAA1G,OAAQ,IAAR,UACI,OAAOV,EAAQqH,UAEnB,OAAA3G,OAAQ,IAAR,UACI,OAAOV,EAAQ+H,QACnB,OAAArH,OAAQ,IAAR,UACI,OAAOV,EAAQgI,SACnB,OAAAtH,OAAQ,IAAR,UACI,OAAOud,EAAU,GAAKje,EAAQ2H,QAAU3H,EAAQoI,SACpD,OAAA1H,OAAQ,IAAR,UACI,OAAOud,EAAU,GAAKje,EAAQ2H,QAAU3H,EAAQqI,UAEpD,OAAA3H,OAAQ,IAAR,UACI,OAAOV,EAAQ4I,SACnB,OAAAlI,OAAQ,IAAR,UACI,OAAOV,EAAQ6I,UACnB,OAAAnI,OAAQ,IAAR,UACI,OAAOV,EAAQ+I,GACnB,OAAArI,OAAQ,IAAR,UACI,OAAOV,EAAQgJ,OACnB,OAAAtI,OAAQ,IAAR,UACI,OAAOV,EAAQoJ,QACnB,OAAA1I,OAAQ,IAAR,UACI,OAAOV,EAAQqJ,cACnB,OAAA3I,OAAQ,IAAR,UACI,OAAOqnD,EAAU/nD,EAAQyJ,YAAczJ,EAAQ2J,SACnD,OAAAjJ,OAAQ,IAAR,UACI,OAAOqnD,EAAU/nD,EAAQ0J,WAAa1J,EAAQ2J,SAGtD,UAAAjJ,OAAWqnC,EAAX,MAAArnC,OAAuBN,IACnB,OAAAM,OAAQ,GAAR,OACI,OAAOV,EAAQqC,OACnB,OAAA3B,OAAQ,GAAR,OACI,OAAOV,EAAQuF,QACnB,OAAA7E,OAAQ,GAAR,OACI,OAAOqnD,EAAU/nD,EAAQuC,WAAavC,EAAQwC,cAClD,OAAA9B,OAAQ,GAAR,OACI,OAAOqnD,EAAU/nD,EAAQiG,YAAcjG,EAAQkG,eAEnD,OAAAxF,OAAQ,GAAR,OACI,OAAOV,EAAQ6C,cACnB,OAAAnC,OAAQ,GAAR,OACI,OAAOV,EAAQ2F,eACnB,OAAAjF,OAAQ,GAAR,OACI,OAAOud,EAAU,GAAKje,EAAQ0H,QAAUqgD,EAAU/nD,EAAQ8C,WAAa9C,EAAQ+C,QACnF,OAAArC,OAAQ,GAAR,OACI,OAAOud,EAAU,GACXje,EAAQ0H,QACRqgD,EACA/nD,EAAQyF,YACRzF,EAAQ0F,SAClB,OAAAhF,OAAQ,GAAR,OACI,OAAOV,EAAQgD,WACnB,OAAAtC,OAAQ,IAAR,OACI,OAAOqnD,EAAU/nD,EAAQoD,cAAgBpD,EAAQqD,aACrD,OAAA3C,OAAQ,IAAR,OACI,OAAOV,EAAQsD,QACnB,OAAA5C,OAAQ,IAAR,OACI,OAAOV,EAAQmG,SAEnB,OAAAzF,OAAQ,IAAR,OACI,OAAOV,EAAQ4D,OACnB,OAAAlD,OAAQ,IAAR,OACI,OAAOV,EAAQwG,QACnB,OAAA9F,OAAQ,IAAR,OACI,OAAOqnD,EAAU/nD,EAAQ6D,UAAY7D,EAAQ8D,UACjD,OAAApD,OAAQ,IAAR,OACI,OAAOV,EAAQ+D,SACnB,OAAArD,OAAQ,IAAR,OACI,OAAOV,EAAQgE,OACnB,OAAAtD,OAAQ,IAAR,OACI,OAAOV,EAAQiE,UACnB,OAAAvD,OAAQ,IAAR,OACI,OAAOV,EAAQyG,WAEnB,OAAA/F,OAAQ,IAAR,OACI,OAAOV,EAAQmE,SACnB,OAAAzD,OAAQ,IAAR,OACI,OAAOV,EAAQ0G,UACnB,OAAAhG,OAAQ,IAAR,OACI,OAAOV,EAAQoE,cACnB,OAAA1D,OAAQ,IAAR,OACI,OAAOV,EAAQ2G,eACnB,OAAAjG,OAAQ,IAAR,OACI,OAAOV,EAAQqE,WACnB,OAAA3D,OAAQ,IAAR,OACI,OAAOV,EAAQuE,aACnB,OAAA7D,OAAQ,IAAR,OACI,OAAOV,EAAQwE,UACnB,OAAA9D,OAAQ,IAAR,OACI,OAAOV,EAAQ+F,WACnB,OAAArF,OAAQ,IAAR,OACI,OAAOV,EAAQ4E,QACnB,OAAAlE,OAAQ,IAAR,OACI,OAAOV,EAAQ8E,KAEnB,OAAApE,OAAQ,IAAR,OACI,OAAOV,EAAQ4C,OACnB,OAAAlC,OAAQ,IAAR,OACI,OAAOV,EAAQ4H,WACnB,OAAAlH,OAAQ,IAAR,OACI,OAAOV,EAAQyD,QAGnB,OAAA/C,OAAQ,IAAR,OACI,OAAOV,EAAQkE,OACnB,OAAAxD,OAAQ,IAAR,OACI,OAAOV,EAAQ+E,SACnB,OAAArE,OAAQ,IAAR,OACI,OAAOV,EAAQsI,SACnB,OAAA5H,OAAQ,IAAR,OACI,OAAOV,EAAQgG,SACnB,OAAAtF,OAAQ,IAAR,OACI,OAAOV,EAAQ4G,UAEnB,OAAAlG,OAAQ,IAAR,OACI,OAAOV,EAAQsH,QACnB,OAAA5G,OAAQ,IAAR,OACI,OAAOV,EAAQuH,IACnB,OAAA7G,OAAQ,IAAR,OACI,OAAOV,EAAQwH,MAEnB,OAAA9G,OAAQ,IAAR,OACI,OAAOV,EAAQ6H,SACnB,OAAAnH,OAAQ,IAAR,OACI,OAAOV,EAAQ8H,SACnB,OAAApH,OAAQ,IAAR,OACI,OAAOV,EAAQiI,OACnB,OAAAvH,OAAQ,IAAR,OACI,OAAOV,EAAQkI,QACnB,OAAAxH,OAAQ,IAAR,OACI,OAAOV,EAAQyH,QAEnB,OAAA/G,OAAQ,IAAR,OACI,OAAOV,EAAQyI,OACnB,OAAA/H,OAAQ,IAAR,OACI,OAAOqnD,EAAU/nD,EAAQ0I,gBAAkB1I,EAAQ2I,MACvD,OAAAjI,OAAQ,IAAR,OACI,OAAOV,EAAQ8I,WAGvB,OAAQi/B,GACJ,KAAK,EACD,OAAO/nC,EAAQgB,UACnB,KAAK,EACD,OAAOhB,EAAQiB,YACnB,KAAK,EACD,OAAOjB,EAAQkB,WACnB,KAAK,GACD,OAAOlB,EAAQmB,UACnB,KAAK,GACD,OAAOnB,EAAQoB,QACnB,KAAK,GACD,OAAOpB,EAAQqB,UACnB,KAAK,GACD,OAAOrB,EAAQsB,QACnB,KAAK,GACD,OAAOtB,EAAQuB,YACnB,KAAK,GACD,OAAOvB,EAAQwB,WACnB,KAAK,GACD,OAAOxB,EAAQyB,UACnB,KAAK,GACD,OAAOzB,EAAQ0B,OACnB,KAAK,GACD,OAAO1B,EAAQ2B,UACnB,KAAK,GACD,OAAO3B,EAAQ4B,UACnB,KAAK,GACD,OAAO5B,EAAQ6B,MACnB,KAAK,GACD,OAAO7B,EAAQ8B,MACnB,KAAK,IACD,OAAO9B,EAAQ+B,SACnB,KAAK,IACD,OAAO/B,EAAQgC,OAGvB,OAAOhC,EAAQe,QAvRPinD,CAAa5nD,EAASynD,GACtBA,KAxJJI,CAAe7nD,EAASif,EAAItC,MAC5BsC,EAAIkmC,SACJgB,EAAIzgC,MAnCJuG,GAAOe,MAAM,mCALbf,GAAOe,MAAM,+BA4Cd,SAAS86B,GAAgBhnC,EAAc4hC,GAC1C,IAqbmB/lC,EAXMD,EA1anBuC,EHuEH,SAAAsG,GAAuE,IAAlD2/B,EAAkD3/B,EAAlD2/B,KAAMvoC,EAA4C4I,EAA5C5I,KAAMwoC,EAAsC5/B,EAAtC4/B,SAC9BlkB,EAAS,IAAIob,GACf6I,EAAK/oD,QAAU,GAAK8lD,IAChBtlC,EAAKxgB,QAAU,GAAK+lD,IACpBiD,EAASlB,OAAO,SAAC3hC,EAAG+P,GAAJ,OAAU/P,EAAI+P,EAAE0xB,YAAY,IAE9CngB,EAAS,IAAIyX,GAA8Bpa,EAAQV,GAAWqB,QAE9DmmB,EAAeC,mBAAQ9C,EAAM,SAAA0B,GAAG,OAAIA,EAAI/oC,UACxCoqC,EAAe5sD,OAAOkB,KAAKwrD,GAC5BvnD,IAAI,SAAA/E,GAAG,OAAIysD,SAASzsD,EAAK,MACzB4zB,KAAK,SAAC/M,EAAG+P,GAAJ,OAAU/P,EAAI+P,IAXkD51B,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAa1E,QAAAC,EAAAC,EAAsBmrD,EAAtBlrD,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAoC,KAAzBohB,EAAyBhhB,EAAAnB,MAC1BysD,EAAYJ,EAAalqC,GACzBwnC,EAAgB8C,EAAUhsD,OAAS8lD,GACzCre,EAAOwgB,UAAU,GACjBxgB,EAAOwgB,UAAUiB,EAAgB,IACjCzhB,EAAOwgB,UAAUvmC,GACjB+lB,EAAOwgB,UAAUiB,GANe,IAAAxtB,GAAA,EAAAC,GAAA,EAAAC,OAAAn7B,EAAA,IAQhC,QAAAq7B,EAAAD,EAAkBmwB,EAAlBprD,OAAAC,cAAA66B,GAAAI,EAAAD,EAAA/6B,QAAAC,MAAA26B,GAAA,EAA6B,KAAlB+uB,EAAkB3uB,EAAAv8B,MACzBkoC,EAAOsgB,UAAU0C,EAAIjf,SACrB/D,EAAO+gB,eAAeiC,EAAIjB,QAAQ,IAClC/hB,EAAOsgB,UAAU0C,EAAI9oC,YACrB8lB,EAAO+gB,eAAeiC,EAAIjB,QAAQ,IAClC/hB,EAAOwkB,UAAUxB,EAAI9qC,SAAS3gB,GAC9ByoC,EAAOwkB,UAAUxB,EAAI9qC,SAAS1gB,GAC9BwoC,EAAOwkB,UAAUxB,EAAI9qC,SAASjgB,GAC9B+nC,EAAOykB,UAAUnsC,KAAKmX,MAAOuzB,EAAI7oC,SAAS5iB,GAAK,EAAI+gB,KAAKuwB,IAAO,QAC/D7I,EAAOykB,UAAUnsC,KAAKmX,MAAOuzB,EAAI7oC,SAAS3iB,GAAK,EAAI8gB,KAAKuwB,IAAO,QAC/D7I,EAAOykB,UAAUnsC,KAAKmX,MAAOuzB,EAAI7oC,SAASliB,GAAK,EAAIqgB,KAAKuwB,IAAO,QAC/D7I,EAAO+gB,eAAeiC,EAAIjB,QAAQ,KAnBN,MAAAvoD,GAAA06B,GAAA,EAAAC,EAAA36B,EAAA,YAAAy6B,GAAA,MAAAG,EAAA36B,QAAA26B,EAAA36B,SAAA,WAAAy6B,EAAA,MAAAC,KAbsC,MAAA36B,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GAoC1E,IAAM2rD,EAAeN,mBAAQrrC,EAAM,SAAAgqC,GAAG,OAAIA,EAAI9oC,UACxC0qC,EAAeltD,OAAOkB,KAAK+rD,GAC5B9nD,IAAI,SAAA/E,GAAG,OAAIysD,SAASzsD,EAAK,MACzB4zB,KAAK,SAAC/M,EAAG+P,GAAJ,OAAU/P,EAAI+P,IAvCkDpF,GAAA,EAAAC,GAAA,EAAAC,OAAAvwB,EAAA,IAyC1E,QAAAwwB,EAAAC,EAAsBk7B,EAAtBxrD,OAAAC,cAAAiwB,GAAAG,EAAAC,EAAApwB,QAAAC,MAAA+vB,GAAA,EAAoC,KAAzBpP,EAAyBuP,EAAA1xB,MAC1B8sD,EAAYF,EAAazqC,GACzBwnC,EAAgBmD,EAAUrsD,OAAS+lD,GACzCte,EAAOwgB,UAAU,GACjBxgB,EAAOwgB,UAAUiB,EAAgB,IACjCzhB,EAAOwgB,UAAUvmC,GACjB+lB,EAAOwgB,UAAUiB,GANe,IAAAntB,GAAA,EAAAC,GAAA,EAAAC,OAAAx7B,EAAA,IAQhC,QAAA07B,EAAAD,EAAkBmwB,EAAlBzrD,OAAAC,cAAAk7B,GAAAI,EAAAD,EAAAp7B,QAAAC,MAAAg7B,GAAA,EAA6B,KAAlByuB,EAAkBruB,EAAA58B,MACzBkoC,EAAOsgB,UAAUyC,EAAIhf,SACrB/D,EAAO+gB,eAAegC,EAAIhB,QAAQ,IAClC/hB,EAAOsgB,UAAUyC,EAAI7oC,YACrB8lB,EAAO+gB,eAAegC,EAAIhB,QAAQ,IAClC/hB,EAAOwkB,UAAUzB,EAAI7qC,SAAS3gB,GAC9ByoC,EAAOwkB,UAAUzB,EAAI7qC,SAAS1gB,GAC9BwoC,EAAOwkB,UAAUzB,EAAI7qC,SAASjgB,GAC9B+nC,EAAOykB,UAAUnsC,KAAKmX,MAAOszB,EAAI5oC,SAAS5iB,GAAK,EAAI+gB,KAAKuwB,IAAO,QAC/D7I,EAAOykB,UAAUnsC,KAAKmX,MAAOszB,EAAI5oC,SAAS3iB,GAAK,EAAI8gB,KAAKuwB,IAAO,QAC/D7I,EAAOykB,UAAUnsC,KAAKmX,MAAOszB,EAAI5oC,SAASliB,GAAK,EAAIqgB,KAAKuwB,IAAO,QAC/D7I,EAAO+gB,eAAegC,EAAIhB,QAAQ,IAClC/hB,EAAOwkB,UAAUzB,EAAIhhB,OACrB/B,EAAO+gB,eAAegC,EAAIhB,QAAQ,IAClC/hB,EAAOwgB,UAAUuC,EAAIZ,MACrBniB,EAAO+gB,eAAegC,EAAIhB,QAAQ,KAvBN,MAAAvoD,GAAA+6B,GAAA,EAAAC,EAAAh7B,EAAA,YAAA86B,GAAA,MAAAG,EAAAh7B,QAAAg7B,EAAAh7B,SAAA,WAAA86B,EAAA,MAAAC,KAzCsC,MAAAh7B,GAAA8vB,GAAA,EAAAC,EAAA/vB,EAAA,YAAA6vB,GAAA,MAAAI,EAAAhwB,QAAAgwB,EAAAhwB,SAAA,WAAA6vB,EAAA,MAAAC,GAAA,IAAA0J,GAAA,EAAAC,GAAA,EAAAC,OAAAn6B,EAAA,IAoE1E,QAAAq6B,EAAAD,EAAsBmuB,EAAtBpoD,OAAAC,cAAA65B,GAAAI,EAAAD,EAAA/5B,QAAAC,MAAA25B,GAAA,EAAgC,KAArB8uB,EAAqB1uB,EAAAv7B,MAC5BkoC,EAAOwgB,UAAUuB,EAAQP,aACzBxhB,EAAOwgB,UAAUuB,EAAQ5B,YACzBngB,EAAOwgB,UAAUuB,EAAQ9nC,SACzB+lB,EAAOwgB,UAAUuB,EAAQN,eACzBzhB,EAAO+gB,eAAegB,EAAQjgC,OAzEwC,MAAAtoB,GAAA05B,GAAA,EAAAC,EAAA35B,EAAA,YAAAy5B,GAAA,MAAAG,EAAA35B,QAAA25B,EAAA35B,SAAA,WAAAy5B,EAAA,MAAAC,GAkF1E,OALA6M,EAAOwgB,UAAU,GACjBxgB,EAAOwgB,UAAU,GACjBxgB,EAAOwgB,UAAU,GACjBxgB,EAAOwgB,UAAU,GAEVnjB,EGzJKwnB,CAAU,CAClBvD,MAyaqBxoC,EAzaKoE,EAAMpE,QA0a7BA,EAAQlc,IAAI,SAAAmkC,GAAM,MAAK,CAC1BgD,QAAShD,EAAO9lC,KAAK8K,OACrBmU,WAAY6mB,EAAO7mB,WACnBhC,SAAU6oB,EAAOgU,iBACjB56B,SAAU4mB,EAAO5mB,SACjBF,QAAS8mB,EAAO9mB,QAChB8nC,QAAShhB,EAAO1lB,IAAI0mC,YA/apBhpC,MAmbeA,EAnbKmE,EAAMnE,KAobvBA,EAAKnc,IAAI,SAAAmmD,GAEZ,IAAM+B,EAoBd,SACI7pD,GAEA,OAAQA,GACJ,QACI,MAAM,IAAIwB,MAAJ,mBAAAC,OAA6BzB,EAAKgB,KAAlC,MAEV,KAAKD,EAAQe,QACT,OAEJ,KAAKf,EAAQgB,UACT,MAAO,CAAE+mC,QAAS,EAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQiB,YACT,MAAO,CAAE8mC,QAAS,EAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQkB,WACT,MAAO,CAAE6mC,QAAS,EAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQmB,UACT,MAAO,CAAE4mC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQoB,QACT,MAAO,CAAE2mC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQqB,UACT,MAAO,CAAE0mC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQsB,QACT,MAAO,CAAEymC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQuB,YACT,MAAO,CAAEwmC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQwB,WACT,MAAO,CAAEumC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQyB,UACT,MAAO,CAAEsmC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ0B,OACT,MAAO,CAAEqmC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ2B,UACT,MAAO,CAAEomC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ4B,UACT,MAAO,CAAEmmC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ6B,MACT,MAAO,CAAEkmC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ8B,MACT,MAAO,CAAEimC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ+B,SACT,MAAO,CAAEgmC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQgC,OACT,MAAO,CAAE+lC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAE/C,KAAK/nD,EAAQiC,UACT,MAAO,CAAE8lC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQkC,UACT,MAAO,CAAE6lC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQmC,SACT,MAAO,CAAE4lC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQoC,QACT,MAAO,CAAE2lC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQqC,OACT,MAAO,CAAE0lC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQuC,WACT,MAAO,CAAEwlC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQwC,cACT,MAAO,CAAEulC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQyC,MACT,MAAO,CAAEslC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ0C,QACT,MAAO,CAAEqlC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ2C,UACT,MAAO,CAAEolC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ4C,OACT,MAAO,CAAEmlC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAE/C,KAAK/nD,EAAQ6C,cACT,MAAO,CAAEklC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ8C,WACT,MAAO,CAAEilC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ+C,QACT,MAAO,CAAEglC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQgD,WACT,MAAO,CAAE+kC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQiD,UACT,MAAO,CAAE8kC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQkD,SACT,MAAO,CAAE6kC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQmD,UACT,MAAO,CAAE4kC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQoD,cACT,MAAO,CAAE2kC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQqD,aACT,MAAO,CAAE0kC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQsD,QACT,MAAO,CAAEykC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQyD,QACT,MAAO,CAAEskC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAE/C,KAAK/nD,EAAQ0D,QACT,MAAO,CAAEqkC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ2D,QACT,MAAO,CAAEokC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ4D,OACT,MAAO,CAAEmkC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ6D,UACT,MAAO,CAAEkkC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ8D,UACT,MAAO,CAAEikC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ+D,SACT,MAAO,CAAEgkC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQgE,OACT,MAAO,CAAE+jC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQiE,UACT,MAAO,CAAE8jC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQkE,OACT,MAAO,CAAE6jC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAE/C,KAAK/nD,EAAQmE,SACT,MAAO,CAAE4jC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQoE,cACT,MAAO,CAAE2jC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQqE,WACT,MAAO,CAAE0jC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQuE,aACT,MAAO,CAAEwjC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQwE,UACT,MAAO,CAAEujC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQyE,SACT,MAAO,CAAEsjC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ0E,WACT,MAAO,CAAEqjC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ2E,WACT,MAAO,CAAEojC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ4E,QACT,MAAO,CAAEmjC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ8E,KACT,MAAO,CAAEijC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ+E,SACT,MAAO,CAAEgjC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAE/C,KAAK/nD,EAAQgF,WACT,MAAO,CAAE+iC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQiF,WACT,MAAO,CAAE8iC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQkF,UACT,MAAO,CAAE6iC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQmF,UACT,MAAO,CAAE4iC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQuF,QACT,MAAO,CAAEwiC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQyF,YACT,MAAO,CAAEsiC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ0F,SACT,MAAO,CAAEqiC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ2F,eACT,MAAO,CAAEoiC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ4F,UACT,MAAO,CAAEmiC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ6F,YACT,MAAO,CAAEkiC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ8F,YACT,MAAO,CAAEiiC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ+F,WACT,MAAO,CAAEgiC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQgG,SACT,MAAO,CAAE+hC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAE/C,KAAK/nD,EAAQiG,YACT,MAAO,CAAE8hC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQkG,eACT,MAAO,CAAE6hC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQmG,SACT,MAAO,CAAE4hC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQsG,SACT,MAAO,CAAEyhC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQuG,SACT,MAAO,CAAEwhC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQwG,QACT,MAAO,CAAEuhC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQyG,WACT,MAAO,CAAEshC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ0G,UACT,MAAO,CAAEqhC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ2G,eACT,MAAO,CAAEohC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ4G,UACT,MAAO,CAAEmhC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAE/C,KAAK/nD,EAAQ6G,YACT,MAAO,CAAEkhC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ8G,aACT,MAAO,CAAEihC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ+G,SACT,MAAO,CAAEghC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQgH,SACT,MAAO,CAAE+gC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQiH,UACT,MAAO,CAAE8gC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQkH,QACT,MAAO,CAAE6gC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQmH,QACT,MAAO,CAAE4gC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQoH,SACT,MAAO,CAAE2gC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQqH,UACT,MAAO,CAAE0gC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQsH,QACT,MAAO,CAAEygC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQuH,IACT,MAAO,CAAEwgC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQwH,MACT,MAAO,CAAEugC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ4H,WACT,MAAO,CAAEmgC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAE/C,KAAK/nD,EAAQ6H,SACT,MAAO,CAAEkgC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ8H,SACT,MAAO,CAAEigC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ+H,QACT,MAAO,CAAEggC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQgI,SACT,MAAO,CAAE+/B,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQiI,OACT,MAAO,CAAE8/B,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQkI,QACT,MAAO,CAAE6/B,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ2H,QAEb,KAAK3H,EAAQoI,SACT,MAAO,CAAE2/B,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQqI,UACT,MAAO,CAAE0/B,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQyH,QACT,MAAO,CAAEsgC,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ0H,QACT,MAAO,CAAEqgC,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQsI,SACT,MAAO,CAAEy/B,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAE/C,KAAK/nD,EAAQuI,UACT,MAAO,CAAEw/B,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQwI,SACT,MAAO,CAAEu/B,QAAS,GAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQyI,OACT,MAAO,CAAEs/B,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ0I,gBACT,MAAO,CAAEq/B,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ2I,MACT,MAAO,CAAEo/B,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ4I,SACT,MAAO,CAAEm/B,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ6I,UACT,MAAO,CAAEk/B,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ8I,WACT,MAAO,CAAEi/B,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ+I,GACT,MAAO,CAAEg/B,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQgJ,OACT,MAAO,CAAE++B,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQiJ,MACT,MAAO,CAAE8+B,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQkJ,QACT,MAAO,CAAE6+B,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQmJ,QACT,MAAO,CAAE4+B,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQoJ,QACT,MAAO,CAAE2+B,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQqJ,cACT,MAAO,CAAE0+B,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQsJ,MACT,MAAO,CAAEy+B,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQuJ,UACT,MAAO,CAAEw+B,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQwJ,eACT,MAAO,CAAEu+B,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQyJ,YACT,MAAO,CAAEs+B,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ0J,WACT,MAAO,CAAEq+B,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,GAC/C,KAAK/nD,EAAQ2J,SACT,MAAO,CAAEo+B,QAAS,IAAOoe,KAAM,EAAG4B,SAAS,IAtS7BgB,CAAqBhC,EAAI9nD,MACvC8mC,EAAQghB,EAAI1nC,IAAI0mB,MAMpB,OAJI+iB,IACA/iB,GAAyB,QAAhBghB,EAAI1nC,IAAI0mB,OAAsB+iB,EAAUf,QAAU,EAAI,UAG5D,CACHhgB,QAAS+gB,EAAYA,EAAU/gB,QAAUgf,EAAI1nC,IAAI0oB,QACjD7pB,WAAY6oC,EAAI7oC,WAChBhC,SAAU6qC,EAAIhO,iBACd56B,SAAU4oC,EAAI5oC,SACd4nB,QACAogB,KAAM2C,EAAYA,EAAU3C,KAAOY,EAAI1nC,IAAI8mC,KAC3CloC,QAAS8oC,EAAI9oC,QACb8nC,QAASgB,EAAI1nC,IAAI0mC,YApcrBR,SAAUrkC,EAAMlE,eAEdupC,EAAgB,CAAEzgC,KAAM5E,EAAMjE,UJlCZ6I,KImClBkjC,EAAYlG,EAAU4B,YAAY,KAClCuE,GAAgC,IAAfD,EAAmBlG,EAAYA,EAAUl+B,MAAM,EAAGokC,GAEzE,OAAO/E,GAAU,CACbf,MAAO,CACH,CACIrlD,KAAMorD,EAAiB,OACvBrrD,GAAIsjB,EAAMtjB,GACVkoB,KAAMwgC,GACQ,IAAIrL,GAAsB57B,EAAKshB,GAAWqB,SACnDggB,gBAET,CACInkD,KAAMorD,EAAiB,OACvBrrD,GAAIsjB,EAAMtjB,GACVkoB,KAAMwgC,GAAa,IAAIllB,GAAkBmlB,EAAK5lB,GAAWqB,SAASggB,mBC7G3E,SAAekH,GAAtBjiC,GAAA,OAAAkiC,GAAAzlC,MAAA/nB,KAAAgoB,0DAAO,SAAAf,EAAyB0gC,GAAzB,OAAA7gC,GAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAzlB,MAAA,cAAAylB,EAAAG,OAAA,SACI,IAAIc,QAAQ,SAACC,EAASolC,GACzB,IAAMC,EAAS,IAAIC,WAEnBD,EAAOE,iBAAiB,UAAW,WAC3BF,EAAO/4B,kBAAkBusB,YACzB74B,EAAQqlC,EAAO/4B,QAEf84B,EAAO,IAAI3oD,MAAM,0BAIzB4oD,EAAOG,kBAAkBlG,MAZ1B,wBAAAxgC,EAAAW,SAAAb,6BCEA,4BAAM6mC,GACT,SAAAA,EACaC,EACAC,EACAC,GACVnuD,OAAAC,EAAA,EAAAD,CAAAE,KAAA8tD,GAAA9tD,KAHU+tD,cAGX/tD,KAFWguD,OAEXhuD,KADWiuD,QAIJC,IAAbC,GACKrqD,IAAWoe,IADhBksC,GAAA,oBAAAF,IAAApuD,OAAAC,EAAA,EAAAD,CAAAE,KAAAkuD,GAAApuD,OAAAyD,EAAA,EAAAzD,CAAAE,KAAA,QAAAquD,GAAAruD,MAAAF,OAAAyD,EAAA,EAAAzD,CAAAE,KAAA,QAAAsuD,GAAAtuD,MAAA,OAAAF,OAAAG,EAAA,EAAAH,CAAAouD,EAAA,EAAAhuD,IAAA,cAAAC,MAAA,SA6BgB4tD,EAAqBC,EAAkBC,GAC/CjuD,KAAKmrB,KAAK,IAAI2iC,GAAOC,EAAaC,EAAMC,MA9BhD,CAAA/tD,IAAA,OAAAC,MAAA,SAiCSmjB,GACDtjB,KAAKuuD,MAAMj5B,OAAOt1B,KAAKizB,MAAOjzB,KAAKuuD,MAAM3tD,OAASZ,KAAKizB,MAAO3P,GAC9DtjB,KAAKizB,UAnCb,CAAA/yB,IAAA,OAAAC,MAAA,WAuCQ,QAAIH,KAAKwuD,WACLxuD,KAAKuuD,QAAQvuD,KAAKizB,OAAO+6B,QAClB,KAzCnB,CAAA9tD,IAAA,OAAAC,MAAA,WAgDQ,QAAIH,KAAKyuD,WACLzuD,KAAKuuD,MAAMvuD,KAAKizB,SAASg7B,QAClB,KAlDnB,CAAA/tD,IAAA,QAAAC,MAAA,WAyDQH,KAAKuuD,MAAQ,GACbvuD,KAAKizB,MAAQ,IA1DrB,CAAA/yB,IAAA,WAAA6B,IAAA,WAQQ,OAAO/B,KAAKizB,MAAQ,IAR5B,CAAA/yB,IAAA,WAAA6B,IAAA,WAYQ,OAAO/B,KAAKizB,MAAQjzB,KAAKuuD,MAAM3tD,SAZvC,CAAAV,IAAA,aAAA6B,IAAA,WAmBQ,OAAO/B,KAAKuuD,MAAMvuD,KAAKizB,MAAQ,KAnBvC,CAAA/yB,IAAA,aAAA6B,IAAA,WA0BQ,OAAO/B,KAAKuuD,MAAMvuD,KAAKizB,WA1B/Bi7B,EAAA,GAAAG,GAAAvuD,OAAA8D,EAAA,EAAA9D,CAAAsuD,GAAAvqD,UAAA,SAAAsqD,IAAA,CAAApqD,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,iBAC8C,MAD9CoqD,GAAAxuD,OAAA8D,EAAA,EAAA9D,CAAAsuD,GAAAvqD,UAAA,SAKKC,KALL,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,kBAKgC,KALhCpE,OAAA8D,EAAA,EAAA9D,CAAAsuD,GAAAvqD,UAAA,YAOKM,KAPLrE,OAAAsE,yBAAAgqD,GAAAvqD,UAAA,YAAAuqD,GAAAvqD,WAAA/D,OAAA8D,EAAA,EAAA9D,CAAAsuD,GAAAvqD,UAAA,YAWKM,KAXLrE,OAAAsE,yBAAAgqD,GAAAvqD,UAAA,YAAAuqD,GAAAvqD,WAAA/D,OAAA8D,EAAA,EAAA9D,CAAAsuD,GAAAvqD,UAAA,cAkBKM,KAlBLrE,OAAAsE,yBAAAgqD,GAAAvqD,UAAA,cAAAuqD,GAAAvqD,WAAA/D,OAAA8D,EAAA,EAAA9D,CAAAsuD,GAAAvqD,UAAA,cAyBKM,KAzBLrE,OAAAsE,yBAAAgqD,GAAAvqD,UAAA,cAAAuqD,GAAAvqD,WAAAuqD,ICCM19B,GAASC,IAAO5uB,IAAI,2BAiIb2sD,GAAqB,wDA9HrBC,WAAa,IAAIT,6QA0C1BU,kDAAY,SAAA3nC,EAAO0gC,GAAP,IAAAjiB,EAAAngB,EAAArkB,EAAAC,EAAAC,EAAAi2B,EAAA91B,EAAAD,EAAA,OAAAwlB,GAAAC,EAAAG,KAAA,SAAAyZ,GAAA,cAAAA,EAAAvZ,KAAAuZ,EAAAj/B,MAAA,cAAAi/B,EAAAvZ,KAAA,EAAAuZ,EAAAj/B,KAAA,EAEiB6rD,GAAU5F,GAF3B,UAEEjiB,EAFF/E,EAAAjZ,KAGEnC,EAAQ8jC,GAAY,IAAI5jB,GAAkBC,EAAQV,GAAWqB,SACnE1iB,EAAKkrC,UAAUtpC,IAEXA,EANA,CAAAob,EAAAj/B,KAAA,SAAAR,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAAs/B,EAAAvZ,KAAA,GAAAiQ,EAAAvQ,GAAAC,EAAAC,KAAA,SAAAqQ,IAAA,IAAA8mB,EAAAnC,EAAAtqB,EAAAC,EAAAC,EAAAE,EAAAD,EAAAuX,EAAA9N,EAAAC,EAAAC,EAAAC,EAAAC,EAAA0vB,EAAA,OAAAtkC,GAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAzlB,MAAA,cAQWy8C,EARX78C,EAAAnB,MAAAgnB,EAAAzlB,KAAA,EAS2B88C,GAAWM,kBAC9Bv5B,EAAM9gB,QACN05C,EAAQv5B,KAAK3iB,GACbk8C,EAAQl8C,IAZhB,OAgBI,IAPM+5C,EATV70B,EAAAO,KAcIy2B,EAAQnC,SAAWA,EAdvBtqB,GAAA,EAAAC,GAAA,EAAAC,OAAAvwB,EAAA8lB,EAAAC,KAAA,EAgBI0K,EAAqBvM,EAAMpE,QAAQxgB,OAAO,SAAAmuD,GAAC,OAAIA,EAAExsC,UAAY67B,EAAQv5B,KAAK3iB,KAA1ET,OAAAC,cAAAiwB,GAAAG,EAAAC,EAAApwB,QAAAC,MAAA+vB,GAAA,EAA+E,CAApE0X,EAAoEvX,EAAA1xB,MAC3E,IACIwjB,EAAKorC,oCAAoC3lB,EAAQ4S,GACnD,MAAOx7C,GACLkwB,GAAOe,MAAMjxB,IApBzB2mB,EAAAzlB,KAAA,iBAAAylB,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAAAwK,GAAA,EAAAC,EAAAzK,EAAAU,GAAA,QAAAV,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAAsK,GAAA,MAAAI,EAAAhwB,QAAAgwB,EAAAhwB,SAAA,WAAAqlB,EAAAC,KAAA,IAAAuK,EAAA,CAAAxK,EAAAzlB,KAAA,eAAAkwB,EAAA,eAAAzK,EAAAkE,OAAA,mBAAAlE,EAAAkE,OAAA,YAwBI,IAxBJiQ,GAAA,EAAAC,GAAA,EAAAC,OAAAn6B,EAAA8lB,EAAAC,KAAA,GAwBIqU,EAAkBlW,EAAMnE,KAAKzgB,OAAO,SAAAyqD,GAAG,OAAIA,EAAI9oC,UAAY67B,EAAQv5B,KAAK3iB,KAAxET,OAAAC,cAAA65B,GAAAI,EAAAD,EAAA/5B,QAAAC,MAAA25B,GAAA,EAA6E,CAAlE8vB,EAAkE1vB,EAAAv7B,MACzE,IACIwjB,EAAKorC,oCAAoC3D,EAAKpP,GAChD,MAAOx7C,GACLkwB,GAAOe,MAAMjxB,IA5BzB2mB,EAAAzlB,KAAA,iBAAAylB,EAAAC,KAAA,GAAAD,EAAAiE,GAAAjE,EAAA,UAAAoU,GAAA,EAAAC,EAAArU,EAAAiE,GAAA,QAAAjE,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAAkU,GAAA,MAAAG,EAAA35B,QAAA25B,EAAA35B,SAAA,WAAAqlB,EAAAC,KAAA,IAAAmU,EAAA,CAAApU,EAAAzlB,KAAA,eAAA85B,EAAA,eAAArU,EAAAkE,OAAA,mBAAAlE,EAAAkE,OAAA,6BAAAlE,EAAAW,SAAAuP,EAAA,6DAAA91B,EAQsBgkB,EAAMrE,cAR5B1f,OAAAC,YAAA,WAAAP,GAAAI,EAAAC,EAAAG,QAAAC,KAAA,CAAAg/B,EAAAj/B,KAAA,gBAAAi/B,EAAAquB,cAAA33B,IAAA,iBAAAn2B,GAAA,EAAAy/B,EAAAj/B,KAAA,iBAAAi/B,EAAAj/B,KAAA,iBAAAi/B,EAAAvZ,KAAA,GAAAuZ,EAAAvV,GAAAuV,EAAA,UAAAx/B,GAAA,EAAAC,EAAAu/B,EAAAvV,GAAA,QAAAuV,EAAAvZ,KAAA,GAAAuZ,EAAAvZ,KAAA,GAAAlmB,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAA6+B,EAAAvZ,KAAA,IAAAjmB,EAAA,CAAAw/B,EAAAj/B,KAAA,eAAAN,EAAA,eAAAu/B,EAAAtV,OAAA,mBAAAsV,EAAAtV,OAAA,YAAAsV,EAAAj/B,KAAA,iBAiCAgvB,GAAOe,MAAM,8BAjCb,QAAAkP,EAAAj/B,KAAA,iBAAAi/B,EAAAvZ,KAAA,GAAAuZ,EAAAf,GAAAe,EAAA,SAoCJjQ,GAAOe,MAAM,sBAAbkP,EAAAf,IApCI,yBAAAe,EAAA7Y,SAAAb,EAAA,uGAwCJ8nC,4EAAsC,SAAAruB,EAC1CuuB,EACAjT,GAF0C,IAAAkT,EAAAtvD,EAAAC,EAAAS,EAAAyiB,EAAAosC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlsC,EAAA,OAAAyD,GAAAC,EAAAG,KAAA,SAAAqa,GAAA,cAAAA,EAAAna,KAAAma,EAAA7/B,MAAA,OAAAwtD,EAIxBD,EAAO1uC,SAAnB3gB,EAJoCsvD,EAIpCtvD,EAAGC,EAJiCqvD,EAIjCrvD,EAAGS,EAJ8B4uD,EAI9B5uD,GAENyiB,EAAUi5B,EAAS7yB,KAAK,SAAAqmC,GAAC,OAAIA,EAAEvtD,KAAOgtD,EAAO1sC,eAEtC4sC,EACgCpsC,EAAQxC,SAAtC6uC,EADFD,EACDvvD,EAAayvD,EADZF,EACStvD,EAAayvD,EADtBH,EACmB7uD,EACtBivD,EAAQxsC,EAAQrC,oBAAsB9gB,EAAImjB,EAAQtC,oBAAsBngB,EACxE+iB,GAASN,EAAQtC,oBAAsB7gB,EAAImjB,EAAQrC,oBAAsBpgB,EAC/EV,EAAI2vD,EAAQH,EACZvvD,GAAKwvD,EACL/uD,EAAI+iB,EAAQisC,GAEZ5+B,GAAOyI,KAAP,WAAAp0B,OAAuBkqD,EAAO1sC,WAA9B,gBAGJktC,YAAY,WACRR,EAAOlsC,QAAUA,EACjBksC,EAAO1uC,SAAW,IAAIlgB,EAAKT,EAAGC,EAAGS,KArBK,wBAAAihC,EAAAzZ,SAAA4Y,mEAyB9CgvB,2BAA6B,SAACvI,GAC1B,GAAIxjC,EAAKgsC,cAAe,CACpB,IAAMjqB,EAAS6mB,GAAgB5oC,EAAKgsC,cAAexI,GAE9CA,EAAUuC,SAAS,UACpBvC,GAAa,QAGjB,IAAMpgC,EAAI6oC,SAASpiC,cAAc,KACjCzG,EAAE8oC,KAAOC,IAAIC,gBAAgB,IAAIC,KAAK,CAACtqB,GAAS,CAAEpiC,KAAM,8BACxDyjB,EAAEkpC,SAAW9I,EACbyI,SAASM,KAAKC,YAAYppC,GAC1BA,EAAEqpC,QACFN,IAAIO,gBAAgBtpC,EAAE8oC,MACtBD,SAASM,KAAKI,YAAYvpC,mDAxHjCjjB,+GACAA,kHACAA,4GAEAwf,yFACW,SAACiC,GACTnB,EAAKuqC,WAAW4B,QAChBnsC,EAAKosC,qBAAkBnvD,EACvB+iB,EAAKurC,cAAgBpqC,EAEjBA,GAASA,EAAMrE,cAActgB,OAC7BwjB,EAAKqsC,aAAelrC,EAAMrE,cAAc,GAAG0D,KAE3CR,EAAKqsC,kBAAepvD,yDAI3BiiB,yFACqB,SAAC2rC,GACfA,GACAv3B,EAAKg5B,oBAAoBzB,EAAO3sC,SAGpCoV,EAAK84B,gBAAkBvB,yDAG1B3rC,yFACqB,SAAChB,GAGnB,GAFAquC,EAAKH,qBAAkBnvD,EAER,MAAXihB,EACAquC,EAAKF,kBAAepvD,OACjB,GAAIsvD,EAAKhB,cAAe,CAC3B,IAAM9T,EAAe8U,EAAKhB,cAAczuC,cAAciI,KAClD,SAAAg1B,GAAO,OAAIA,EAAQv5B,KAAK3iB,KAAOqgB,IAEnCquC,EAAKF,aAAe5U,GAAgBA,EAAaj3B,cCvChDgsC,WADZ7iC,YACD8iC,GAAA,SAAA5iC,GAAA,SAAA2iC,IAAA,OAAA9wD,OAAAC,EAAA,EAAAD,CAAAE,KAAA4wD,GAAA9wD,OAAA8jB,EAAA,EAAA9jB,CAAAE,KAAAF,OAAAgjB,EAAA,EAAAhjB,CAAA8wD,GAAA7oC,MAAA/nB,KAAAgoB,YAAA,OAAAloB,OAAAkkB,EAAA,EAAAlkB,CAAA8wD,EAAA3iC,GAAAnuB,OAAAG,EAAA,EAAAH,CAAA8wD,EAAA,EAAA1wD,IAAA,SAAAC,MAAA,WAEQ,IAAM8uD,EAASjvD,KAAK4tB,MAAMqhC,OAE1B,GAAIA,EAAQ,CACR,IAAM1sC,EAAa0sC,EAAOlsC,QAAUksC,EAAOlsC,QAAQ9gB,GAAKgtD,EAAO1sC,WAC3DrgB,EAAO,KAkBX,OAhBI+sD,aAAkB1rC,GAClBrhB,EACIqrB,EAAAxG,EAAAyG,cAAA,UACID,EAAAxG,EAAAyG,cAAA,sBACAD,EAAAxG,EAAAyG,cAAA,MAAIsjC,QAAS,GAAI7B,EAAO3rD,KAAKpB,OAG9B+sD,aAAkBhrC,KACzB/hB,EACIqrB,EAAAxG,EAAAyG,cAAA,UACID,EAAAxG,EAAAyG,cAAA,mBACAD,EAAAxG,EAAAyG,cAAA,UAAKyhC,EAAO3rD,KAAKpB,QAMzBqrB,EAAAxG,EAAAyG,cAAA,OAAKG,UAAU,iCACXJ,EAAAxG,EAAAyG,cAAA,SAAOG,UAAU,6BACbJ,EAAAxG,EAAAyG,cAAA,aACKtrB,EACDqrB,EAAAxG,EAAAyG,cAAA,UACID,EAAAxG,EAAAyG,cAAA,uBACAD,EAAAxG,EAAAyG,cAAA,UAAKjL,IAETgL,EAAAxG,EAAAyG,cAAA,UACID,EAAAxG,EAAAyG,cAAA,MAAIsjC,QAAS,GAAb,qBAEJvjC,EAAAxG,EAAAyG,cAAA,UACID,EAAAxG,EAAAyG,cAAA,MAAIsjC,QAAS,GACTvjC,EAAAxG,EAAAyG,cAAA,aACID,EAAAxG,EAAAyG,cAAA,aACID,EAAAxG,EAAAyG,cAACujC,GAAD,CACI9B,OAAQA,EACR+B,cAAc,WACdC,MAAM,MAEV1jC,EAAAxG,EAAAyG,cAACujC,GAAD,CACI9B,OAAQA,EACR+B,cAAc,WACdC,MAAM,MAEV1jC,EAAAxG,EAAAyG,cAACujC,GAAD,CACI9B,OAAQA,EACR+B,cAAc,WACdC,MAAM,UAM1B1jC,EAAAxG,EAAAyG,cAAA,UACID,EAAAxG,EAAAyG,cAAA,MAAIsjC,QAAS,GAAb,uBAEJvjC,EAAAxG,EAAAyG,cAAA,UACID,EAAAxG,EAAAyG,cAAA,MAAIsjC,QAAS,GACTvjC,EAAAxG,EAAAyG,cAAA,aACID,EAAAxG,EAAAyG,cAAA,aACID,EAAAxG,EAAAyG,cAACujC,GAAD,CACI9B,OAAQA,EACR+B,cAAc,mBACdC,MAAM,MAEV1jC,EAAAxG,EAAAyG,cAACujC,GAAD,CACI9B,OAAQA,EACR+B,cAAc,mBACdC,MAAM,MAEV1jC,EAAAxG,EAAAyG,cAACujC,GAAD,CACI9B,OAAQA,EACR+B,cAAc,mBACdC,MAAM,aAW1C,OAAO1jC,EAAAxG,EAAAyG,cAAA,OAAKG,UAAU,sCA1FlCijC,EAAA,CAAyC7gC,eAAzC8gC,IAqGMK,oLAEE,OACI3jC,EAAAxG,EAAAyG,cAAA,UACID,EAAAxG,EAAAyG,cAAA,UAAKxtB,KAAK4tB,MAAMqjC,MAAMhL,cAAtB,MACA14B,EAAAxG,EAAAyG,cAAA,UACID,EAAAxG,EAAAyG,cAAC2jC,GAAenxD,KAAK4tB,gBANlBC,iBAajBujC,8MACMC,kBAERphC,MAAQ,CAAE9vB,MAAO,KA4CTmxD,QAAU,SAACnxD,GACf,GAAa,MAATA,EAAe,CACf,IAAM8uD,EAAStrC,EAAKiK,MAAMqhC,OACpBsC,EAAW5tC,EAAKiK,MAAMojC,cACtB7N,EAAM8L,EAAOsC,GAAU3X,QAC7BuJ,EAAIx/B,EAAKiK,MAAMqjC,OAAS9wD,EACxB8uD,EAAOsC,GAAYpO,uFA/CvBnjD,KAAKwxD,iEAIDxxD,KAAKqxD,UAAUrxD,KAAKqxD,sDAGTI,GACXzxD,KAAK4tB,MAAMqhC,SAAWwC,EAAWxC,QACjCjvD,KAAKwxD,mDAKT,OACIjkC,EAAAxG,EAAAyG,cAAA2B,GAAA,GACIhvB,MAAOH,KAAKiwB,MAAM9vB,MAClBivB,KAAK,QACLsiC,UAAW,EACX/jC,UAAU,4BACVqB,SAAUhvB,KAAKsxD,oDAKK,IAAAltC,EAAApkB,KACxBA,KAAKqxD,UAAUrxD,KAAKqxD,WAExBrxD,KAAKqxD,SAAW9/B,YACZ,WACInN,EAAKqe,SAAS,CACVtiC,MAAOikB,EAAKwJ,MAAMqhC,OAAO7qC,EAAKwJ,MAAMojC,eAAe5sC,EAAKwJ,MAAMqjC,UAGtE,CACI/uD,KAAI,GAAA6C,OAAK/E,KAAK4tB,MAAMqhC,OAAO3rD,KAAKgB,KAA5B,KAAAS,OAAoC/E,KAAK4tB,MAAMojC,cAA/C,KAAAjsD,OAAgE/E,KAAK4tB,MAAMqjC,MAA3E,YACJU,MAAO,YA1CE5hC,2BC1HlB,SAAS6hC,GAAT5nC,GAAuE,IAAzCzE,EAAyCyE,EAAzCzE,MACjC,GAAIA,EAAO,CACP,IAAM9gB,EAA4B,IAAlB8gB,EAAM9gB,QAAgB,KAAyB,IAAlB8gB,EAAM9gB,QAAgB,KAAO,IACpEotD,EAAa,IAAI5wD,IAFhBC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAIP,QAAAC,EAAAC,EAAkBgkB,EAAMnE,KAAxB5f,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAA8B,KAAnBkqD,EAAmB9pD,EAAAnB,MACpB2xD,EAAMD,EAAW9vD,IAAIqpD,EAAI9nD,OAAS,EACxCuuD,EAAWjwD,IAAIwpD,EAAI9nD,KAAMwuD,EAAM,IAN5B,MAAAjwD,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GASP,IAAM2wD,EAA0D,GAAvCF,EAAW9vD,IAAIsC,EAAQgE,SAAW,GAKrD2pD,EAFoBlyD,OAAA0gC,GAAA,EAAA1gC,CAAI+xD,GAAY/9B,KAAK,SAAC/M,EAAG+P,GAAJ,OAAU/P,EAAE,GAAG9kB,GAAK60B,EAAE,GAAG70B,KAE/BgD,IAAI,SAAAutB,GAAuB,IAAAD,EAAAzyB,OAAA2yB,GAAA,EAAA3yB,CAAA0yB,EAAA,GAArBxN,EAAqBuN,EAAA,GAAXG,EAAWH,EAAA,GAC1D0/B,EAAQjtC,IAAa3gB,EAAQ+D,SAAW2pD,EAAkB,EAChE,OACIxkC,EAAAxG,EAAAyG,cAAA,MAAIttB,IAAK8kB,EAAS/iB,IACdsrB,EAAAxG,EAAAyG,cAAA,UAAKxI,EAAS9iB,KAAd,KACAqrB,EAAAxG,EAAAyG,cAAA,UAAKkF,EAAQu/B,MAKzB,OACI1kC,EAAAxG,EAAAyG,cAAA,OAAKG,UAAU,yBACXJ,EAAAxG,EAAAyG,cAAA,aACID,EAAAxG,EAAAyG,cAAA,aACID,EAAAxG,EAAAyG,cAAA,UACID,EAAAxG,EAAAyG,cAAA,mBACAD,EAAAxG,EAAAyG,cAAA,UAAKjI,EAAMrjB,OAEfqrB,EAAAxG,EAAAyG,cAAA,UACID,EAAAxG,EAAAyG,cAAA,sBACAD,EAAAxG,EAAAyG,cAAA,UAAK/oB,IAET8oB,EAAAxG,EAAAyG,cAAA,UACID,EAAAxG,EAAAyG,cAAA,MAAIsjC,QAAS,GACTvjC,EAAAxG,EAAAyG,cAAA,WAAMjI,EAAMvE,qBAGpBuM,EAAAxG,EAAAyG,cAAA,UACID,EAAAxG,EAAAyG,cAAA,MAAIsjC,QAAS,GACTvjC,EAAAxG,EAAAyG,cAAA,WAAMjI,EAAMtE,sBAK5BsM,EAAAxG,EAAAyG,cAAA,OAAKG,UAAU,8CACXJ,EAAAxG,EAAAyG,cAAA,aACID,EAAAxG,EAAAyG,cAAA,aACID,EAAAxG,EAAAyG,cAAA,UACID,EAAAxG,EAAAyG,cAAA,MAAIsjC,QAAS,GAAb,gBAGRvjC,EAAAxG,EAAAyG,cAAA,aAAQwkC,MAMxB,OAAOzkC,EAAAxG,EAAAyG,cAAA,OAAKG,UAAU,qCC9DlBukC,GCQCC,GAAb,SAAAlkC,GAAA,SAAAkkC,IAAA,IAAAjkC,EAAAvK,EAAA7jB,OAAAC,EAAA,EAAAD,CAAAE,KAAAmyD,GAAA,QAAAhkC,EAAAnG,UAAApnB,OAAAwtB,EAAA,IAAArM,MAAAoM,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAArG,UAAAqG,GAAA,OAAA1K,EAAA7jB,OAAA8jB,EAAA,EAAA9jB,CAAAE,MAAAkuB,EAAApuB,OAAAgjB,EAAA,EAAAhjB,CAAAqyD,IAAAtuC,KAAAkE,MAAAmG,EAAA,CAAAluB,MAAA+E,OAAAqpB,MAyBYgkC,UAAY,SAACC,GACbA,IACA1uC,EAAKiK,MAAM0kC,SAASC,SAASF,EAAIG,YAAaH,EAAII,cAClDJ,EAAIlC,YAAYxsC,EAAKiK,MAAM0kC,SAASI,eA5BhD/uC,EAgCYgvC,SAAW,WACf,IAAMC,EAAcjvC,EAAKiK,MAAM0kC,SAASI,YAAYG,WACpDlvC,EAAKiK,MAAM0kC,SAASC,SAASK,EAAYJ,YAAaI,EAAYH,eAlC1E9uC,EAAA,OAAA7jB,OAAAkkB,EAAA,EAAAlkB,CAAAqyD,EAAAlkC,GAAAnuB,OAAAG,EAAA,EAAAH,CAAAqyD,EAAA,EAAAjyD,IAAA,SAAAC,MAAA,WAEQ,IAAIwtB,EAAY,oBAGhB,OAFI3tB,KAAK4tB,MAAMD,YAAWA,GAAa,IAAM3tB,KAAK4tB,MAAMD,WAEjDJ,EAAAxG,EAAAyG,cAAA,OAAKG,UAAWA,EAAWzL,IAAKliB,KAAKoyD,cALpD,CAAAlyD,IAAA,4BAAAC,MAAA,SAQ8BytB,GACtB5tB,KAAK4tB,MAAM0kC,SAAS1G,QAAUh+B,EAAMg+B,QAT5C,CAAA1rD,IAAA,oBAAAC,MAAA,WAaQ2oB,OAAO8kC,iBAAiB,SAAU5tD,KAAK2yD,YAb/C,CAAAzyD,IAAA,uBAAAC,MAAA,WAiBQ2oB,OAAOgqC,oBAAoB,SAAU9yD,KAAK2yD,UAC1C3yD,KAAK4tB,MAAMmlC,iBAAmB/yD,KAAK4tB,MAAMmlC,oBAlBjD,CAAA7yD,IAAA,wBAAAC,MAAA,WAsBQ,OAAO,MAtBfgyD,EAAA,CAAuCpiC,sBCDjCijC,GAAiB,IAAI1Y,uBAAoB,CAC3CH,MAAO,MACPI,KAAMC,gBAEJyY,GAAmB,IAAI3Y,uBAAoB,CAC7CH,MAAO,SACPI,KAAMC,gBAEJ0Y,GAA2B,IAAI5Y,uBAAoB,CACrD6Y,UAAU,EACVhZ,MAAO,SACPI,KAAMC,gBAGH,SAAS4Y,GACZ9W,EACA+W,GAGA,OAAOC,GAAOhX,EAAU+W,EADpBrrC,UAAApnB,OAAA,QAAAS,IAAA2mB,UAAA,GAAAA,UAAA,GADyBirC,GAEuB/X,SAWxD,SAASoY,GACLhX,EACA+W,EACAE,EACAC,GACC,IAOGC,EAPHzpC,EAKGsyB,EAASpH,SAHTC,EAFHnrB,EAEGmrB,4BAC6Bue,EAHhC1pC,EAGG2rB,4BACAtB,EAJHrqB,EAIGqqB,MAKJ,GAAItyB,MAAM4xC,QAAQN,GACd,GAAIle,EAA6B,CAC7Bse,EAAM,CAACT,IADsB,IAAA9xD,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAG7B,QAAAC,EAAAC,EAAoCmyD,EAASrhC,UAA7C7wB,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAwD,KAAAg2B,EAAA51B,EAAAnB,MAAAoyB,EAAAzyB,OAAA2yB,GAAA,EAAA3yB,CAAAo3B,EAAA,GAA5C08B,EAA4CrhC,EAAA,GAAvCshC,EAAuCthC,EAAA,GAChDshC,EAAiB,IACjBJ,EAAII,GAAkBR,EAASO,IAAQL,IALlB,MAAA1xD,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,SAS7BqyD,EAAMJ,OAGVI,EADOJ,GAGDE,EAGV,IAAM9pB,EAAO,IAAI+pB,EAAiBlX,EAAUmX,GAO5C,OALIte,GAA+Bd,EAAMzzC,QAAU6oC,aAAgBqqB,iBAC/DrqB,EAAKsL,IAAIV,EAAM,IACf5K,EAAKsqB,KAAK,IAAIC,YAAS3f,KAGpB5K,YF5ECyoB,4FAML,IAAM+B,GAA0B,GACvCA,GAAc/B,GAAUgC,QAAU,SAClCD,GAAc/B,GAAUiC,SAAW,SACnCF,GAAc/B,GAAUkC,UAAY,SAE7B,IAAMC,GAAuB,GAS7B,SAASC,GACZlrB,EACAkT,EACAiY,GAEA,OAAOjB,GAAOlqB,EAAQkT,EAAUiY,EAAUN,GAAc/B,GAAUgC,QAAS9qB,EAAO9lC,KAAKpB,MAGpF,SAASsyD,GACZpJ,EACA9O,EACAiY,GAEA,OAAOjB,GAAOlI,EAAK9O,EAAUiY,EAAUF,GAAWnC,GAAUgC,QAAS9I,EAAI9nD,KAAKgB,MAGlF,SAASgvD,GACLrE,EACA3S,EACAiY,EACApa,EACAj4C,GAEA,IAAMqxD,EAAmB,IAAIjZ,uBAAoB,CAC7CH,QACAI,KAAMC,gBAGJ/Q,EAAO2pB,GACT9W,EACAiY,EAAS3zD,OACH2zD,EAAStvD,IACL,SAAAwvD,GAAG,OACC,IAAIna,uBAAoB,CACpBr1C,IAAKwvD,EACLla,KAAMC,cACNka,UAAW,OAGvBnB,EACNA,GAGJ9pB,EAAKvnC,KAAOA,EACXunC,EAAKyL,SAA4B+Z,OAASA,EAtBvC,IAAAC,EAwBgBD,EAAO1uC,SAAnB3gB,EAxBJsvD,EAwBItvD,EAAGC,EAxBPqvD,EAwBOrvD,EAAGS,EAxBV4uD,EAwBU5uD,EACdmpC,EAAKlpB,SAAS3e,IAAIhC,EAAGC,EAAGS,GACxB,IAAM0rD,EAAMiD,EAAOzsC,SAGnB,OAFAinB,EAAKjnB,SAAS5gB,IAAIoqD,EAAIpsD,EAAGosD,EAAInsD,EAAGmsD,EAAI1rD,GAE7BmpC,EA3DX4qB,GAAWnC,GAAUgC,QAAU,SAC/BG,GAAWnC,GAAUiC,SAAW,SAChCE,GAAWnC,GAAUkC,UAAY,SGTjC,IAAMO,GAAc,IAAIjgB,WAAQ,GAAI,EAAG,GAmB1BkgB,GAAb,WAWI,SAAAA,EAAoBtC,GAAyB,IAAA3uC,EAAA3jB,KAAAF,OAAAC,EAAA,EAAAD,CAAAE,KAAA40D,GAAA50D,KAAzBsyD,WAAyBtyD,KAVrC60D,UAAY,IAAIC,aAUqB90D,KATrCsuB,cASqC,EAAAtuB,KARrC+0D,aAQqC,EAAA/0D,KAJrCg1D,UAIqC,EAAAh1D,KAHrCi1D,sBAAwB,IAAIhf,WAAQ,EAAG,GAGFj2C,KAFrCk1D,6BAA8B,EAEOl1D,KAoB7Cm1D,uBAAyB,WACrB,IAAMlG,EAASP,GAAmB8B,gBAC5B/mB,EAAO9lB,EAAK2uC,SAAS8C,gBAAgBnG,GAEvCxlB,GACA9lB,EAAK0xC,OAAO,CAAEpG,SAAQxlB,UAzBezpC,KA6B7Cs1D,cAAgB,SAAC90D,GACbmjB,EAAK4xC,cAAc/0D,GACnBmjB,EAAK6xC,oBAEL,IAAMC,EAAW9xC,EAAK+xC,YAAY/xC,EAAK2uC,SAASqD,6BAA6Bn1D,IAEzEi1D,GAEA9xC,EAAK2uC,SAASsD,SAASC,SAAU,EACjClyC,EAAKqxC,KAAOS,EACZ9xC,EAAK0xC,OAAOI,KAEZ9xC,EAAK2uC,SAASsD,SAASC,SAAU,EACjClyC,EAAKqxC,UAAO3zD,GAGhBsiB,EAAK2uC,SAASwD,mBA7C2B91D,KAgD7C+1D,YAAc,SAACv1D,GACXmjB,EAAK4xC,cAAc/0D,GAEdmjB,EAAKuxC,6BAAgCvxC,EAAKqxC,MAE3CrxC,EAAKqyC,WAGTryC,EAAK6xC,oBAEL7xC,EAAK2uC,SAASsD,SAASC,SAAU,EAEjClyC,EAAK2uC,SAASwD,mBA5D2B91D,KA+D7Ci2D,cAAgB,SAACz1D,GACbmjB,EAAK4xC,cAAc/0D,GAEnB,IAAM01D,EAAqBvyC,EAAK2uC,SAASqD,6BAA6Bn1D,GAEtE,GAAImjB,EAAK2K,UAAY3K,EAAKqxC,KAClBrxC,EAAKuxC,8BACa,IAAd10D,EAAE21D,UAGE31D,EAAE41D,SAEFzyC,EAAK0yC,qBAAqB1yC,EAAK2K,SAAU3K,EAAKqxC,KAAMkB,GAGpDvyC,EAAK2yC,uBAAuB3yC,EAAK2K,SAAU3K,EAAKqxC,KAAMkB,IAI9DvyC,EAAK2uC,SAASwD,uBAEf,CAEH,IAAML,EAAW9xC,EAAK+xC,YAAYQ,GAE9BvyC,EAAK4yC,aAAad,IAClB9xC,EAAK2uC,SAASwD,oBAzFmB91D,KAuOrCw1D,kBAAoB,WACxB,GAAI7xC,EAAKuxC,6BAA+BvxC,EAAK2K,UAAY3K,EAAKqxC,KAAM,CAChE,IAAM/F,EAAStrC,EAAK2K,SAAS2gC,OACvBuH,EAAmB7yC,EAAKqxC,KAAKwB,iBAC7BC,EAAexH,EAAO1uC,SACtBspC,EAC2BoF,EAAO3rD,KAAKpB,KAE7CwsD,GAAmBC,WAAW+H,YAA9B,QAAA3xD,OACY8kD,GACR,WACIoF,EAAO1uC,SAAWi2C,EAClB9H,GAAmBiI,oBAAoB1H,IAE3C,WACIA,EAAO1uC,SAAWk2C,EAClB/H,GAAmBiI,oBAAoB1H,KAKnDtrC,EAAKqxC,UAAO3zD,GA3PZkwB,YAAQ,WACJ,IAAM09B,EAASP,GAAmB8B,gBAE7B7sC,EAAK2K,UAAY3K,EAAK2K,SAAS2gC,SAAWA,IAC3CtrC,EAAK6xC,oBAEDvG,EAEAtrC,EAAKwxC,yBAELxxC,EAAKqyC,cAtBzB,OAAAl2D,OAAAG,EAAA,EAAAH,CAAA80D,EAAA,EAAA10D,IAAA,gBAAAC,MAAA,SAyG0BK,GACH,cAAXA,EAAE8C,KACFtD,KAAKk1D,6BAA8B,EAG/B10D,EAAEo2D,UAAY52D,KAAKi1D,sBAAsBr1D,GACzCY,EAAEq2D,UAAY72D,KAAKi1D,sBAAsBp1D,IAEzCG,KAAKk1D,6BAA8B,GAI3Cl1D,KAAKi1D,sBAAsBrzD,IAAIpB,EAAEo2D,QAASp2D,EAAEq2D,WArHpD,CAAA32D,IAAA,eAAAC,MAAA,SA2HyB22D,GACjB,IAAIC,GAAkB,EAmBtB,OAjBK/2D,KAAKsuB,UAAa0oC,GAAiBF,EAAW92D,KAAKsuB,YAC/C0oC,GAAiBF,EAAW92D,KAAK+0D,WAC9B/0D,KAAK+0D,UACLkC,GAAUj3D,KAAK+0D,QAAS7C,GAAUgC,QAClCl0D,KAAK+0D,aAAU1zD,GAGfy1D,GACAG,GAAUH,EAAW5E,GAAUiC,SAGnC4C,GAAkB,GAGtB/2D,KAAK+0D,QAAU+B,GAGZC,IA/If,CAAA72D,IAAA,SAAAC,MAAA,SAkJmB22D,GACPE,GAAiBF,EAAW92D,KAAK+0D,WACjC/0D,KAAK+0D,aAAU1zD,GAGd21D,GAAiBF,EAAW92D,KAAKsuB,UAUlCtuB,KAAKsuB,SAAWwoC,GATZ92D,KAAKsuB,UACL2oC,GAAUj3D,KAAKsuB,SAAU4jC,GAAUgC,QAGvC+C,GAAUH,EAAW5E,GAAUkC,UAE/Bp0D,KAAKsuB,SAAWwoC,EAChBpI,GAAmBiI,oBAAoBG,EAAU7H,WA/J7D,CAAA/uD,IAAA,WAAAC,MAAA,WAsKYH,KAAKsuB,UACL2oC,GAAUj3D,KAAKsuB,SAAU4jC,GAAUgC,QAGvCl0D,KAAKsuB,cAAWjtB,EAChBqtD,GAAmBiI,yBAAoBt1D,KA3K/C,CAAAnB,IAAA,uBAAAC,MAAA,SA+KQ22D,EACA9B,EACAkC,GAGAl3D,KAAK60D,UAAUsC,cAAcD,EAAkBl3D,KAAKsyD,SAAS8E,QAC7D,IAAMC,EAAMr3D,KAAK60D,UAAUwC,IAErBC,EAAqBt3D,KAAKsyD,SAAS8E,OAAOG,kBAAkB,IAAI7iB,YAAWqF,SAC3Eyd,GAAQ,IAAIC,UAAQC,8BACtB,IAAIhjB,WAAQ4iB,EAAmB13D,EAAG,EAAG03D,EAAmBh3D,GAAGq3D,YAC3Db,EAAUrtB,KAAKlpB,SAASs5B,IAAImb,EAAK4C,cAG/BC,EAAqB,IAAInjB,WAE/B,GAAI2iB,EAAIS,eAAeN,EAAOK,GAAqB,CAC/C,IAAMh4D,EAAIg4D,EAAmBh4D,EAAIm1D,EAAK4C,YAAY/3D,EAC5Ck4D,EAAUl4D,EAAIi3D,EAAU7H,OAAO1uC,SAAS1gB,EAC9Cm1D,EAAKgD,QAAUD,EACf/C,EAAKiD,YAAYp4D,GAAKk4D,EACtBjB,EAAU7H,OAAO1uC,SAAW,IAAIlgB,EAC5By2D,EAAU7H,OAAO1uC,SAAS3gB,EAC1BC,EACAi3D,EAAU7H,OAAO1uC,SAASjgB,MAvM1C,CAAAJ,IAAA,yBAAAC,MAAA,SA6MQ22D,EACA9B,EACAkC,GACI,IAAAgB,EAE8Bl4D,KAAKm4D,aAAajB,EAAkBlC,GAA9DoD,EAFJF,EAEIE,aAAcr1C,EAFlBm1C,EAEkBn1C,QAEtB,GAAIq1C,EACAtB,EAAU7H,OAAOoJ,yBACb,IAAIh4D,EACA+3D,EAAaE,MAAM14D,EACnBw4D,EAAaE,MAAMz4D,EAAIm1D,EAAKgD,OAC5BI,EAAaE,MAAMh4D,GAEvByiB,OAED,CAEH/iB,KAAK60D,UAAUsC,cAAcD,EAAkBl3D,KAAKsyD,SAAS8E,QAC7D,IAAMC,EAAMr3D,KAAK60D,UAAUwC,IAErBG,EAAQ,IAAIC,SACd,IAAI/iB,WAAQ,EAAG,EAAG,IACjBoiB,EAAU7H,OAAO1uC,SAAS1gB,EAAIm1D,EAAK4C,YAAY/3D,GAE9Cg4D,EAAqB,IAAInjB,WAE3B2iB,EAAIS,eAAeN,EAAOK,KAC1Bf,EAAU7H,OAAO1uC,SAAW,IAAIlgB,EAC5Bw3D,EAAmBj4D,EAAIo1D,EAAK4C,YAAYh4D,EACxCk3D,EAAU7H,OAAO1uC,SAAS1gB,EAC1Bg4D,EAAmBv3D,EAAI00D,EAAK4C,YAAYt3D,OA5O5D,CAAAJ,IAAA,cAAAC,MAAA,SA6QwB+2D,GAEhBl3D,KAAK60D,UAAUsC,cAAcD,EAAkBl3D,KAAKsyD,SAAS8E,QAFM,IAAAmB,EAG5Cv4D,KAAK60D,UAAU2D,iBAClCx4D,KAAKsyD,SAASmG,cAAcpoC,UADzB+nC,EAH4Dt4D,OAAA2yB,GAAA,EAAA3yB,CAAAy4D,EAAA,MAOnE,GAAKH,EAAL,CAIA,IAAMnJ,EAAUmJ,EAAahvB,OAAO8L,SAA4B+Z,OAE1D2I,EAAcQ,EAAahvB,OAAO7oB,SAASq5B,QAAQC,IAAIue,EAAaE,OAEpEL,EAAcL,EAAYhe,QAE5Boe,EAAS,EAGbh4D,KAAK60D,UAAUjzD,IAAIw2D,EAAahvB,OAAO7oB,SAAUo0C,IApBkB,IAAA+D,EAqB7B14D,KAAK60D,UAAU2D,iBACjDx4D,KAAKsyD,SAASqG,mBAAmBtoC,UACjC,GAFGuoC,EArB4D94D,OAAA2yB,GAAA,EAAA3yB,CAAA44D,EAAA,MA+BnE,OALIE,IACAX,EAAYp4D,GAAK+4D,EAA4BC,SAC7Cb,GAAUY,EAA4BC,UAGnC,CACHpvB,KAAM2uB,EAAahvB,OACnB6lB,SACAuH,iBAAkBvH,EAAO1uC,SACzBq3C,cACAK,cACAD,aAlTZ,CAAA93D,IAAA,eAAAC,MAAA,SA0TQ24D,EACA3uC,GAKAnqB,KAAK60D,UAAUsC,cAAc2B,EAAa94D,KAAKsyD,SAAS8E,QACxDp3D,KAAK60D,UAAUwC,IAAI0B,OAAOhkB,IAAI5qB,EAAK8tC,aACnC,IAAMe,EAAgBh5D,KAAK60D,UAAU2D,iBACjCx4D,KAAKsyD,SAASqG,mBAAmBtoC,UACjC,GALNnvB,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAWE,QAAAC,EAAAC,EAA2By3D,EAA3Bx3D,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAA0C,KAA/Bk3D,EAA+B92D,EAAAnB,MACtC,GAAIi4D,EAAaa,KAAMxuB,OAAO5qC,EAAI,IAC9B,MAAO,CACHu4D,eACAr1C,QAAUq1C,EAAahvB,OAAO8L,SAA0BnyB,UAftE,MAAAlhB,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GAoBE,MAAO,OAnVfwzD,EAAA,GAuVA,SAASqC,GAATjtC,EAAkD1mB,GAAuB,IAApD2rD,EAAoDjlC,EAApDilC,OAAQxlB,EAA4Czf,EAA5Cyf,KACnB0Q,EAAQ8U,aAAkBhrC,GAAWowC,GAAW/wD,GAAQ2wD,GAAc3wD,GAE5E,GAAImmC,EACA,GAAI1nB,MAAM4xC,QAAQlqB,EAAK4pB,UAAW,KAAA3hC,GAAA,EAAAC,GAAA,EAAAC,OAAAvwB,EAAA,IAC9B,QAAAwwB,EAAAC,EAAkB2X,EAAK4pB,SAAvB7xD,OAAAC,cAAAiwB,GAAAG,EAAAC,EAAApwB,QAAAC,MAAA+vB,GAAA,EAA0D,KAA/C+hC,EAA+C5hC,EAAA1xB,MAClDmD,IAAS4uD,GAAUgC,QAAUT,EAAIxuD,IACjCwuD,EAAItZ,MAAMv4C,IAAI,UAEd6xD,EAAItZ,MAAMv4C,IAAIu4C,IALQ,MAAAt4C,GAAA8vB,GAAA,EAAAC,EAAA/vB,EAAA,YAAA6vB,GAAA,MAAAI,EAAAhwB,QAAAgwB,EAAAhwB,SAAA,WAAA6vB,EAAA,MAAAC,SAS7B6X,EAAK4pB,SAAiClZ,MAAMv4C,IAAIu4C,GAK7D,SAAS6c,GAAiBjwC,EAAiB+P,GACvC,OAAO/P,GAAK+P,EAAI/P,EAAEkoC,SAAWn4B,EAAEm4B,OAASloC,IAAM+P,EClYlD,IAAMpG,GAASC,IAAO5uB,IAAI,sCAmBpBm3D,GAAO,WACPC,GAAO,WAEN,SAASC,GAAU/wB,GACtB,IAAMsC,EAASD,GAAUrC,GACnBgxB,EAAe1uB,EAAOxhB,KAAK,SAAAmiB,GAAK,OAAIA,EAAMhoC,OAAS41D,KACnD9Q,EAASiR,GAiBnB,SAAsBhxB,GAElB,MAAO,CACHixB,cAFkBjxB,EAAO4B,OAlBEsvB,CAAaF,EAAalvC,MAEnDoqC,EAAW5pB,EACZhqC,OAAO,SAAA2qC,GAAK,OAAIA,EAAMhoC,OAAS61D,KAC/Bl0D,IAAI,SAAAqmC,GAAK,OAoBlB,SAAuBjD,GACnB,IAAMmxB,EAAWnxB,EAAOI,MAClBgxB,EAAWpxB,EAAOI,MAClBxmC,EAAKomC,EAAOI,MACZtV,EAAQkV,EAAO4B,MACf/V,EAASmU,EAAO4B,MAChB7a,EAAOiZ,EAAOI,MACpBJ,EAAOM,KAAK,IACZ,IAAMxe,EAAOke,EAAOge,aAAaj3B,GACjC,MAAO,CACHntB,KACAg2B,OAAQ,CAACuhC,EAAUC,GACnBtmC,QACAe,SACA9E,OACAjF,QAnCcuvC,CAAcpuB,EAAMnhB,QAUtC,OARKi+B,EAEMA,EAAOkR,gBAAkB/E,EAAS3zD,QACzC8vB,GAAOyI,KAAP,SAAAp0B,OACawvD,EAAS3zD,OADtB,yBAAAmE,OACoDqjD,EAAOkR,cAD3D,+BAFA5oC,GAAOyI,KAAK,oBAOT,CAAEo7B,YChCN,SAASoF,GAAgBC,GAC5B,OAAOA,EAAIrF,SAAStvD,IAAI40D,IAGrB,SAASA,GAAuBpF,GACnC,IAAIx8B,EACA6hC,EAGJ,OAAQrF,EAAIx8B,OAAO,IACf,KAAK,EACDA,EAAS8hC,yBACTD,EAAarF,EAAIthC,MAAQshC,EAAIvgC,OAAU,EACvC,MACJ,KAAK,EACD+D,EAAS+hC,yBACTF,EAAYrF,EAAIthC,MAAQshC,EAAIvgC,OAC5B,MACJ,QACI,MAAM,IAAIpvB,MAAJ,UAAAC,OAAoB0vD,EAAIx8B,OAAOjD,KAAK,MAApC,oBAGd,IAAMilC,EAAc,IAAIC,qBACpB,CACI,CACI/vC,KAAM,IAAI+d,WAAWusB,EAAItqC,KAAM,EAAG2vC,GAClC3mC,MAAOshC,EAAIthC,MACXe,OAAQugC,EAAIvgC,SAGpBugC,EAAIthC,MACJshC,EAAIvgC,OACJ+D,GAQJ,OALAgiC,EAAYE,UAAYC,gBACxBH,EAAYI,MAAQC,0BACpBL,EAAYM,MAAQD,0BACpBL,EAAYO,aAAc,EAEnBP,ECvCX,IAAMvpC,GAASC,IAAO5uB,IAAI,oBAEpB04D,GAAiB,IAAIC,0BAAuB,EAAG,EAAG,IACxDD,GAAeE,UAAU,EAAG,GAAI,GAEhC,IAAMC,GAAkD,IAAIxyC,QAAQ,SAAAC,GAAO,OACvEA,EAAQoyC,MAGNI,GAAgC,GAEhCC,GAAiD,IAAI1yC,QAAQ,SAAAC,GAAO,OACtEA,EAAQwyC,MAGNE,GAAY,IAAItf,GACtBsf,GAAUn5D,IAAIyC,EAAQe,QAASw1D,IAE/B,IAAMI,GAAgB,IAAIvf,GAC1Buf,GAAcp5D,IAAIyC,EAAQe,QAAS01D,IAKnC,IAHA,IAkHKG,GAlHCC,GAAe,IAAIzf,GACnB0f,GAAmB,IAAI1f,GAE7B2f,GAAA,EAAAC,GAAmB,CACfltD,GAAW/I,QACX+I,GAAWG,UACXH,GAAWU,aACXV,GAAWW,eACXX,GAAWiB,UACXjB,GAAWqB,gBACXrB,GAAWyB,UACXzB,GAAW2B,eACX3B,GAAW6C,eACX7C,GAAWmC,gBACXnC,GAAWoC,iBACXpC,GAAWqC,iBACXrC,GAAWsC,iBACXtC,GAAWuC,aACXvC,GAAWwC,gBACXxC,GAAW8C,iBACX9C,GAAWoE,4BACXpE,GAAW8M,gBACX9M,GAAW6P,oBAnBfo9C,GAAAC,GAAAz6D,OAAAw6D,KAoBG,CApBE,IAAM93D,GAAI+3D,GAAAD,IAqBXF,GAAat5D,IAAI0B,GAAMs3D,IACvBO,GAAiBv5D,IAAI0B,GAAMw3D,IAGxB,SAAeQ,GAAtBhwC,GAAA,OAAAiwC,GAAAxzC,MAAA/nB,KAAAgoB,0DAAO,SAAA0Y,EAAiC1b,GAAjC,OAAA8B,GAAAC,EAAAG,KAAA,SAAAyZ,GAAA,cAAAA,EAAAvZ,KAAAuZ,EAAAj/B,MAAA,cAAAi/B,EAAArZ,OAAA,SACIyzC,GAAUjf,WAAW92B,EAArBllB,OAAA+mB,GAAA,EAAA/mB,CAAAgnB,GAAAC,EAAAC,KAA+B,SAAAC,IAAA,IAAAuL,EAAA+oB,EAAApxB,EAAAke,EAAAmzB,EAAA,OAAA10C,GAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAzlB,MAAA,cAAAylB,EAAAC,KAAA,EAAAD,EAAAzlB,KAAA,EAEF+5D,GAAcz2C,EAAUi2C,GAAUngB,UAFhC,UAAAtoB,EAAArL,EAAAO,KAEtB6zB,EAFsB/oB,EAEtB+oB,IAAKpxB,EAFiBqI,EAEjBrI,KACPke,EAAS,IAAI5C,GAAkBtb,EAAM6a,GAAWqB,UAChDm1B,EAAajgB,EAAImO,SAAS,OAASzX,GAAS5J,GAAU8J,GAAS9J,IAEtDznC,OANe,CAAAumB,EAAAzlB,KAAA,gBAAAylB,EAAAG,OAAA,SAOnBovB,GAAgC8kB,EAAW,KAPxB,eAS1B9qC,GAAOyI,KAAP,kBAAAp0B,OAA8Bw2C,EAA9B,SAAAx2C,OAAyCigB,EAAS1gB,KAAlD,MAT0B6iB,EAAAG,OAAA,SAUnBmzC,IAVmB,QAAAtzC,EAAAzlB,KAAA,wBAAAylB,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAa9BuJ,GAAOyI,KAAP,mCAAAp0B,OAA+CigB,EAAS1gB,KAAxD,KAAA6iB,EAAAU,IAb8BV,EAAAG,OAAA,SAcvBmzC,IAduB,yBAAAtzC,EAAAW,SAAAb,EAAA,oBADnC,wBAAA0Z,EAAA7Y,SAAA4Y,6BAoBA,SAAeg7B,GAAtB3c,GAAA,OAAA4c,GAAA5zC,MAAA/nB,KAAAgoB,0DAAO,SAAA01B,EAA4B14B,GAA5B,OAAA8B,GAAAC,EAAAG,KAAA,SAAA22B,GAAA,cAAAA,EAAAz2B,KAAAy2B,EAAAn8C,MAAA,cAAAm8C,EAAAv2B,OAAA,SACI0zC,GAAclf,WAAW92B,EAAzBllB,OAAA+mB,GAAA,EAAA/mB,CAAAgnB,GAAAC,EAAAC,KAAmC,SAAA4Z,IAAA,IAAA1J,EAAA/M,EAAAke,EAAAuxB,EAAA,OAAA9yC,GAAAC,EAAAG,KAAA,SAAAqa,GAAA,cAAAA,EAAAna,KAAAma,EAAA7/B,MAAA,cAAA6/B,EAAAna,KAAA,EAAAma,EAAA7/B,KAAA,EAEX+5D,GAAcz2C,EAAUi2C,GAAUW,SAFvB,cAAA1kC,EAAAqK,EAAA7Z,KAE1ByC,EAF0B+M,EAE1B/M,KACFke,EAAS,IAAI5C,GAAkBtb,EAAM6a,GAAWqB,QAChDuzB,EAAMR,GAAU/wB,GAJY9G,EAAAja,OAAA,SAK3BqyC,GAAgBC,IALW,eAAAr4B,EAAAna,KAAA,GAAAma,EAAA1Z,GAAA0Z,EAAA,SAOlC7Q,GAAOyI,KAAP,kCAAAp0B,OAA8CigB,EAAS1gB,KAAvD,KAAAi9B,EAAA1Z,IAPkC0Z,EAAAja,OAAA,SAQ3BuzC,IAR2B,yBAAAt5B,EAAAzZ,SAAA8Y,EAAA,oBADvC,wBAAAid,EAAA/1B,SAAA41B,6BAcA,SAAeme,GAAtB7c,GAAA,OAAA8c,GAAA/zC,MAAA/nB,KAAAgoB,0DAAO,SAAA+zC,EAAoCC,GAApC,OAAAl1C,GAAAC,EAAAG,KAAA,SAAA+0C,GAAA,cAAAA,EAAA70C,KAAA60C,EAAAv6D,MAAA,cAAAu6D,EAAA30C,OAAA,SACI4zC,GAAapf,WAAWkgB,EAAxBl8D,OAAA+mB,GAAA,EAAA/mB,CAAAgnB,GAAAC,EAAAC,KAAqC,SAAAk1C,IAAA,IAAAC,EAAA5gB,EAAApxB,EAAAke,EAAAmzB,EAAA,OAAA10C,GAAAC,EAAAG,KAAA,SAAAk1C,GAAA,cAAAA,EAAAh1C,KAAAg1C,EAAA16D,MAAA,cAAA06D,EAAAh1C,KAAA,EAAAg1C,EAAA16D,KAAA,EAER26D,GAAiBL,EAAaf,GAAUngB,UAFhC,UAAAqhB,EAAAC,EAAA10C,KAE5B6zB,EAF4B4gB,EAE5B5gB,IAAKpxB,EAFuBgyC,EAEvBhyC,KACPke,EAAS,IAAI5C,GAAkBtb,EAAM6a,GAAWqB,UAChDm1B,EAAajgB,EAAImO,SAAS,OAASzX,GAAS5J,GAAU8J,GAAS9J,IAEtDznC,OANqB,CAAAw7D,EAAA16D,KAAA,gBAAA06D,EAAA90C,OAAA,SAOzBovB,GAAgC8kB,EAAW,KAPlB,eAShC9qC,GAAOyI,KAAP,kBAAAp0B,OAA8Bw2C,EAA9B,SAAAx2C,OAAyCi3D,EAAY95D,KAArD,MATgCk6D,EAAA90C,OAAA,SAUzBmzC,IAVyB,QAAA2B,EAAA16D,KAAA,wBAAA06D,EAAAh1C,KAAA,GAAAg1C,EAAAv0C,GAAAu0C,EAAA,SAapC1rC,GAAOyI,KAAP,mCAAAp0B,OAA+Ci3D,EAAY95D,KAA3D,KAAAk6D,EAAAv0C,IAboCu0C,EAAA90C,OAAA,SAc7BmzC,IAd6B,yBAAA2B,EAAAt0C,SAAAo0C,EAAA,oBADzC,wBAAAD,EAAAn0C,SAAAi0C,6BAoBA,SAAeO,GAAtBpgB,GAAA,OAAAqgB,GAAAx0C,MAAA/nB,KAAAgoB,0DAAO,SAAAw0C,EAA+BR,GAA/B,OAAAl1C,GAAAC,EAAAG,KAAA,SAAAu1C,GAAA,cAAAA,EAAAr1C,KAAAq1C,EAAA/6D,MAAA,cAAA+6D,EAAAn1C,OAAA,SACI6zC,GAAiBrf,WAAWkgB,EAA5Bl8D,OAAA+mB,GAAA,EAAA/mB,CAAAgnB,GAAAC,EAAAC,KAAyC,SAAA01C,IAAA,IAAAn/B,EAAApT,EAAAke,EAAAuxB,EAAA,OAAA9yC,GAAAC,EAAAG,KAAA,SAAAy1C,GAAA,cAAAA,EAAAv1C,KAAAu1C,EAAAj7D,MAAA,cAAAi7D,EAAAv1C,KAAA,EAAAu1C,EAAAj7D,KAAA,EAEjB26D,GAAiBL,EAAaf,GAAUW,SAFvB,cAAAr+B,EAAAo/B,EAAAj1C,KAEhCyC,EAFgCoT,EAEhCpT,KACFke,EAAS,IAAI5C,GAAkBtb,EAAM6a,GAAWqB,QAChDuzB,EAAMR,GAAU/wB,GAJkBs0B,EAAAr1C,OAAA,SAKjCqyC,GAAgBC,IALiB,eAAA+C,EAAAv1C,KAAA,GAAAu1C,EAAA90C,GAAA80C,EAAA,SAOxCjsC,GAAOyI,KAAP,kCAAAp0B,OAA8Ci3D,EAAY95D,KAA1D,KAAAy6D,EAAA90C,IAPwC80C,EAAAr1C,OAAA,SAQjCuzC,IARiC,yBAAA8B,EAAA70C,SAAA40C,EAAA,oBAD7C,wBAAAD,EAAA30C,SAAA00C,6BAcA,SAAef,GAAtBtf,EAAAC,GAAA,OAAAwgB,GAAA70C,MAAA/nB,KAAAgoB,0DAAO,SAAA60C,EACH73C,EACA1hB,GAFG,IAAAi4C,EAAApxB,EAAA,OAAArD,GAAAC,EAAAG,KAAA,SAAA41C,GAAA,cAAAA,EAAA11C,KAAA01C,EAAAp7D,MAAA,cAIG65C,EAAMwhB,GAAgB/3C,EAAU1hB,GAJnCw5D,EAAAp7D,KAAA,EAKgB25C,GAAkBE,GALlC,cAKGpxB,EALH2yC,EAAAp1C,KAAAo1C,EAAAx1C,OAAA,SAMI,CAAEi0B,MAAKpxB,SANX,wBAAA2yC,EAAAh1C,SAAA+0C,6BASA,SAAeR,GAAtB7f,EAAAC,GAAA,OAAAugB,GAAAj1C,MAAA/nB,KAAAgoB,0DAAO,SAAAi1C,EACHjB,EACA14D,GAFG,IAAAi4C,EAAApxB,EAAA,OAAArD,GAAAC,EAAAG,KAAA,SAAAg2C,GAAA,cAAAA,EAAA91C,KAAA81C,EAAAx7D,MAAA,cAIG65C,EAAM4hB,GAAmBnB,EAAa14D,GAJzC45D,EAAAx7D,KAAA,EAKgB25C,GAAkBE,GALlC,cAKGpxB,EALH+yC,EAAAx1C,KAAAw1C,EAAA51C,OAAA,SAMI,CAAEi0B,MAAKpxB,SANX,wBAAA+yC,EAAAp1C,SAAAm1C,6BAcP,SAASF,GAAgB/3C,EAAmB1hB,GACxC,OAAQ0hB,GAEJ,KAAK3gB,EAAQiE,UACT,eAAAvD,OAAgBigB,EAAS1gB,KAAzB,KAAAS,OAAiCzB,IAAS23D,GAAUngB,SAAW,KAAO,OAI1E,KAAKz2C,EAAQgF,WACT,OAAO0zD,GAAgB14D,EAAQiC,UAAWhD,GAC9C,KAAKe,EAAQiF,WACT,OAAOyzD,GAAgB14D,EAAQkC,UAAWjD,GAC9C,KAAKe,EAAQkF,UACT,OAAOwzD,GAAgB14D,EAAQmC,SAAUlD,GAC7C,KAAKe,EAAQuF,QACT,OAAOmzD,GAAgB14D,EAAQqC,OAAQpD,GAC3C,KAAKe,EAAQyF,YACT,OAAOizD,GAAgB14D,EAAQ8C,WAAY7D,GAC/C,KAAKe,EAAQ0F,SACT,OAAOgzD,GAAgB14D,EAAQ+C,QAAS9D,GAC5C,KAAKe,EAAQ2F,eACT,OAAO+yD,GAAgB14D,EAAQ6C,cAAe5D,GAClD,KAAKe,EAAQ4F,UACT,OAAO8yD,GAAgB14D,EAAQyE,SAAUxF,GAC7C,KAAKe,EAAQ6F,YACT,OAAO6yD,GAAgB14D,EAAQ0E,WAAYzF,GAC/C,KAAKe,EAAQ8F,YACT,OAAO4yD,GAAgB14D,EAAQ2E,WAAY1F,GAC/C,KAAKe,EAAQ+F,WACT,OAAO2yD,GAAgB14D,EAAQwE,UAAWvF,GAI9C,KAAKe,EAAQiG,YACT,OAAOyyD,GAAgB14D,EAAQuC,WAAYtD,GAC/C,KAAKe,EAAQkG,eACT,OAAOwyD,GAAgB14D,EAAQwC,cAAevD,GAClD,KAAKe,EAAQmG,SACT,OAAOuyD,GAAgB14D,EAAQsD,QAASrE,GAC5C,KAAKe,EAAQsG,SACT,OAAOoyD,GAAgB14D,EAAQ0D,QAASzE,GAC5C,KAAKe,EAAQuG,SACT,OAAOmyD,GAAgB14D,EAAQ2D,QAAS1E,GAC5C,KAAKe,EAAQwG,QACT,OAAOkyD,GAAgB14D,EAAQ4D,OAAQ3E,GAC3C,KAAKe,EAAQyG,WACT,OAAOiyD,GAAgB14D,EAAQiE,UAAWhF,GAC9C,KAAKe,EAAQ0G,UACT,OAAOgyD,GAAgB14D,EAAQmE,SAAUlF,GAC7C,KAAKe,EAAQ2G,eACT,OAAO+xD,GAAgB14D,EAAQoE,cAAenF,GAElD,QACI,eAAAyB,OAAgBigB,EAAS1gB,KAAzB,KAAAS,OAAiCzB,IAAS23D,GAAUngB,SAAW,KAAO,QAIlF,SAASqiB,GAAmBnB,EAAyB14D,GACjD,GAAIA,IAAS23D,GAAUngB,SAwBnB,kBAAA/1C,OAAmBi3D,EAAY5tD,OAA/B,QAvBA,OAAQ4tD,GACJ,KAAK7tD,GAAWwD,UAChB,KAAKxD,GAAW0D,cAChB,KAAK1D,GAAW2D,gBAChB,KAAK3D,GAAW6D,mBAChB,KAAK7D,GAAW8D,MAChB,KAAK9D,GAAW+D,aAChB,KAAK/D,GAAWuG,iBAChB,KAAKvG,GAAWyI,UAChB,KAAKzI,GAAW6O,QAChB,KAAK7O,GAAWkQ,MAChB,KAAKlQ,GAAWmQ,aAChB,KAAKnQ,GAAWuQ,YAChB,KAAKvQ,GAAW4Q,cAChB,KAAK5Q,GAAWiR,YAChB,KAAKjR,GAAWmR,oCAChB,KAAKnR,GAAWqR,QACZ,kBAAAza,OAAmBi3D,EAAY5tD,OAA/B,OAEJ,QACI,kBAAArJ,OAAmBi3D,EAAY5tD,OAA/B,kBApFX6sD,qECpIL,ICNI3I,GDME5hC,GAASC,IAAO5uB,IAAI,+BAEpBq7D,GAAkB,IAAI1oB,WAAQ,EAAG,IAAK,KACtC2oB,GAAgB,IAAI3oB,WAAQ,EAAG,EAAG,GAClC4oB,GAAe,IAAIC,YAEZC,GAAb,WAKI,SAAAA,EAAoBlL,GAA0BxyD,OAAAC,EAAA,EAAAD,CAAAE,KAAAw9D,GAAAx9D,KAA1BsyD,WAAyBtyD,KAJrCulB,WAIqC,EAAAvlB,KAHrC4kB,UAGqC,EAAA5kB,KAFrCy9D,0BAAiD,GAH7D,OAAA39D,OAAAG,EAAA,EAAAH,CAAA09D,EAAA,EAAAt9D,IAAA,cAAAC,MAAA,eAAAu9D,EAAA59D,OAAA+mB,GAAA,EAAA/mB,CAAAgnB,GAAAC,EAAAC,KAAA,SAAAC,EAOsB1B,EAAeX,GAPrC,IAAAngB,EAAA6d,EAAA67B,EAAAU,EAAA8Z,EAAAgF,EAAAz8D,EAAAC,EAAAC,EAAAG,EAAAD,EAAA8pD,EAAAwS,EAAAC,EAAAhuB,EAAAne,EAAAC,EAAAC,EAAAE,EAAAD,EAAAuX,EAAA00B,EAAAC,EAAAC,EAAA,OAAAl3C,GAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAzlB,MAAA,UAQY1B,KAAKulB,QAAUA,GAASvlB,KAAK4kB,OAASA,EARlD,CAAAuC,EAAAzlB,KAAA,eAAAylB,EAAAG,OAAA,oBAYQtnB,KAAKulB,MAAQA,EACbvlB,KAAK4kB,KAAOA,EAEZ5kB,KAAKi+D,4BAED14C,IAASX,EAjBrB,CAAAuC,EAAAzlB,KAAA,iBAAAylB,EAAAC,KAAA,EAoBsB3iB,EAAU8gB,EAAM9gB,QAChB6d,EAAUsC,EAAK3iB,GACfk8C,EAAU54B,EAAMrE,cAAciI,KAAK,SAAA/oB,GAAC,OAAIA,EAAEwkB,KAAK3iB,KAAOqgB,IACtDu8B,EAAcV,GAAWA,EAAQl8C,IAAO,EAvB9DklB,EAAAzlB,KAAA,GAyBiD66C,GAC7B93C,EACA6d,EACAu8B,GA5BpB,eAyBsB8Z,EAzBtBxxC,EAAAO,KAAAP,EAAAzlB,KAAA,GA+B8Cu6C,GAC1Bx3C,EACA6d,EACAu8B,GAlCpB,WA+BsB8e,EA/BtBx2C,EAAAO,KAqCgB1nB,KAAKk+D,mCAAmCvF,EAAoBgF,GAExD39D,KAAKulB,QAAUA,GAASvlB,KAAK4kB,OAASA,EAvC1D,CAAAuC,EAAAzlB,KAAA,gBAAAylB,EAAAG,OAAA,kBAyCgBtnB,KAAKsyD,SAASqG,mBAAqBA,EACnC34D,KAAKsyD,SAASqL,gBAAkBA,EAEhC39D,KAAKsyD,SAAS6L,aAAaf,GAAiBC,IAG5Cr9D,KAAKsyD,SAAS8L,sBA/C9Bl9D,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA8lB,EAAAC,KAAA,GAAA7lB,EAiDkCgkB,EAAMnE,KAjDxC5f,OAAAC,YAAA,WAAAP,GAAAI,EAAAC,EAAAG,QAAAC,KAAA,CAAAwlB,EAAAzlB,KAAA,aAiD2B0pD,EAjD3B9pD,EAAAnB,OAkD4BmiB,UAAYsC,EAAK3iB,GAlD7C,CAAAklB,EAAAzlB,KAAA,gBAAAylB,EAAAzlB,KAAA,GAmD+C45D,GAAkBlQ,EAAI9nD,MAnDrE,eAmD8Bs6D,EAnD9Bz2C,EAAAO,KAAAP,EAAAzlB,KAAA,GAoD8C28D,GAAkBjT,EAAI9nD,MApDpE,WAoD8Bu6D,EApD9B12C,EAAAO,KAsD4B1nB,KAAKulB,QAAUA,GAASvlB,KAAK4kB,OAASA,EAtDlE,CAAAuC,EAAAzlB,KAAA,gBAAAylB,EAAAG,OAAA,kBAwD8BuoB,EAAQ2kB,GAAgBpJ,EAAKwS,EAAUC,GAC7C79D,KAAKs+D,uBAAuBlT,EAAKvb,GAzDzD,QAAA3uC,GAAA,EAAAimB,EAAAzlB,KAAA,iBAAAylB,EAAAzlB,KAAA,iBAAAylB,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,UAAAhmB,GAAA,EAAAC,EAAA+lB,EAAAU,GAAA,QAAAV,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAAlmB,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAqlB,EAAAC,KAAA,IAAAjmB,EAAA,CAAAgmB,EAAAzlB,KAAA,eAAAN,EAAA,eAAA+lB,EAAAkE,OAAA,mBAAAlE,EAAAkE,OAAA,YAAAqG,GAAA,EAAAC,GAAA,EAAAC,OAAAvwB,EAAA8lB,EAAAC,KAAA,GAAA0K,EA6DqCvM,EAAMpE,QA7D3C3f,OAAAC,YAAA,WAAAiwB,GAAAG,EAAAC,EAAApwB,QAAAC,KAAA,CAAAwlB,EAAAzlB,KAAA,aA6D2B0nC,EA7D3BvX,EAAA1xB,OA8D+BmiB,UAAYsC,EAAK3iB,GA9DhD,CAAAklB,EAAAzlB,KAAA,gBAAAylB,EAAAzlB,KAAA,GA+DkDm6D,GAAqBzyB,EAAO9lC,MA/D9E,eA+D8Bw6D,EA/D9B32C,EAAAO,KAAAP,EAAAzlB,KAAA,GAgEiD68D,GAAqBn1B,EAAO9lC,MAhE7E,WAgE8By6D,EAhE9B52C,EAAAO,KAkE4B1nB,KAAKulB,QAAUA,GAASvlB,KAAK4kB,OAASA,EAlElE,CAAAuC,EAAAzlB,KAAA,gBAAAylB,EAAAG,OAAA,kBAoE8BuoB,EAAQykB,GAAmBlrB,EAAQ00B,EAAaC,GACtD/9D,KAAKs+D,uBAAuBl1B,EAAQyG,GArE5D,QAAAne,GAAA,EAAAvK,EAAAzlB,KAAA,iBAAAylB,EAAAzlB,KAAA,iBAAAylB,EAAAC,KAAA,GAAAD,EAAAiE,GAAAjE,EAAA,UAAAwK,GAAA,EAAAC,EAAAzK,EAAAiE,GAAA,QAAAjE,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAAsK,GAAA,MAAAI,EAAAhwB,QAAAgwB,EAAAhwB,SAAA,WAAAqlB,EAAAC,KAAA,IAAAuK,EAAA,CAAAxK,EAAAzlB,KAAA,eAAAkwB,EAAA,eAAAzK,EAAAkE,OAAA,mBAAAlE,EAAAkE,OAAA,YAAAlE,EAAAzlB,KAAA,kBAAAylB,EAAAC,KAAA,GAAAD,EAAAyY,GAAAzY,EAAA,SAyEgBuJ,GAAOe,MAAP,kCAAA1sB,OAA+CwgB,EAAMtjB,GAArD,MAAA8C,OAA4D6f,EAAK1iB,KAAjE,KAAAilB,EAAAyY,IACA5/B,KAAKsyD,SAASqG,mBAAqB2E,GACnCt9D,KAAKsyD,SAASqL,gBAAkBL,GAChCt9D,KAAKsyD,SAAS8L,sBA5E9B,SAAAj3C,EAAAzlB,KAAA,mBA+EY1B,KAAKsyD,SAASqG,mBAAqB2E,GACnCt9D,KAAKsyD,SAASqL,gBAAkBL,GAChCt9D,KAAKsyD,SAAS8L,sBAjF1B,0BAAAj3C,EAAAW,SAAAb,EAAAjnB,KAAA,iFAAAsrB,EAAAyzB,GAAA,OAAA2e,EAAA31C,MAAA/nB,KAAAgoB,YAAA,KAAA9nB,IAAA,qCAAAC,MAAA,SAsFQq+D,EACAC,GAEA,IAAM5J,EAAY,IAAIC,aAChBiE,EAAS,IAAIrkB,WACbgqB,EAAO,IAAIhqB,WAAQ,GAAI,EAAG,GAC1BiqB,EAAK,IAAIjqB,WAAQ,EAAG,EAAG,GAJzBpZ,GAAA,EAAAC,GAAA,EAAAC,OAAAn6B,EAAA,IAMJ,QAAAq6B,EAAAD,EAA6B+iC,EAAenuC,SAA5C7uB,OAAAC,cAAA65B,GAAAI,EAAAD,EAAA/5B,QAAAC,MAAA25B,GAAA,EAAsD,KAA3CsjC,EAA2CljC,EAAAv7B,MACjDy+D,EAAwBtiB,SAASuiB,YAAYC,UAAU/F,GAExDlE,EAAUjzD,IAAIm3D,EAAQ2F,GACtB,IAAMK,EAAgBlK,EACjBmK,gBAAgBP,GAAa,GAC7Bt1C,KAAK,SAAA+F,GAAC,OAAmD,MAA9CA,EAAEka,OAAO8L,SAA0BnyB,UAEnD8xC,EAAUjzD,IAAIm3D,EAAQ4F,GACtB,IAAMM,EAAgBpK,EACjBmK,gBAAgBP,GAAa,GAC7Bt1C,KAAK,SAAA+F,GAAC,OAAmD,MAA9CA,EAAEka,OAAO8L,SAA0BnyB,UAE/Cq1C,OAAsC,EAW1C,GARIA,EADA2G,GAAiBE,EAEbF,EAAclG,UAAYoG,EAAcpG,SAClCkG,EACAE,EAEKF,GAAiBE,EAGlB,CACd,IAAMC,EAAMN,EAAe1pB,SACrBiqB,EAAM/G,EAAahvB,OAAO8L,SAChCgqB,EAAIn8C,QAAUo8C,EAAIp8C,UAjCtB,MAAAlhB,GAAA05B,GAAA,EAAAC,EAAA35B,EAAA,YAAAy5B,GAAA,MAAAG,EAAA35B,QAAA25B,EAAA35B,SAAA,WAAAy5B,EAAA,MAAAC,MAxFZ,CAAAt7B,IAAA,yBAAAC,MAAA,SA8HmC8uD,EAAqBpf,GAAmB,IAAAlsB,EAAA3jB,KACnEA,KAAKsyD,SAAS8M,iBAAiBvvB,GAE/B7vC,KAAKy9D,0BAA0BtyC,KAC3BoG,YAAQ,WAAM,IAAA29B,EACUD,EAAO1uC,SAAnB3gB,EADEsvD,EACFtvD,EAAGC,EADDqvD,EACCrvD,EAAGS,EADJ4uD,EACI5uD,EACduvC,EAAMtvB,SAAS3e,IAAIhC,EAAGC,EAAGS,GACzB,IAAM0rD,EAAMiD,EAAOzsC,SACnBqtB,EAAMrtB,SAAS5gB,IAAIoqD,EAAIpsD,EAAGosD,EAAInsD,EAAGmsD,EAAI1rD,GACrCqjB,EAAK2uC,SAASwD,uBAvI9B,CAAA51D,IAAA,2BAAAC,MAAA,WA4I6C,IAAAm8B,GAAA,EAAAC,GAAA,EAAAC,OAAAn7B,EAAA,IACrC,QAAAq7B,EAAAD,EAAuBz8B,KAAKy9D,0BAA5Bj8D,OAAAC,cAAA66B,GAAAI,EAAAD,EAAA/6B,QAAAC,MAAA26B,GAAA,EAAuD,EACnD+0B,EADmD30B,EAAAv8B,UADlB,MAAA0B,GAAA06B,GAAA,EAAAC,EAAA36B,EAAA,YAAAy6B,GAAA,MAAAG,EAAA36B,QAAA26B,EAAA36B,SAAA,WAAAy6B,EAAA,MAAAC,QA5I7CghC,EAAA,aEPM6B,UAAgBC,GAAqBC,IAE9BC,GAAb,WAoBI,SAAAA,EAAYpI,GAAW,IAAAzzC,EAAA3jB,KAAAF,OAAAC,EAAA,EAAAD,CAAAE,KAAAw/D,GAAAx/D,KAnBby/D,QAAS,EAmBIz/D,KATdo3D,YASc,EAAAp3D,KARd41D,cAQc,EAAA51D,KAPd0/D,MAAQ,IAAIC,SAOE3/D,KANd4/D,aAAe,IAAIhlB,SAML56C,KAJfsyD,SAAW,IAAIuN,iBAAc,CAAEC,WAAW,IAI3B9/D,KAHf+/D,kBAAmB,EAGJ//D,KAFfggE,MAAQ,IAAIC,mBAAgB,SAAU,QAAU,KAEjCjgE,KA+BvB81D,gBAAkB,WACTnyC,EAAKo8C,mBACNp8C,EAAKo8C,kBAAmB,EACxBG,sBAAsBv8C,EAAKw8C,eAlCZngE,KAgDfmgE,YAAc,WAClBx8C,EAAKo8C,kBAAmB,EACxBp8C,EAAKy8C,UAjDLpgE,KAAKo3D,OAASA,EAEdp3D,KAAK41D,SAAW,IAAIyJ,GAAcjI,EAAQp3D,KAAK0yD,aAC/C1yD,KAAK41D,SAASyK,aAAaC,MAAQC,SAAMC,MACzCxgE,KAAK41D,SAASyK,aAAaI,IAAMF,SAAMG,KACvC1gE,KAAK41D,SAAShI,iBAAiB,SAAU5tD,KAAK81D,iBAE9C91D,KAAK0/D,MAAMiB,WAAa,IAAI7jB,SAAM,SAClC98C,KAAK4/D,aAAa7qB,IAAI/0C,KAAKggE,OAC3BhgE,KAAK0/D,MAAM3qB,IAAI/0C,KAAK4/D,cAEpB5/D,KAAKsyD,SAASsO,cAAc93C,OAAO+3C,kBAhC3C,OAAA/gE,OAAAG,EAAA,EAAAH,CAAA0/D,EAAA,EAAAt/D,IAAA,QAAA6B,IAAA,WAIQ,OAAO/B,KAAKy/D,QAJpB79D,IAAA,SAOcgqD,GACN5rD,KAAKy/D,OAAS7T,MARtB9rD,OAAAG,EAAA,EAAAH,CAAA0/D,EAAA,EAAAt/D,IAAA,WAAAC,MAAA,SAuCagzB,EAAee,GACpBl0B,KAAKsyD,SAASwO,QAAQ3tC,EAAOe,GAC7Bl0B,KAAK81D,oBAzCb,CAAA51D,IAAA,+BAAAC,MAAA,SA4CiCK,GACzB,IAAMugE,EAAS/gE,KAAKsyD,SAAS0O,QAAQ,IAAI/qB,YAGzC,OAFA8qB,EAAO5tC,MAAS3yB,EAAEo2D,QAAUmK,EAAO5tC,MAAS,EAAI,EAChD4tC,EAAO7sC,OAAU1zB,EAAEq2D,QAAUkK,EAAO7sC,QAAW,EAAI,EAC5C6sC,IAhDf,CAAA7gE,IAAA,eAAAC,MAAA,SA0DiBogB,EAAmB0gD,GAC5BjhE,KAAK41D,SAASsL,QACdlhE,KAAKo3D,OAAO72C,SAAS4gD,KAAK5gD,GAC1BvgB,KAAKo3D,OAAOgK,OAAOH,KA7D3B,CAAA/gE,IAAA,SAAAC,MAAA,WAiEQH,KAAKsyD,SAAS8N,OAAOpgE,KAAK0/D,MAAO1/D,KAAKo3D,UAjE9C,CAAAl3D,IAAA,cAAA6B,IAAA,WAoCQ,OAAO/B,KAAKsyD,SAAS+O,eApC7B7B,EAAA,GDAO,UEFK8B,GAUAC,GFRCC,GAAb,SAAAC,GA+CI,SAAAD,IAAc,IAAA79C,EAAA7jB,OAAAC,EAAA,EAAAD,CAAAE,KAAAwhE,IACV79C,EAAA7jB,OAAA8jB,EAAA,EAAA9jB,CAAAE,KAAAF,OAAAgjB,EAAA,EAAAhjB,CAAA0hE,GAAA39C,KAAA7jB,KAAM,IAAI0hE,qBAAkB,GAAI,EAAG,GAAI,QAnCnCC,oBAAsB,IAAIpE,YAkCpB55C,EAtBNi+C,iBAAmB,IAAIrE,YAsBjB55C,EATNk+C,eAAiB,IAAItE,YASf55C,EAHNm+C,eAAiB,IAAI7gE,IAGf0iB,EAFNo+C,qBAEM,EAGV,IAAMC,EAAgB,IAAIxE,GAAJ19D,OAAAikB,EAAA,EAAAjkB,CAAA6jB,IAHZ,OAKV4N,YAAQ,WACJywC,EAAcC,YACVvT,GAAmBiB,cACnBjB,GAAmB+B,gBAI3B9sC,EAAKo+C,gBAAkB,IAAInN,GAAJ90D,OAAAikB,EAAA,EAAAjkB,CAAA6jB,IAEvBA,EAAK+uC,YAAY9E,iBAAiB,YAAajqC,EAAKo+C,gBAAgBzM,eACpE3xC,EAAK+uC,YAAY9E,iBAAiB,UAAWjqC,EAAKo+C,gBAAgBhM,aAClEpyC,EAAK+uC,YAAY9E,iBAAiB,YAAajqC,EAAKo+C,gBAAgB9L,eAhB1DtyC,EA/ClB,OAAA7jB,OAAAkkB,EAAA,EAAAlkB,CAAA0hE,EAAAC,GAAA3hE,OAAAG,EAAA,EAAAH,CAAA0hE,EAAA,EAAAthE,IAAA,QAAA6B,IAAA,WAEQ,OAAO/B,KAAKy/D,QAFpB79D,IAAA,SAKcgqD,GACF5rD,KAAKy/D,SAAW7T,IAChB5rD,KAAKy/D,OAAS7T,EACd5rD,KAAK4hE,iBAAiBp/B,QAAUopB,EAChC5rD,KAAK81D,qBATjB,CAAA51D,IAAA,qBAAA6B,IAAA,WAgBQ,OAAO/B,KAAK2hE,qBAhBpB//D,IAAA,SAmB2B+2D,GACnB34D,KAAK0/D,MAAMwC,OAAOliE,KAAK24D,oBACvB34D,KAAK2hE,oBAAsBhJ,EAC3B34D,KAAK0/D,MAAM3qB,IAAI4jB,KAtBvB,CAAAz4D,IAAA,kBAAA6B,IAAA,WA4BQ,OAAO/B,KAAK4hE,kBA5BpBhgE,IAAA,SA+BwB+7D,GAChB39D,KAAK0/D,MAAMwC,OAAOliE,KAAK4hE,kBACvB5hE,KAAK4hE,iBAAmBjE,EACxBA,EAAgBn7B,QAAUxiC,KAAK4rD,MAC/B5rD,KAAK0/D,MAAM3qB,IAAI4oB,KAnCvB,CAAAz9D,IAAA,gBAAA6B,IAAA,WAyCQ,OAAO/B,KAAK6hE,mBAzCpB/hE,OAAAG,EAAA,EAAAH,CAAA0hE,EAAA,EAAAthE,IAAA,WAAAC,MAAA,SAkEagzB,EAAee,GACpBl0B,KAAKo3D,OAAO+K,OAAShvC,EAAQe,EAC7Bl0B,KAAKo3D,OAAOgL,yBACZtiE,OAAAuiE,GAAA,EAAAviE,QAAAgjB,EAAA,EAAAhjB,CAAA0hE,EAAA39D,WAAA,WAAA7D,MAAA6jB,KAAA7jB,KAAemzB,EAAOe,KArE9B,CAAAh0B,IAAA,sBAAAC,MAAA,WAyEQH,KAAK0/D,MAAMwC,OAAOliE,KAAK6hE,gBACvB7hE,KAAK6hE,eAAiB,IAAIjnB,SAC1B56C,KAAK0/D,MAAM3qB,IAAI/0C,KAAK6hE,gBACpB7hE,KAAK8hE,eAAevR,UA5E5B,CAAArwD,IAAA,mBAAAC,MAAA,SA+EqB0vC,GACb,IAAMof,EAAUpf,EAAMqF,SAA4B+Z,OAClDjvD,KAAK6hE,eAAe9sB,IAAIlF,GACxB7vC,KAAK8hE,eAAelgE,IAAIqtD,EAAQpf,GAE5Bof,IAAWP,GAAmB8B,iBAC9BxwD,KAAK+hE,gBAAgB5M,2BArFjC,CAAAj1D,IAAA,kBAAAC,MAAA,SAyFoB8uD,GACZ,OAAOjvD,KAAK8hE,eAAe//D,IAAIktD,OA1FvCuS,EAAA,CAAmChC,IGFtB8C,GADZv0C,YACDw0C,GAAA,SAAAt0C,GAAA,SAAAq0C,IAAA,IAAAp0C,EAAAvK,EAAA7jB,OAAAC,EAAA,EAAAD,CAAAE,KAAAsiE,GAAA,QAAAn0C,EAAAnG,UAAApnB,OAAAwtB,EAAA,IAAArM,MAAAoM,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAArG,UAAAqG,GAAA,OAAA1K,EAAA7jB,OAAA8jB,EAAA,EAAA9jB,CAAAE,MAAAkuB,EAAApuB,OAAAgjB,EAAA,EAAAhjB,CAAAwiE,IAAAz+C,KAAAkE,MAAAmG,EAAA,CAAAluB,MAAA+E,OAAAqpB,MASI6B,MAAQ,CACJ27B,OAAO,EACP4W,kBAAkB,EAClBC,qBAAsB,YAZ9B9+C,EAyCY++C,gBAAkB,SAACC,GACvB,IAAMzgE,EAAOygE,EACPA,EAASjZ,SAAS,QACdiZ,EAAS15C,MAAM,GAAI,GACnB05C,EACJh/C,EAAKsM,MAAMwyC,qBAEjB9+C,EAAK8e,SAAS,CACV+/B,kBAAkB,EAClBC,qBAAsBvgE,KAlDlCyhB,EAsDYi/C,6BAA+B,SAACD,GACpCh/C,EAAK8e,SAAS,CAAEggC,qBAAsBE,KAvD9Ch/C,EA0DYk/C,qBAAuB,WAC3BnU,GAAmBgB,2BAA2B/rC,EAAKsM,MAAMwyC,sBACzD9+C,EAAK8e,SAAS,CAAE+/B,kBAAkB,KA5D1C7+C,EA+DYm/C,sBAAwB,WAC5Bn/C,EAAK8e,SAAS,CAAE+/B,kBAAkB,KAhE1C7+C,EAmEYo/C,MAAQ,SAACviE,GACTA,EAAEwiE,SAAqB,MAAVxiE,EAAEN,MAAgBM,EAAEyiE,OACjCvU,GAAmBC,WAAWX,OACvBxtD,EAAEwiE,SAAqB,MAAVxiE,EAAEN,MAAgBM,EAAEyiE,OACxCvU,GAAmBC,WAAWV,OACvBztD,EAAEwiE,SAAWxiE,EAAEyiE,QAAoB,MAAVziE,EAAEN,KAClCyjB,EAAK8e,SAAS,SAAAxS,GAAK,MAAK,CAAE27B,OAAQ37B,EAAM27B,UAzEpDjoC,EAAA,OAAA7jB,OAAAkkB,EAAA,EAAAlkB,CAAAwiE,EAAAr0C,GAAAnuB,OAAAG,EAAA,EAAAH,CAAAwiE,EAAA,EAAApiE,IAAA,oBAAAC,MAAA,WAgBQmoB,GAAkBE,gBAAgB,eAAgBxoB,KAAK+iE,SAhB/D,CAAA7iE,IAAA,SAAAC,MAAA,WAoBQ,IAAMolB,EAAQmpC,GAAmBiB,cAEjC,OACIpiC,EAAAxG,EAAAyG,cAAA,OAAKG,UAAU,2BACXJ,EAAAxG,EAAAyG,cAAC01C,GAAD,CAASC,mBAAoBnjE,KAAK0iE,kBAClCn1C,EAAAxG,EAAAyG,cAAA,OAAKG,UAAU,gCACXJ,EAAAxG,EAAAyG,cAAC41C,GAAD,CAAoB79C,MAAOA,IAC3BgI,EAAAxG,EAAAyG,cAAC61C,GAAD,CAAmB/Q,UH7B9BA,KAAUA,GAAW,IAAIkP,IACvBlP,IG4B4D1G,MAAO5rD,KAAKiwB,MAAM27B,QACrEr+B,EAAAxG,EAAAyG,cAAC81C,GAAD,CAAqBrU,OAAQP,GAAmB8B,mBAEpDjjC,EAAAxG,EAAAyG,cAAC+1C,GAAD,CACIC,QAASxjE,KAAKiwB,MAAMuyC,iBACpBG,SAAU3iE,KAAKiwB,MAAMwyC,qBACrBgB,mBAAoBzjE,KAAK4iE,6BACzBc,MAAO1jE,KAAK6iE,qBACZc,UAAW3jE,KAAK8iE,6BAnCpCR,EAAA,CAA0CvyC,eAA1CwyC,GA+EMqB,GADL71C,0NAEGkC,MAAQ,CACJ0yC,cAAUthE,KAoDNwiE,aAAe,SAACC,GAChBA,EAAKnc,KAAKoc,gBACV3/C,EAAKqe,SAAS,CAAEkgC,SAAUmB,EAAKnc,KAAKzlD,OACpCwsD,GAAmBE,UAAUkV,EAAKnc,KAAKoc,mBAIvCC,QAAU,WACd5/C,EAAKwJ,MAAMu1C,mBAAmB/+C,EAAK6L,MAAM0yC,aAGrC3U,KAAO,WACXU,GAAmBC,WAAWX,UAG1BC,KAAO,WACXS,GAAmBC,WAAWV,gFAhE9B,IAAMD,EAAOU,GAAmBC,WAC1BppC,EAAQmpC,GAAmBiB,cAC3BjR,EAAQn5B,EAAQxD,MAAMgmC,KAAKxiC,EAAMrE,eAAejc,IAAI,SAAA8hB,GAAC,OAAIA,EAAEnC,OAAQ,GACnEA,EAAO8pC,GAAmB+B,aAC1BnuC,EAAUsC,GAAQA,EAAK3iB,GAE7B,OACIsrB,EAAAxG,EAAAyG,cAAA,OAAKG,UAAU,mCACXJ,EAAAxG,EAAAyG,cAAAy2C,GAAA,GACIC,OAAO,OACPC,gBAAgB,EAChBn1C,SAAUhvB,KAAK6jE,aAEfO,cAAe,kBAAM,IAErB72C,EAAAxG,EAAAyG,cAAA4U,GAAA,GAAQC,KAAK,QAAQriC,KAAKiwB,MAAM0yC,UAAY,iBAEhDp1C,EAAAxG,EAAAyG,cAAA62C,EAAA,GACIr1C,SAAU0/B,GAAmBgC,oBAC7BvwD,MAAOmiB,EACPoR,MAAO,CAAEP,MAAO,KAChBmxC,UAAW/+C,GAEVm5B,EAAMz5C,IAAI,SAAA2f,GAAI,OACX2I,EAAAxG,EAAAyG,cAAA62C,EAAA,EAAQE,OAAR,CAAerkE,IAAK0kB,EAAK3iB,GAAI9B,MAAOykB,EAAK3iB,IACpC2iB,EAAK1iB,SAIlBqrB,EAAAxG,EAAAyG,cAAA4U,GAAA,GAAQC,KAAK,OAAOpN,QAASj1B,KAAKgkE,QAASM,UAAW/+C,GAAtD,cAGAgI,EAAAxG,EAAAyG,cAAA4U,GAAA,GACIC,KAAK,OACLpN,QAASj1B,KAAKguD,KACdz6B,MAAO,QAAUy6B,EAAKwW,WAAL,KAAAz/D,OAAuBipD,EAAKwW,WAAWzW,YAAvC,KAAwD,IACzEuW,UAAWtW,EAAKQ,WAEpBjhC,EAAAxG,EAAAyG,cAAA4U,GAAA,GACIC,KAAK,OACLpN,QAASj1B,KAAKiuD,KACd16B,MAAO,QAAUy6B,EAAKyW,WAAL,KAAA1/D,OAAuBipD,EAAKyW,WAAW1W,YAAvC,KAAwD,IACzEuW,UAAW5V,GAAmBC,WAAWF,mBAhDvC1+B,kBA0EhB20C,8MAiCMC,aAAe,SAACnkE,GACpBk3B,EAAK9J,MAAM61C,mBAAmBjjE,EAAEokE,cAAczkE,gFA1B9C,OACIotB,EAAAxG,EAAAyG,cAAAq3C,GAAA,GACItxC,MACIhG,EAAAxG,EAAAyG,cAAAD,EAAAxG,EAAA+9C,SAAA,KACIv3C,EAAAxG,EAAAyG,cAAA6U,GAAA,GAAM/+B,KAAK,SADf,eAIJk/B,QAASxiC,KAAK4tB,MAAM41C,QACpBuB,KAAM/kE,KAAK4tB,MAAM81C,MACjBsB,SAAUhlE,KAAK4tB,MAAM+1C,WAErBp2C,EAAAxG,EAAAyG,cAAAy3C,GAAA,GAAMC,OAAO,YACT33C,EAAAxG,EAAAyG,cAAAy3C,GAAA,EAAMt2D,KAAN,CAAWogB,MAAM,QACbxB,EAAAxG,EAAAyG,cAAA23C,GAAA,GACIC,WAAW,EACXC,UAAW,GACXllE,MAAOH,KAAK4tB,MAAM+0C,SAClB3zC,SAAUhvB,KAAK2kE,yBAzBlBvsC,IAAMrI,8BDnKzBu1C,GAAO,WAgEN,SAASC,GAAUl9B,EAAgBm9B,GACtC,OAAIn9B,EAAOI,QAAU68B,GAWzB,SAAsBj9B,EAAgBm9B,GAClC,IAAMC,EAAap9B,EAAOI,MAC1B,OAAOi9B,GAAar9B,EAAOuC,KAAK66B,GAAaD,GAZlCG,CAAat9B,EAAQm9B,IAE5Bn9B,EAAO9B,WAAW,GAgB1B,SAAsB8B,EAAgBm9B,GAClCn9B,EAAOE,SAAS,IAChB,IAAMq9B,EAAUv9B,EAAOI,MACvBJ,EAAO9B,WAAWq/B,GAClB,IAAMC,EAAgBx9B,EAAOI,MAE7B,OADAJ,EAAO9B,WAAWs/B,GAItB,SAAsBx9B,EAAgBm9B,GAClCn9B,EAAOM,KAAK,GACZ,IAAMm9B,EAAgBz9B,EAAOI,MAE7B,OADAJ,EAAO9B,WAAWu/B,GACXJ,GAAar9B,EAAQm9B,GAPrBO,CAAa19B,EAAQm9B,GArBjBQ,CAAa39B,EAAQm9B,IA+BpC,SAASE,GAAar9B,EAAgBm9B,GAWlC,IATA,IAAIS,EAAe59B,EAAOI,MACpBy9B,EAAc79B,EAAOI,MACrBnlC,EAAO+kC,EAAO4B,MACdk8B,EAAS99B,EAAO4B,MAEhBm8B,GAA2C,IAATD,IAAwB,EAC1DE,EAAyB,GAATF,EAChBG,EAAmB,GAEhBp3C,EAAI,EAAGA,EAAIs2C,EAAYt2C,IAAK,CACjCmZ,EAAO9B,WAAW0/B,GAClBA,EAAeA,GAAgB,EAAII,EAEnC,IAAIE,EAA4B,CAC5BC,OAAQ,IAEZF,EAAiBn7C,KAAKo7C,GAKtB,IAHA,IAAME,EAA6B,GAC7BC,EAA4B,GAEzB13B,EAAI,EAAGA,EAAIq3B,EAAer3B,IAC/By3B,EAAiBt7C,KAAKkd,EAAOI,OAGjC,IAAK,IAAIuG,EAAI,EAAGA,EAAIq3B,EAAer3B,IAAK,CACpC,IAAMtc,EAAQ2V,EAAOI,MACrBi+B,EAAgBv7C,KAAKuH,GAIzB,GAAY,EAARpvB,EAAiB,CACjB+kC,EAAO9B,WAAWkgC,EAAiBE,SACnC,IAAMj0C,EAAQg0C,EAAgBC,QAE1Bj0C,GACA6zC,EAAYC,OAAOr7C,KAAK,CACpB7nB,KAAMi+D,GAAoBqF,SAC1BC,UAAWC,GAAoBz+B,EAAQ3V,KAMnD,GAAY,EAARpvB,EAAiB,CACjB+kC,EAAO9B,WAAWkgC,EAAiBE,SACnC,IAAMj0C,EAAQg0C,EAAgBC,QAE1Bj0C,GACA6zC,EAAYC,OAAOr7C,KAAK,CACpB7nB,KAAMi+D,GAAoBwF,SAC1BF,UAAWG,GAAoB3+B,EAAQ3V,EAAOwzC,KAM1D,GAAY,EAAR5iE,EAAiB,CACjB+kC,EAAO9B,WAAWkgC,EAAiBE,SACnC,IAAMj0C,EAAQg0C,EAAgBC,QAE1Bj0C,GACA6zC,EAAYC,OAAOr7C,KAAK,CACpB7nB,KAAMi+D,GAAoB0F,MAC1BJ,UAAWC,GAAoBz+B,EAAQ3V,MAQvD,MAAO,CACH6zC,YAAaD,EACbJ,cACA5iE,OACA8iE,gBACAC,iBAIR,SAASS,GAAoBz+B,EAAgB3V,GAGzC,IAFA,IAAMw0C,EAAwB,GAErBh4C,EAAI,EAAGA,EAAIwD,IAASxD,EACzBg4C,EAAO/7C,KAAK,CACRg8C,MAAO9+B,EAAOI,MACdtoC,MAAO,IAAIE,EAAKgoC,EAAOb,MAAOa,EAAOb,MAAOa,EAAOb,SAI3D,OAAO0/B,EAGX,SAASF,GACL3+B,EACA++B,EACAlB,GAKA,IAHA,IAAMgB,EAAwB,GACxB39B,EAAYlB,EAAO9nB,SAEhB2O,EAAI,EAAGA,EAAIk4C,IAAkBl4C,EAClCg4C,EAAO/7C,KAAK,CACRg8C,MAAO9+B,EAAO4B,MACd9pC,MAAO,IAAIE,EACPgoC,EAAO4B,MAAQgH,GACf5I,EAAO4B,MAAQgH,GACf5I,EAAO4B,MAAQgH,MAO3B,IAFA,IAAI7pB,GAAQ,EAEZ+K,EAAA,EAAAk1C,EAAwBH,EAAxB/0C,EAAAk1C,EAAAzmE,OAAAuxB,IAAgC,KAAnBg1C,EAAmBE,EAAAl1C,GAAnBg1C,MACT,GAAIA,EAAQ//C,GAAQ+/C,GAASjB,EAEzB,OADA79B,EAAO9B,WAAWgD,GACX+9B,GAAyBj/B,EAAQ++B,GAG5ChgD,EAAO+/C,EAGX,OAAOD,EAGX,SAASI,GAAyBj/B,EAAgB++B,GAG9C,IAFA,IAAMF,EAAwB,GAErBh4C,EAAI,EAAGA,EAAIk4C,IAAkBl4C,EAClCg4C,EAAO/7C,KAAK,CACRg8C,MAAO9+B,EAAOI,MACdtoC,MAAO,IAAIE,EACPgoC,EAAOiL,MAAQrC,GACf5I,EAAOiL,MAAQrC,GACf5I,EAAOiL,MAAQrC,MAK3B,OAAOi2B,EErPJ,SAAeK,GAAtBj8C,EAAAyzB,EAAAC,GAAA,OAAAwoB,GAAAz/C,MAAA/nB,KAAAgoB,0DAAO,SAAAf,EACHwgD,EACAC,EACAze,GAHG,OAAAniC,GAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAzlB,MAAA,cAAAylB,EAAAzlB,KAAA,EAKU25C,GAAkBssB,GAAoBF,EAAcC,EAAWze,IALzE,cAAA9hC,EAAAG,OAAA,SAAAH,EAAAO,MAAA,wBAAAP,EAAAW,SAAAb,6BAQA,SAAe2gD,GAAtB1rB,GAAA,OAAA2rB,GAAA9/C,MAAA/nB,KAAAgoB,0DAAO,SAAA0Y,EAAyConC,GAAzC,OAAAhhD,GAAAC,EAAAG,KAAA,SAAAyZ,GAAA,cAAAA,EAAAvZ,KAAAuZ,EAAAj/B,MAAA,cAAAi/B,EAAAj/B,KAAA,EACU25C,GAAiB,+BAAAt2C,OACK+iE,EAAaxwC,WAAWiN,SAAS,EAAG,KADzC,SAD3B,cAAA5D,EAAArZ,OAAA,SAAAqZ,EAAAjZ,MAAA,wBAAAiZ,EAAA7Y,SAAA4Y,6BAMP,SAASinC,GAAoBF,EAAsBC,EAAmBze,GAClE,iBAAAlkD,OAAkB0iE,GAAlB1iE,OAAiC2iE,GAAjC3iE,OAAmD,MAANkkD,EAAa,GAAKA,EAA/D,iBFHQqY,2GAUAC,4FGPL,oDAAMwG,GAAiB,GAEvB,SAASC,GACZC,EACAC,GAEA,IAAM9B,EACF8B,EAAU9B,gBAAkB9E,GAAgB6G,OAASC,qBAAoBC,qBAEvE7B,EAA0B,GA6ChC,OA3CA0B,EAAU3B,YAAY+B,QAAQ,SAAC/B,EAAa30B,GACxC,IAAMC,EAAOo2B,EAAUM,SAAS32B,GAC3BC,GAEL00B,EAAYC,OAAO8B,QAAQ,SAAAt+C,GAAyB,IAAtB1mB,EAAsB0mB,EAAtB1mB,KAAMujE,EAAgB78C,EAAhB68C,UAC1B2B,EAAkB,GAClB/nE,EAAmB,GAFuBS,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAIhD,QAAAC,EAAAC,EAAuBslE,EAAvBrlE,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAkC,KAAvBunE,EAAuBnnE,EAAAnB,MAG9B,GAFAqoE,EAAMr9C,KAAKs9C,EAAStB,MAAQY,IAExBzkE,IAASi+D,GAAoBwF,SAAU,CACvC,IAAMxiD,EAAQstB,EAAKR,iBAAiB0B,mBAAqB,MAAQ,MAC3D21B,GAAO,IAAItyB,eAAaoB,aAC1B,IAAIH,SAAMoxB,EAAStoE,MAAMP,EAAG6oE,EAAStoE,MAAMN,EAAG4oE,EAAStoE,MAAMG,EAAGikB,IAGpE9jB,EAAO0qB,KAAKu9C,EAAK9oE,EAAG8oE,EAAK7oE,EAAG6oE,EAAKpoE,EAAGooE,EAAKlpC,QAEzC/+B,EAAO0qB,KAAKs9C,EAAStoE,MAAMP,EAAG6oE,EAAStoE,MAAMN,EAAG4oE,EAAStoE,MAAMG,IAfvB,MAAAuB,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GAmBhD,GAAIkC,IAASi+D,GAAoBwF,SAC7BP,EAAOr7C,KACH,IAAIw9C,2BAAJ,UAAA5jE,OACc6sC,EADd,gBAEI42B,EACA/nE,EACA2lE,QAGL,CACH,IAAMlkE,EACFoB,IAASi+D,GAAoBqF,SAA7B,UAAA7hE,OACgB6sC,EADhB,wBAAA7sC,OAEgB6sC,EAFhB,WAIJ40B,EAAOr7C,KAAK,IAAIy9C,uBAAoB1mE,EAAMsmE,EAAO/nE,EAAQ2lE,SAK9D,IAAIyC,iBACP,aACCX,EAAUhC,YAAc,GAAK6B,GAC9BvB,GACF1rC,WCjDN,OCrBIw3B,GDqBE5hC,GAASC,IAAO5uB,IAAI,2BACpB+mE,GAA2D,IAAI7nE,IAC/D8nE,GAAkD,IAAI9nE,IAyS/C+nE,GAAqB,OAjR7BllE,IAAWoe,OACXpe,IAAWoe,OACXpe,IAAWoe,OACXpe,IAAWoe,OAEXpe,IAAWoe,mEAzBH+mD,OAAwB,CAC7B,IAAIpjD,GAAY,QAAS,EAAG,GAAI,IAAI0Z,IAAI,CAAC,KACzC,IAAI1Z,GAAY,YAAa,EAAG,GAAI,IAAI0Z,KACxC,IAAI1Z,GAAY,SAAU,EAAG,EAAG,IAAI0Z,KACpC,IAAI1Z,GAAY,WAAY,EAAG,EAAG,IAAI0Z,KACtC,IAAI1Z,GAAY,QAAS,EAAG,GAAI,IAAI0Z,IAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACpE,IAAI1Z,GAAY,SAAU,EAAG,GAAI,IAAI0Z,IAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACrE,IAAI1Z,GAAY,SAAU,EAAG,EAAG,IAAI0Z,KACpC,IAAI1Z,GAAY,WAAY,EAAG,EAAG,IAAI0Z,KACtC,IAAI1Z,GAAY,QAAS,EAAG,GAAI,IAAI0Z,IAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACpE,IAAI1Z,GAAY,SAAU,EAAG,GAAI,IAAI0Z,IAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACrE,IAAI1Z,GAAY,SAAU,EAAG,GAAI,IAAI0Z,IAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACrE,IAAI1Z,GAAY,YAAa,EAAG,GAAI,IAAI0Z,IAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,WAEnE2pC,WAAgC,IAAInnD,MAAM,KAC9CsS,UAAKhzB,GACL4D,IAAI,SAACs5C,EAAGrvB,GAAJ,OAAU,IAAIjJ,GAAgBiJ,EAApB,aAAAnqB,OAAoCmqB,EAAI,WAElDi6C,MAAQ,IAAIC,qaAkBbC,cAAe,iDAGvBC,yBAA2BhmD,YAAO,2BAA4B,SAAC8B,GACvDzB,EAAK4lD,YACL5lD,EAAK4lD,UAAUC,MAAMC,UAAYrkD,EAAO2iD,GACxCpkD,EAAK+lD,qBAAuBtkD,UAIpCukD,oBAAsBrmD,YAAO,sBAAuB,SAAC6jD,GACjD,GAAIxjD,EAAK4lD,UAAW,CAChB,IAAMrD,EAAcviD,EAAKimD,sBACrBzC,EAAQjB,IAAaiB,EAAQ,GAC7BA,EAAQ,IAAGA,EAAQjB,GACvBviD,EAAK4lD,UAAUjmD,OAAO2T,MAAQkwC,EAAQ,GAAKY,GAC3CpkD,EAAKkmD,gBAAkB1C,UAI/B2C,mDAAa,SAAA7iD,EAAO4oB,GAAP,IAAAzG,EAAA,OAAAtiB,GAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAzlB,MAAA,cAAAylB,EAAAzlB,KAAA,EACYiiB,EAAKomD,wBAAwBl6B,GADzC,OACHzG,EADGjiB,EAAAO,KAET/D,EAAKqmD,UAAU5gC,GAAQ,EAAMyG,GAE7BlsB,EAAKsmD,mBAAqB,GAJjB,wBAAA9iD,EAAAW,SAAAb,iEAObijD,uDAAiB,SAAAxpC,EAAO6oC,GAAP,IAAArB,EAAA,OAAAphD,GAAAC,EAAAG,KAAA,SAAAyZ,GAAA,cAAAA,EAAAvZ,KAAAuZ,EAAAj/B,MAAA,cAAAi/B,EAAAj/B,KAAA,EACWiiB,EAAKwmD,cAAcZ,GAD9B,OACPrB,EADOvnC,EAAAjZ,KAGT/D,EAAKymD,eACLzmD,EAAK0mD,cAAcrC,GAAsBrkD,EAAKymD,cAAelC,GAAYqB,GAJhE,wBAAA5oC,EAAA7Y,SAAA4Y,iEASjBkuB,kDAAY,SAAAhuB,EAAO+mB,GAAP,IAAAjiB,EAAA2C,EAAAwH,EAAAmuB,EAAAsM,EAAA1Q,EAAA,OAAA9yC,GAAAC,EAAAG,KAAA,SAAAqa,GAAA,cAAAA,EAAAna,KAAAma,EAAA7/B,MAAA,cAAA6/B,EAAAna,KAAA,EAAAma,EAAA7/B,KAAA,EAEiB6rD,GAAU5F,GAF3B,OAEEjiB,EAFFnE,EAAA7Z,KAGE2gB,EAAS,IAAI5C,GAAkBC,EAAQV,GAAWqB,QAEpDshB,EAAKzlD,KAAKwnD,SAAS,QACb7Z,EAAQoC,GAAS5J,GAAQ,GAC/B1kB,EAAKqmD,UAAUn6B,GAAO,IACf8X,EAAKzlD,KAAKwnD,SAAS,QACpB7Z,EAAQsC,GAAS9J,GAAQ,GAC/B1kB,EAAKqmD,UAAUn6B,GAAO,IACf8X,EAAKzlD,KAAKwnD,SAAS,QACtB/lC,EAAKymD,gBACCE,EAAM/E,GAAUl9B,EAAQ1kB,EAAKsmD,oBACnCtmD,EAAK0mD,cAAcrC,GAAsBrkD,EAAKymD,cAAeE,KAE1D3iB,EAAKzlD,KAAKwnD,SAAS,QACtB/lC,EAAKymD,gBACCxQ,EAAMR,GAAU/wB,GACtB1kB,EAAK4mD,aAAa5Q,GAAgBC,KAGtClpC,GAAOe,MAAP,uCAAA1sB,OAAoD4iD,EAAKzlD,KAAzD,OAtBAq/B,EAAA7/B,KAAA,gBAAA6/B,EAAAna,KAAA,EAAAma,EAAA1Z,GAAA0Z,EAAA,SAyBJ7Q,GAAOe,MAAM,sBAAb8P,EAAA1Z,IAzBI,yBAAA0Z,EAAAzZ,SAAA8Y,EAAA,4EA6BZ4pC,gBAAkBlnD,YAAO,kBAAmB,WACpCK,EAAK4lD,YACL5lD,EAAK4lD,UAAUjmD,OAAOmnD,QAAS,EAC/B9mD,EAAK+mD,mBAAoB,EACzB/mD,EAAKwlD,MAAMrhD,eAInB6iD,yBAA2BrnD,YAAO,2BAA4B,WACtDK,EAAK4lD,YACL5lD,EAAK4lD,UAAUjmD,OAAOmnD,QAAU9mD,EAAK4lD,UAAUjmD,OAAOmnD,OACtD9mD,EAAK+mD,mBAAqB/mD,EAAK4lD,UAAUjmD,OAAOmnD,OAE5C9mD,EAAK+mD,kBACL/mD,EAAKwlD,MAAMyB,QAEXjnD,EAAKwlD,MAAMrhD,eAKvB+iD,uBAAyBvnD,YAAO,yBAA0B,WACtD,GAAIK,EAAK4lD,WAAa5lD,EAAK+mD,kBAAmB,CAC1C,IAAMzzC,EAAOtT,EAAK4lD,UAAUjmD,OAAO2T,KACnCtT,EAAKkmD,gBAAkBlpD,KAAKmX,MAAMb,EAAO8wC,IAAkB,UAInEsC,cAAgB/mD,YAAO,gBAAiB,SAACwnD,EAAqBvB,GAG1D,IAAIC,EAFC7lD,EAAKonD,eAAmBpnD,EAAKonD,yBAAyBjX,iBAIvDnwC,EAAK4lD,WACL5lD,EAAK4lD,UAAUC,MAAMwB,gBACrBxB,EAAQ7lD,EAAK4lD,UAAUC,OAEvBA,EAAQ,IAAIyB,kBAAetnD,EAAKonD,eAGpCpnD,EAAK4lD,UAAY,CACb2B,iBAAkB3B,EAClBC,QACAsB,OACAxnD,OAAQkmD,EAAM2B,WAAWL,IAG7BnnD,EAAKwlD,MAAMyB,QACXjnD,EAAK4lD,UAAUjmD,OAAO8nD,OACtBznD,EAAK+mD,mBAAoB,EACzB/mD,EAAKimD,sBAAwBjpD,KAAKmX,MAAMiwC,GAAiB+C,EAAKO,UAAY,UAGtErB,UAAY1mD,YAChB,YACA,SAACusB,EAA0By7B,EAAmBC,GACtC5nD,EAAKonD,eAAiBpnD,EAAK4lD,YAC3B5lD,EAAK4lD,UAAUC,MAAMwB,gBACrBrnD,EAAK4lD,UAAUC,MAAMgC,YAAY7nD,EAAKonD,eACtCpnD,EAAK4lD,eAAYloE,GAGrBsiB,EAAK8nD,qBAAuBF,EAC5B5nD,EAAKymD,cAAgBv6B,EACrBlsB,EAAKsmD,mBAAqBp6B,EAAM21B,aAChC7hD,EAAK0lD,aAAeiC,EAEpB3nD,EAAK+nD,mBAsFLnB,aAAejnD,YAAO,eAAgB,SAACixC,GAC3C5wC,EAAK+nD,UAAUnX,UAGXmX,UAAY,SAACnX,GACjB,GAAI5wC,EAAKymD,cAAe,CACpB,IAAI3gC,EAEEwQ,EACFsa,GACAA,EAAStvD,IACL,SAAAwvD,GAAG,OACC,IAAIna,uBAAoB,CACpB6Y,SAAUxvC,EAAK0lD,aACfpkE,IAAKwvD,EACLla,KAAMC,cACNka,UAAW,OAcrBiX,GATFliC,EADA9lB,EAAK0lD,aZjRd,SACH/sB,EACA+W,GAGA,OAAOC,GAAOhX,EAAU+W,EADbrrC,UAAApnB,OAAA,QAAAS,IAAA2mB,UAAA,GAAAA,UAAA,GADkBkrC,GAEuBY,gBY6QjC8X,CACHl1B,GAAgC/yB,EAAKymD,eACrCnwB,GAGGmZ,GAAY1c,GAAgC/yB,EAAKymD,eAAgBnwB,IAI5DqC,SAASuiB,YACnB3qC,EAASy3C,EAAGr8C,IAAIzvB,EAAI8rE,EAAGt8C,IAAIxvB,EACjC4pC,EAAKoiC,YAAY33C,EAAS,EAAIy3C,EAAGt8C,IAAIxvB,GAErC8jB,EAAKonD,cAAgBthC,4DAnHzBL,EACA0iC,EACAl6B,GAEA,IAAMC,EAAOzI,EAAOm/B,SAAS32B,GAEzBC,IACAA,EAAKR,iBAAiByB,QAAS,EAC/BjB,EAAKR,iBAAiBU,mBAAoB,EAC1CF,EAAKxhB,SAASlF,KAAK2gD,8FAIWj8B,+EAC9Bk8B,EAAejD,GAAgB/mE,IAAI8tC,EAAM3tC,gDAGlC6pE,iBAEPA,EAAe/rE,KAAKgsE,eAAen8B,GACnCi5B,GAAgBlnE,IAAIiuC,EAAM3tC,KAAM6pE,qBACzBA,uLAIcl8B,wGACD03B,GAAgB13B,EAAM3tC,KAAM,kBAA9C+pE,SACA/b,EAAOje,GAAS,IAAIxM,GAAkBwmC,EAAWjnC,GAAWqB,SAAS,yBAGjE,IAAIvhC,MAAJ,wCAAAC,OAAkD8qC,EAAM3tC,KAAxD,6BAGcqlE,GAAgB13B,EAAM3tC,KAAM,OAAQ,aAAtDgqE,UACAC,EAAOl6B,GAAS,IAAIxM,GAAkBymC,EAAWlnC,GAAWqB,SAAS,KAGvErmC,KAAKosE,YAAYlc,EAAMic,EAAM,MAG7Bt8B,EAAM9pB,kBAAoB,qCACFwhD,GAAgB13B,EAAM3tC,KAAM,OAAQ,cAAtDmqE,UACAC,EAAOr6B,GAAS,IAAIxM,GAAkB4mC,EAAWrnC,GAAWqB,SAAS,KAGvErmC,KAAKosE,YAAYlc,EAAMoc,EAAM,KAG7Bz8B,EAAM7pB,2BAA2B2Z,IAAI,qCACR4nC,GAAgB13B,EAAM3tC,KAAM,YAAa,WAAhEqqE,UACAC,EAAYv6B,GACd,IAAIxM,GAAkB8mC,EAAgBvnC,GAAWqB,SACnD,KAGErmC,KAAKosE,YAAYlc,EAAMsc,EAAW,qCAKvCtc,uLAGiBqZ,sFACpBrB,EAAYa,GAAgBhnE,IAAIwnE,EAAUtnE,8CAGnCimE,iBAEPA,EAAYN,GAA0B2B,EAAUtnE,IAAI46C,KAAK,SAAA0pB,GAAW,OAChEhB,GACI,IAAI9/B,GAAkB8gC,EAAavhC,GAAWqB,QAC9CjiB,EAAK6lD,sBAIblB,GAAgBnnE,IAAI2nE,EAAUtnE,GAAIimE,qBAC3BA,8cApO8B,gRAS5CpkE,8EAAwC,yDACxCA,8EAA0CikE,qDAC1CjkE,8EAAqC,0DACrCA,8EAA2C,kDAG3CA,8EAAoC,SE/D5B2oE,WADZ1+C,YACD2+C,GAAA,SAAAz+C,GAAA,SAAAw+C,IAAA,OAAA3sE,OAAAC,EAAA,EAAAD,CAAAE,KAAAysE,GAAA3sE,OAAA8jB,EAAA,EAAA9jB,CAAAE,KAAAF,OAAAgjB,EAAA,EAAAhjB,CAAA2sE,GAAA1kD,MAAA/nB,KAAAgoB,YAAA,OAAAloB,OAAAkkB,EAAA,EAAAlkB,CAAA2sE,EAAAx+C,GAAAnuB,OAAAG,EAAA,EAAAH,CAAA2sE,EAAA,EAAAvsE,IAAA,SAAAC,MAAA,WAEQ,OACIotB,EAAAxG,EAAAyG,cAAA,WAASG,UAAU,mCACfJ,EAAAxG,EAAAyG,cAAA,UACKw7C,GAAmBE,WAAWjkE,IAAI,SAAAskE,GAC/B,IAAMj7C,EACF06C,GAAmBO,WACnBP,GAAmBO,UAAU2B,kBAC7BlC,GAAmBO,UAAU2B,iBAAiBjpE,KAAOsnE,EAAUtnE,GAEnE,OACIsrB,EAAAxG,EAAAyG,cAAA,MACIttB,IAAKqpE,EAAUtnE,GACf0rB,UAAWW,EAAW,gBAAajtB,EACnC4zB,QAAS,kBAAM+zC,GAAmBkB,eAAeX,KAEhDA,EAAUrnE,cAjB3CuqE,EAAA,CAAiD18C,eAAjD28C,uBCDaC,WAAb,SAAA1+C,GAAA,SAAA0+C,IAAA,OAAA7sE,OAAAC,EAAA,EAAAD,CAAAE,KAAA2sE,GAAA7sE,OAAA8jB,EAAA,EAAA9jB,CAAAE,KAAAF,OAAAgjB,EAAA,EAAAhjB,CAAA6sE,GAAA5kD,MAAA/nB,KAAAgoB,YAAA,OAAAloB,OAAAkkB,EAAA,EAAAlkB,CAAA6sE,EAAA1+C,GAAAnuB,OAAAG,EAAA,EAAAH,CAAA6sE,EAAA,EAAAzsE,IAAA,SAAAC,MAAA,WAEQ,OACIotB,EAAAxG,EAAAyG,cAAA,WAASG,UAAU,+BACfJ,EAAAxG,EAAAyG,cAAAo/C,GAAA,GACIC,WAAW,aACXC,WAAY9D,GAAmBC,OAC/B75C,KAAK,QACL29C,WAAY,SAAAl9B,GACR,IAAMvhB,EAAW06C,GAAmByC,uBAAyB57B,EAE7D,OACItiB,EAAAxG,EAAAyG,cAAAo/C,GAAA,EAAMj+D,KAAN,CAAWsmB,QAAS,kBAAM+zC,GAAmBc,WAAWj6B,KACpDtiB,EAAAxG,EAAAyG,cAAAo/C,GAAA,EAAMj+D,KAAKq+D,KAAX,CACIz5C,MACIhG,EAAAxG,EAAAyG,cAAA,QACIG,UACI,qCACCW,EAAW,YAAc,KAG7BuhB,EAAM3tC,iBArBnDyqE,EAAA,CAA6C58C,qBFOtC,mBGMHuiC,GHNS2a,GAAb,SAAAxL,GAII,SAAAwL,IAAc,IAAAtpD,EAAA,OAAA7jB,OAAAC,EAAA,EAAAD,CAAAE,KAAAitE,IACVtpD,EAAA7jB,OAAA8jB,EAAA,EAAA9jB,CAAAE,KAAAF,OAAAgjB,EAAA,EAAAhjB,CAAAmtE,GAAAppD,KAAA7jB,KAAM,IAAI0hE,qBAAkB,GAAI,EAAG,EAAG,QAJlC7xB,WAGM,EAAAlsB,EAFNupD,qBAEM,EAGV37C,YAAQ,WACJ5N,EAAKqmD,UAAUhB,GAAmB+B,eAElC,IAAMoC,EAAgBnE,GAAmBmE,cAErCxpD,EAAKupD,kBACLvpD,EAAKupD,gBAAgB1qC,QAAU2qC,EAC/BxpD,EAAKmyC,mBAGLkT,GAAmBO,WACnB5lD,EAAKmyC,kBAGJkT,GAAmB0B,oBAEpB1B,GAAmBa,gBACnBlmD,EAAKmyC,qBApBHnyC,EAJlB,OAAA7jB,OAAAkkB,EAAA,EAAAlkB,CAAAmtE,EAAAxL,GAAA3hE,OAAAG,EAAA,EAAAH,CAAAmtE,EAAA,EAAA/sE,IAAA,WAAAC,MAAA,SA6BagzB,EAAee,GACpBl0B,KAAKo3D,OAAO+K,OAAShvC,EAAQe,EAC7Bl0B,KAAKo3D,OAAOgL,yBACZtiE,OAAAuiE,GAAA,EAAAviE,QAAAgjB,EAAA,EAAAhjB,CAAAmtE,EAAAppE,WAAA,WAAA7D,MAAA6jB,KAAA7jB,KAAemzB,EAAOe,KAhC9B,CAAAh0B,IAAA,SAAAC,MAAA,WAoCY6oE,GAAmBO,YACnBP,GAAmBO,UAAUC,MAAM4D,OAAOpE,GAAmBG,MAAMkE,YACnErE,GAAmB6B,0BAGvB7qE,KAAK4/D,aAAa0N,WAAWnM,KAAKnhE,KAAKo3D,OAAOkW,YAC9CxtE,OAAAuiE,GAAA,EAAAviE,QAAAgjB,EAAA,EAAAhjB,CAAAmtE,EAAAppE,WAAA,SAAA7D,MAAA6jB,KAAA7jB,MAEIgpE,GAAmBO,YAAcP,GAAmBO,UAAUjmD,OAAOmnD,QACrEzqE,KAAK81D,oBA7CjB,CAAA51D,IAAA,YAAAC,MAAA,SAiDsB0vC,GACV7vC,KAAK6vC,QAAUA,IACX7vC,KAAK6vC,QACL7vC,KAAK0/D,MAAMwC,OAAOliE,KAAK6vC,OACvB7vC,KAAK0/D,MAAMwC,OAAOliE,KAAKktE,iBACvBltE,KAAKktE,qBAAkB7rE,GAGvBwuC,IACA7vC,KAAK0/D,MAAM3qB,IAAIlF,GACf7vC,KAAKktE,gBAAkB,IAAIK,kBAAe19B,GAC1C7vC,KAAKktE,gBAAgB1qC,QAAUwmC,GAAmBmE,cACjDntE,KAAKktE,gBAAgB7Z,SAAiBma,UAAY,EACnDxtE,KAAK0/D,MAAM3qB,IAAI/0C,KAAKktE,iBACpBltE,KAAKm+D,aAAa,IAAIzpB,WAAQ,EAAG,GAAI,IAAK,IAAIA,WAAQ,EAAG,EAAG,KAGhE10C,KAAK6vC,MAAQA,EACb7vC,KAAK81D,uBAnEjBmX,EAAA,CAAmCzN,IICtBiO,GADZ1/C,YACD2/C,GAAA,SAAAz/C,GAAA,SAAAw/C,IAAA,OAAA3tE,OAAAC,EAAA,EAAAD,CAAAE,KAAAytE,GAAA3tE,OAAA8jB,EAAA,EAAA9jB,CAAAE,KAAAF,OAAAgjB,EAAA,EAAAhjB,CAAA2tE,GAAA1lD,MAAA/nB,KAAAgoB,YAAA,OAAAloB,OAAAkkB,EAAA,EAAAlkB,CAAA2tE,EAAAx/C,GAAAnuB,OAAAG,EAAA,EAAAH,CAAA2tE,EAAA,EAAAvtE,IAAA,oBAAAC,MAAA,WAEa6oE,GAAmBoB,eACpBpB,GAAmBc,WAAWd,GAAmBC,OAAO,MAHpE,CAAA/oE,IAAA,SAAAC,MAAA,WAQQ,OACIotB,EAAAxG,EAAAyG,cAAA,OAAKG,UAAU,4BACXJ,EAAAxG,EAAAyG,cAACmgD,GAAD,MACApgD,EAAAxG,EAAAyG,cAAA,OAAKG,UAAU,iCACXJ,EAAAxG,EAAAyG,cAACogD,GAAD,MACArgD,EAAAxG,EAAAyG,cAACqgD,GAAD,MACAtgD,EAAAxG,EAAAyG,cAAC61C,GAAD,CACI/Q,UJpBfA,KAAUA,GAAW,IAAI2a,IACvB3a,IIoBaS,gBAAiBiW,GAAmBwB,wBAhB5DiD,EAAA,CAA0C19C,eAA1C29C,GAyBM9J,GADL71C,0NAEGkC,MAAQ,CACJ0yC,cAAUthE,KA4DNutD,UAAY,SAACkV,GACbA,EAAKnc,KAAKoc,gBACVpgD,EAAK8e,SAAS,CAAEkgC,SAAUmB,EAAKnc,KAAKzlD,OACpC8mE,GAAmBpa,UAAUkV,EAAKnc,KAAKoc,yFA3D3C,OACIx2C,EAAAxG,EAAAyG,cAAA,OAAKG,UAAU,oCACXJ,EAAAxG,EAAAyG,cAAAy2C,GAAA,GACIC,OAAO,uBACPC,gBAAgB,EAChBn1C,SAAUhvB,KAAK4uD,UAEfwV,cAAe,kBAAM,IAErB72C,EAAAxG,EAAAyG,cAAA4U,GAAA,GAAQC,KAAK,QAAQriC,KAAKiwB,MAAM0yC,UAAY,iBAE/CqG,GAAmBO,WAChBh8C,EAAAxG,EAAAyG,cAAAD,EAAAxG,EAAA+9C,SAAA,KACIv3C,EAAAxG,EAAAyG,cAAA4U,GAAA,GACIC,KAAM2mC,GAAmB0B,kBAAoB,QAAU,cACvDz1C,QAAS+zC,GAAmB2B,0BAE3B3B,GAAmB0B,kBACd,kBACA,kBAEVn9C,EAAAxG,EAAAyG,cAAA,OAAKG,UAAU,SACXJ,EAAAxG,EAAAyG,cAAA,2BACAD,EAAAxG,EAAAyG,cAAA2B,GAAA,GACIhvB,MAAO6oE,GAAmBU,qBAC1B16C,SAAU,SAAA7uB,GAAK,OACX6oE,GAAmBM,yBAAyBnpE,GAAS,IAEzDkvB,IAAK,EACLE,KAAM,KAGdhC,EAAAxG,EAAAyG,cAAA,OAAKG,UAAU,SACXJ,EAAAxG,EAAAyG,cAAA,sBACAD,EAAAxG,EAAAyG,cAAA2B,GAAA,GACIhvB,MAAO6oE,GAAmBa,gBAC1B76C,SAAU,SAAA7uB,GAAK,OACX6oE,GAAmBW,oBAAoBxpE,GAAS,IAEpDovB,KAAM,IAEVhC,EAAAxG,EAAAyG,cAAA,iBAASw7C,GAAmBY,yBAIxCr8C,EAAAxG,EAAAyG,cAAA,OAAKG,UAAU,SACXJ,EAAAxG,EAAAyG,cAAA,8BACAD,EAAAxG,EAAAyG,cAAAsgD,GAAA,GACIC,QAAS/E,GAAmBmE,cAC5Bn+C,SAAU,SAAA7uB,GAAK,OAAK6oE,GAAmBmE,cAAgBhtE,cAvDzD4vB,kBC/BhBW,GAASC,IAAO5uB,IAAI,6BAgBbisE,GAAuB,OAb/BlqE,IAAWoe,gGAGZ0sC,kDAAY,SAAA3nC,EAAO0gC,GAAP,IAAAjiB,EAAA,OAAA5e,GAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAzlB,MAAA,cAAAylB,EAAAC,KAAA,EAAAD,EAAAzlB,KAAA,EAEiB6rD,GAAU5F,GAF3B,OAEEjiB,EAFFve,EAAAO,KAGJ/D,EAAKsqD,YAAc7U,GAAU,IAAI3zB,GAAkBC,EAAQV,GAAWqB,SAHlElf,EAAAzlB,KAAA,gBAAAylB,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAKJuJ,GAAOe,MAAM,sBAAbtK,EAAAU,IALI,yBAAAV,EAAAW,SAAAb,EAAA,yLFGVyJ,GAASC,IAAO5uB,IAAI,6BASnB,UAAMmsE,GAAb,SAAAzM,GAGI,SAAAyM,IAAc,IAAAvqD,EAAA,OAAA7jB,OAAAC,EAAA,EAAAD,CAAAE,KAAAkuE,IACVvqD,EAAA7jB,OAAA8jB,EAAA,EAAA9jB,CAAAE,KAAAF,OAAAgjB,EAAA,EAAAhjB,CAAAouE,GAAArqD,KAAA7jB,KAAM,IAAImuE,uBAAoB,IAAK,IAAK,KAAM,IAAK,EAAG,OAHlDC,YAAsB,GAEhBzqD,EA4BN0qD,gBAAkB,SAACzU,GACvB,IAAI0U,EAAc,IAAM1U,EAAIrF,SAAS3zD,OAAS,GAC1C2tE,EAAe,EAFiBrtE,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAIpC,QAAAC,EAAAC,EAAkBq4D,EAAIrF,SAAtB/yD,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAgC,KAArBuzD,EAAqBnzD,EAAAnB,MAC5BmuE,GAAe7Z,EAAIthC,MACnBo7C,EAAe5tD,KAAK2O,IAAIi/C,EAAc9Z,EAAIvgC,SANV,MAAAryB,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GASpC,IAAIxB,GAAK+gB,KAAKkX,MAAMy2C,EAAc,GAC5BzuE,GAAK8gB,KAAKkX,MAAM02C,EAAe,GAVD78C,GAAA,EAAAC,GAAA,EAAAC,OAAAvwB,EAAA,IAYpC,QAAAwwB,EAAAC,EAAkB8nC,EAAIrF,SAAtB/yD,OAAAC,cAAAiwB,GAAAG,EAAAC,EAAApwB,QAAAC,MAAA+vB,GAAA,EAAgC,KAArB+iC,EAAqB5iC,EAAA1xB,MACxBquE,OAA4B,EAEhC,IACIA,EAAU3U,GAAuBpF,GACnC,MAAOj0D,GACLkwB,GAAOyI,KAAK,gCAAiC34B,GAGjD,IAAMiuE,EAAY,IAAIvzB,QAClBv3B,EAAK+qD,YACD9uE,EACAC,EAAI8gB,KAAKkX,OAAO02C,EAAe9Z,EAAIvgC,QAAU,GAC7CugC,EAAIthC,MACJshC,EAAIvgC,QAERs6C,EACM,IAAIt0B,qBAAkB,CAClBj1C,IAAKupE,EACLp0B,aAAa,IAEjB,IAAIF,qBAAkB,CAClBC,MAAO,YAIrBx2B,EAAKyqD,YAAYjjD,KAAKsjD,GACtB9qD,EAAK+7C,MAAM3qB,IAAI05B,GAEf7uE,GAAK,GAAK60D,EAAIthC,OAzCkB,MAAAtxB,GAAA8vB,GAAA,EAAAC,EAAA/vB,EAAA,YAAA6vB,GAAA,MAAAI,EAAAhwB,QAAAgwB,EAAAhwB,SAAA,WAAA6vB,EAAA,MAAAC,KAzBpCjO,EAAKiyC,SAAS+Y,cAAe,EAE7Bp9C,YAAQ,WAAM,IAAAq9C,GACVA,EAAAjrD,EAAK+7C,OAAMwC,OAAXn6C,MAAA6mD,EAAA9uE,OAAA0gC,GAAA,EAAA1gC,CAAqB6jB,EAAKyqD,cAE1B,IAAMxU,EAAMoU,GAAqBC,YAE7BrU,GACAj2C,EAAK0qD,gBAAgBzU,GAGzBj2C,EAAKw6C,aAAa,IAAIzpB,WAAQ,EAAG,EAAG,GAAI,IAAIA,YAC5C/wB,EAAKmyC,oBAfCnyC,EAHlB,OAAA7jB,OAAAkkB,EAAA,EAAAlkB,CAAAouE,EAAAzM,GAAA3hE,OAAAG,EAAA,EAAAH,CAAAouE,EAAA,EAAAhuE,IAAA,WAAAC,MAAA,SAsBagzB,EAAee,GACpBl0B,KAAKo3D,OAAOyX,MAAQluD,KAAKkX,MAAM1E,EAAQ,GACvCnzB,KAAKo3D,OAAO0X,MAAQnuD,KAAKsnC,KAAK90B,EAAQ,GACtCnzB,KAAKo3D,OAAO2X,IAAMpuD,KAAKkX,MAAM3D,EAAS,GACtCl0B,KAAKo3D,OAAO4X,QAAUruD,KAAKsnC,KAAK/zB,EAAS,GACzCl0B,KAAKo3D,OAAOgL,yBACZtiE,OAAAuiE,GAAA,EAAAviE,QAAAgjB,EAAA,EAAAhjB,CAAAouE,EAAArqE,WAAA,WAAA7D,MAAA6jB,KAAA7jB,KAAemzB,EAAOe,KA5B9B,CAAAh0B,IAAA,cAAAC,MAAA,SA4EwBP,EAAWC,EAAWszB,EAAee,GACrD,IAAM+6C,EAAO,IAAIC,iBAAc/7C,EAAOe,EAAQ,EAAG,GAQjD,OAPA+6C,EAAKE,cAAgB,CACjB,CACI,CAAC,IAAIl5B,WAAQ,EAAG,GAAI,IAAIA,WAAQ,EAAG,GAAI,IAAIA,WAAQ,EAAG,IACtD,CAAC,IAAIA,WAAQ,EAAG,GAAI,IAAIA,WAAQ,EAAG,GAAI,IAAIA,WAAQ,EAAG,MAG9Dg5B,EAAKtU,UAAU/6D,EAAIuzB,EAAQ,EAAGtzB,EAAIq0B,EAAS,GAAI,GACxC+6C,MArFff,EAAA,CAAqC1O,IGhBxB4P,WAAb,SAAAnhD,GAAA,SAAAmhD,IAAA,OAAAtvE,OAAAC,EAAA,EAAAD,CAAAE,KAAAovE,GAAAtvE,OAAA8jB,EAAA,EAAA9jB,CAAAE,KAAAF,OAAAgjB,EAAA,EAAAhjB,CAAAsvE,GAAArnD,MAAA/nB,KAAAgoB,YAAA,OAAAloB,OAAAkkB,EAAA,EAAAlkB,CAAAsvE,EAAAnhD,GAAAnuB,OAAAG,EAAA,EAAAH,CAAAsvE,EAAA,EAAAlvE,IAAA,SAAAC,MAAA,WAEQ,OACIotB,EAAAxG,EAAAyG,cAAA,WAASG,UAAU,8BACfJ,EAAAxG,EAAAyG,cAAC6hD,GAAD,MACA9hD,EAAAxG,EAAAyG,cAAC61C,GAAD,CACI/Q,UHMXA,KAAUA,GAAW,IAAI4b,IACvB5b,IGNS3kC,UAAW,6CAP/ByhD,EAAA,CAA4Cr/C,cAetC6zC,GADL71C,0NAEGkC,MAAQ,CACJ0yC,cAAUthE,KAmBNutD,UAAY,SAACkV,GACbA,EAAKnc,KAAKoc,gBACVpgD,EAAK8e,SAAS,CAAEkgC,SAAUmB,EAAKnc,KAAKzlD,OACpC8rE,GAAqBpf,UAAUkV,EAAKnc,KAAKoc,yFAlB7C,OACIx2C,EAAAxG,EAAAyG,cAAA,OAAKG,UAAU,sCACXJ,EAAAxG,EAAAyG,cAAAy2C,GAAA,GACIC,OAAO,OACPC,gBAAgB,EAChBn1C,SAAUhvB,KAAK4uD,UAEfwV,cAAe,kBAAM,IAErB72C,EAAAxG,EAAAyG,cAAA4U,GAAA,GAAQC,KAAK,QAAQriC,KAAKiwB,MAAM0yC,UAAY,yBAf1C5yC,kBCXhBu/C,WAASh/C,GCPf,SAAArC,GAAA,SAAAshD,IAAA,OAAAzvE,OAAAC,EAAA,EAAAD,CAAAE,KAAAuvE,GAAAzvE,OAAA8jB,EAAA,EAAA9jB,CAAAE,KAAAF,OAAAgjB,EAAA,EAAAhjB,CAAAyvE,GAAAxnD,MAAA/nB,KAAAgoB,YAAA,OAAAloB,OAAAkkB,EAAA,EAAAlkB,CAAAyvE,EAAAthD,GAAAnuB,OAAAG,EAAA,EAAAH,CAAAyvE,EAAA,EAAArvE,IAAA,SAAAC,MAAA,WAEQ,OACIotB,EAAAxG,EAAAyG,cAAA,WAASG,UAAU,qBACfJ,EAAAxG,EAAAyG,cAAAuX,GAAA,GAAMzhC,KAAK,QACPiqB,EAAAxG,EAAAyG,cAAAuX,GAAA,EAAMD,QAAN,CAAc0qC,IAAI,SAAStvE,IAAI,UAC3BqtB,EAAAxG,EAAAyG,cAACiiD,GAAD,OAEJliD,EAAAxG,EAAAyG,cAAAuX,GAAA,EAAMD,QAAN,CAAc0qC,IAAI,WAAWtvE,IAAI,YAC7BqtB,EAAAxG,EAAAyG,cAACkiD,GAAD,aATxBH,EAAA,CAAqCx/C,eDQ/B4/C,GAAcr/C,GAAoBgyC,IAClCsN,GAAgBt/C,GxDPf,WACH,OACI/C,EAAAxG,EAAAyG,cAAA,WAASG,UAAU,6BACfJ,EAAAxG,EAAAyG,cAAAuX,GAAA,GAAMzhC,KAAK,QACPiqB,EAAAxG,EAAAyG,cAACsX,GAAD,CAAS0qC,IAAI,WAAWtvE,IAAI,YACxBqtB,EAAAxG,EAAAyG,cAACqiD,GAAD,OAEJtiD,EAAAxG,EAAAyG,cAACsX,GAAD,CAAS0qC,IAAI,UAAUtvE,IAAI,WACvBqtB,EAAAxG,EAAAyG,cAACsiD,GAAD,WwDAdC,GAAUz/C,GAAoBxC,IAGvBkiD,GADZjiD,YACDkiD,GAAA,SAAAhiD,GAAA,SAAA+hD,IAAA,IAAA9hD,EAAAvK,EAAA7jB,OAAAC,EAAA,EAAAD,CAAAE,KAAAgwE,GAAA,QAAA7hD,EAAAnG,UAAApnB,OAAAwtB,EAAA,IAAArM,MAAAoM,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAArG,UAAAqG,GAAA,OAAA1K,EAAA7jB,OAAA8jB,EAAA,EAAA9jB,CAAAE,MAAAkuB,EAAApuB,OAAAgjB,EAAA,EAAAhjB,CAAAkwE,IAAAnsD,KAAAkE,MAAAmG,EAAA,CAAAluB,MAAA+E,OAAAqpB,MA4DY8hD,aAAe,SAAC1vE,GACpB8nB,GAAkBM,aAAepoB,EAAEN,KA7D3CyjB,EAgEYo/C,MAAQ,SAACviE,GACb8nB,GAAkBK,sBAAsBnoB,IAjEhDmjB,EAAA,OAAA7jB,OAAAkkB,EAAA,EAAAlkB,CAAAkwE,EAAA/hD,GAAAnuB,OAAAG,EAAA,EAAAH,CAAAkwE,EAAA,EAAA9vE,IAAA,oBAAAC,MAAA,WAEQ2oB,OAAO8kC,iBAAiB,QAAS5tD,KAAK+iE,SAF9C,CAAA7iE,IAAA,uBAAAC,MAAA,WAMQ2oB,OAAOgqC,oBAAoB,QAAS9yD,KAAK+iE,SANjD,CAAA7iE,IAAA,SAAAC,MAAA,WAUQ,IAAIgwE,EAEJ,OAAQ7nD,GAAkBM,cACtB,IAAK,SACDunD,EAAiB5iD,EAAAxG,EAAAyG,cAAC8hD,GAAD,MACjB,MACJ,IAAK,eACDa,EAAiB5iD,EAAAxG,EAAAyG,cAACmiD,GAAD,MACjB,MACJ,IAAK,iBACDQ,EAAiB5iD,EAAAxG,EAAAyG,cAACoiD,GAAD,MACjB,MACJ,IAAK,WACDO,EAAiB5iD,EAAAxG,EAAAyG,cAACuiD,GAAD,MAIzB,OACIxiD,EAAAxG,EAAAyG,cAAA,OAAKG,UAAU,wBACXJ,EAAAxG,EAAAyG,cAAA,OAAKG,UAAU,+BACXJ,EAAAxG,EAAAyG,cAAA,MAAIG,UAAU,gCAAd,oBACAJ,EAAAxG,EAAAyG,cAAA4iD,EAAA,GACIziD,UAAU,oCACVsH,QAASj1B,KAAKkwE,aACdG,aAAc,CAAC/nD,GAAkBM,cACjC0nD,KAAK,cAEL/iD,EAAAxG,EAAAyG,cAAA4iD,EAAA,EAAMzhE,KAAN,CAAWzO,IAAI,UAAf,SACUqtB,EAAAxG,EAAAyG,cAAA,OAAKG,UAAU,6BAAf,WAEVJ,EAAAxG,EAAAyG,cAAA4iD,EAAA,EAAMzhE,KAAN,CAAWzO,IAAI,gBAAf,eACgBqtB,EAAAxG,EAAAyG,cAAA,OAAKG,UAAU,6BAAf,WAEhBJ,EAAAxG,EAAAyG,cAAA4iD,EAAA,EAAMzhE,KAAN,CAAWzO,IAAI,kBAAf,mBAKJqtB,EAAAxG,EAAAyG,cAAA,OAAKG,UAAU,sCACXJ,EAAAxG,EAAAyG,cAAA,uBACAD,EAAAxG,EAAAyG,cAAA62C,EAAA,GAAQkM,aAAc1wD,GAAOyJ,QAASoK,MAAO,CAAEP,MAAO,MAClD5F,EAAAxG,EAAAyG,cAAA62C,EAAA,EAAQE,OAAR,CAAepkE,MAAO0f,GAAOyJ,SAAUzJ,GAAOyJ,YAI1DiE,EAAAxG,EAAAyG,cAAA,OAAKG,UAAU,6BAA6BwiD,QAvD5DH,EAAA,CAA0CjgD,eAA1CkgD,wBEVAt/C,IAAO6/C,YAAY,CACfC,aAAe9/C,IAAepG,8CAAA,qBAAsC,SAGxEmmD,IAAStQ,OAAO7yC,EAAAxG,EAAAyG,cAACmjD,GAAD,MAA0B/gB,SAASghB,eAAe","file":"static/js/main.1355dae7.chunk.js","sourcesContent":["export class Vec2 {\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    set(x: number, y: number): this {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n\r\n    add(v: Vec2): this {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        return this;\r\n    }\r\n\r\n    clone(): Vec2 {\r\n        return new Vec2(this.x, this.y);\r\n    }\r\n\r\n    equals(v: Vec2): boolean {\r\n        return this.x === v.x && this.y === v.y;\r\n    }\r\n}\r\n\r\nexport class Vec3 {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n\r\n    constructor(x: number, y: number, z: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n\r\n    set(x: number, y: number, z: number): this {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        return this;\r\n    }\r\n\r\n    add(v: Vec3): this {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        this.z += v.z;\r\n        return this;\r\n    }\r\n\r\n    clone(): Vec3 {\r\n        return new Vec3(this.x, this.y, this.z);\r\n    }\r\n\r\n    equals(v: Vec3): boolean {\r\n        return this.x === v.x && this.y === v.y && this.z === v.z;\r\n    }\r\n}\r\n","export function enum_values<E>(e: any): E[] {\r\n    const values = Object.values(e);\r\n    const number_values = values.filter(v => typeof v === \"number\");\r\n\r\n    if (number_values.length) {\r\n        return (number_values as any) as E[];\r\n    } else {\r\n        return (values as any) as E[];\r\n    }\r\n}\r\n\r\n/**\r\n * Map with a guaranteed value per enum key.\r\n */\r\nexport class EnumMap<K, V> {\r\n    private keys: K[];\r\n    private values = new Map<K, V>();\r\n\r\n    constructor(enum_: any, initial_value: (key: K) => V) {\r\n        this.keys = enum_values(enum_);\r\n\r\n        for (const key of this.keys) {\r\n            this.values.set(key, initial_value(key));\r\n        }\r\n    }\r\n\r\n    get(key: K): V {\r\n        return this.values.get(key)!;\r\n    }\r\n}\r\n","import { observable, computed } from \"mobx\";\r\n\r\n//\r\n// Item types.\r\n// Instances of these classes contain the data that is the same for every item of a specific type.\r\n// E.g. all spread needles are called \"Spread Needle\" and they all have the same ATA.\r\n//\r\n\r\nexport interface ItemType {\r\n    readonly id: number;\r\n    readonly name: string;\r\n}\r\n\r\nexport class WeaponItemType implements ItemType {\r\n    constructor(\r\n        readonly id: number,\r\n        readonly name: string,\r\n        readonly min_atp: number,\r\n        readonly max_atp: number,\r\n        readonly ata: number,\r\n        readonly max_grind: number,\r\n        readonly required_atp: number\r\n    ) {}\r\n}\r\n\r\nexport class ArmorItemType implements ItemType {\r\n    constructor(\r\n        readonly id: number,\r\n        readonly name: string,\r\n        readonly atp: number,\r\n        readonly ata: number,\r\n        readonly min_evp: number,\r\n        readonly max_evp: number,\r\n        readonly min_dfp: number,\r\n        readonly max_dfp: number,\r\n        readonly mst: number,\r\n        readonly hp: number,\r\n        readonly lck: number\r\n    ) {}\r\n}\r\n\r\nexport class ShieldItemType implements ItemType {\r\n    constructor(\r\n        readonly id: number,\r\n        readonly name: string,\r\n        readonly atp: number,\r\n        readonly ata: number,\r\n        readonly min_evp: number,\r\n        readonly max_evp: number,\r\n        readonly min_dfp: number,\r\n        readonly max_dfp: number,\r\n        readonly mst: number,\r\n        readonly hp: number,\r\n        readonly lck: number\r\n    ) {}\r\n}\r\n\r\nexport class UnitItemType implements ItemType {\r\n    constructor(readonly id: number, readonly name: string) {}\r\n}\r\n\r\nexport class ToolItemType implements ItemType {\r\n    constructor(readonly id: number, readonly name: string) {}\r\n}\r\n\r\n//\r\n// Item instances.\r\n// Instances of these classes contain the data that is unique to each item.\r\n// E.g. a specific spread needle dropped by an enemy or in an inventory.\r\n//\r\n\r\nexport interface Item {\r\n    readonly type: ItemType;\r\n}\r\n\r\nexport class WeaponItem implements Item {\r\n    /**\r\n     * Integer from 0 to 100.\r\n     */\r\n    @observable attribute: number = 0;\r\n    /**\r\n     * Integer from 0 to 100.\r\n     */\r\n    @observable hit: number = 0;\r\n    @observable grind: number = 0;\r\n\r\n    @computed get grind_atp(): number {\r\n        return 2 * this.grind;\r\n    }\r\n\r\n    constructor(readonly type: WeaponItemType) {}\r\n}\r\n\r\nexport class ArmorItem implements Item {\r\n    constructor(readonly type: ArmorItemType) {}\r\n}\r\n\r\nexport class ShieldItem implements Item {\r\n    constructor(readonly type: ShieldItemType) {}\r\n}\r\n\r\nexport class UnitItem implements Item {\r\n    constructor(readonly type: UnitItemType) {}\r\n}\r\n\r\nexport class ToolItem implements Item {\r\n    constructor(readonly type: ToolItemType) {}\r\n}\r\n","import { Episode, check_episode, EntityType } from \".\";\r\n\r\nexport class NpcType implements EntityType {\r\n    readonly id: number;\r\n    /**\r\n     * Matches the constant name. E.g. the code of NpcType.Zu is \"Zu\".\r\n     * Uniquely identifies an NPC.\r\n     */\r\n    readonly code: string;\r\n    /**\r\n     * Unique name. E.g. a Delsaber would have (Ep. II) appended to its name.\r\n     */\r\n    readonly name: string;\r\n    /**\r\n     * Name used in the game.\r\n     * Might conflict with other NPC names (e.g. Delsaber from ep. I and ep. II).\r\n     */\r\n    readonly simple_name: string;\r\n    readonly ultimate_name: string;\r\n    readonly episode?: number;\r\n    readonly enemy: boolean;\r\n    rare_type?: NpcType;\r\n\r\n    constructor(\r\n        id: number,\r\n        code: string,\r\n        name: string,\r\n        simple_name: string,\r\n        ultimate_name: string,\r\n        episode: number | undefined,\r\n        enemy: boolean\r\n    ) {\r\n        if (!Number.isInteger(id) || id < 0)\r\n            throw new Error(`Expected id to be an integer greater than or equal to 0, got ${id}.`);\r\n        if (!code) throw new Error(\"code is required.\");\r\n        if (!name) throw new Error(\"name is required.\");\r\n        if (!simple_name) throw new Error(\"simple_name is required.\");\r\n        if (!ultimate_name) throw new Error(\"ultimate_name is required.\");\r\n        if (episode != null && episode !== 1 && episode !== 2 && episode !== 4)\r\n            throw new Error(`episode should be undefined, 1, 2 or 4, got ${episode}.`);\r\n        if (typeof enemy !== \"boolean\") throw new Error(\"enemy is required.\");\r\n\r\n        this.id = id;\r\n        this.code = code;\r\n        this.simple_name = simple_name;\r\n        this.ultimate_name = ultimate_name;\r\n        this.name = name;\r\n        this.episode = episode;\r\n        this.enemy = enemy;\r\n\r\n        NpcType.by_code_map.set(code, this);\r\n\r\n        if (episode) {\r\n            const map = NpcType.by_ep_and_name[episode];\r\n\r\n            if (map) {\r\n                map.set(simple_name, this);\r\n                map.set(ultimate_name, this);\r\n            }\r\n        }\r\n    }\r\n\r\n    private static by_code_map = new Map<string, NpcType>();\r\n\r\n    private static by_ep_and_name = [\r\n        undefined,\r\n        new Map<string, NpcType>(),\r\n        new Map<string, NpcType>(),\r\n        undefined,\r\n        new Map<string, NpcType>(),\r\n    ];\r\n\r\n    static by_code(code: string): NpcType | undefined {\r\n        return this.by_code_map.get(code);\r\n    }\r\n\r\n    /**\r\n     * Uniquely identifies an NPC. Tries to match on simple_name and ultimate_name.\r\n     */\r\n    static by_name_and_episode(name: string, episode: Episode): NpcType | undefined {\r\n        check_episode(episode);\r\n        return this.by_ep_and_name[episode]!.get(name);\r\n    }\r\n\r\n    //\r\n    // Unknown NPCs\r\n    //\r\n\r\n    static Unknown: NpcType;\r\n\r\n    //\r\n    // Friendly NPCs\r\n    //\r\n\r\n    static FemaleFat: NpcType;\r\n    static FemaleMacho: NpcType;\r\n    static FemaleTall: NpcType;\r\n    static MaleDwarf: NpcType;\r\n    static MaleFat: NpcType;\r\n    static MaleMacho: NpcType;\r\n    static MaleOld: NpcType;\r\n    static BlueSoldier: NpcType;\r\n    static RedSoldier: NpcType;\r\n    static Principal: NpcType;\r\n    static Tekker: NpcType;\r\n    static GuildLady: NpcType;\r\n    static Scientist: NpcType;\r\n    static Nurse: NpcType;\r\n    static Irene: NpcType;\r\n    static ItemShop: NpcType;\r\n    static Nurse2: NpcType;\r\n\r\n    //\r\n    // Enemy NPCs\r\n    //\r\n\r\n    // Episode I Forest\r\n\r\n    static Hildebear: NpcType;\r\n    static Hildeblue: NpcType;\r\n    static RagRappy: NpcType;\r\n    static AlRappy: NpcType;\r\n    static Monest: NpcType;\r\n    static Mothmant: NpcType;\r\n    static SavageWolf: NpcType;\r\n    static BarbarousWolf: NpcType;\r\n    static Booma: NpcType;\r\n    static Gobooma: NpcType;\r\n    static Gigobooma: NpcType;\r\n    static Dragon: NpcType;\r\n\r\n    // Episode I Caves\r\n\r\n    static GrassAssassin: NpcType;\r\n    static PoisonLily: NpcType;\r\n    static NarLily: NpcType;\r\n    static NanoDragon: NpcType;\r\n    static EvilShark: NpcType;\r\n    static PalShark: NpcType;\r\n    static GuilShark: NpcType;\r\n    static PofuillySlime: NpcType;\r\n    static PouillySlime: NpcType;\r\n    static PanArms: NpcType;\r\n    static Migium: NpcType;\r\n    static Hidoom: NpcType;\r\n    static DeRolLe: NpcType;\r\n\r\n    // Episode I Mines\r\n\r\n    static Dubchic: NpcType;\r\n    static Gilchic: NpcType;\r\n    static Garanz: NpcType;\r\n    static SinowBeat: NpcType;\r\n    static SinowGold: NpcType;\r\n    static Canadine: NpcType;\r\n    static Canane: NpcType;\r\n    static Dubswitch: NpcType;\r\n    static VolOpt: NpcType;\r\n\r\n    // Episode I Ruins\r\n\r\n    static Delsaber: NpcType;\r\n    static ChaosSorcerer: NpcType;\r\n    static DarkGunner: NpcType;\r\n    static DeathGunner: NpcType;\r\n    static ChaosBringer: NpcType;\r\n    static DarkBelra: NpcType;\r\n    static Dimenian: NpcType;\r\n    static LaDimenian: NpcType;\r\n    static SoDimenian: NpcType;\r\n    static Bulclaw: NpcType;\r\n    static Bulk: NpcType;\r\n    static Claw: NpcType;\r\n    static DarkFalz: NpcType;\r\n\r\n    // Episode II VR Temple\r\n\r\n    static Hildebear2: NpcType;\r\n    static Hildeblue2: NpcType;\r\n    static RagRappy2: NpcType;\r\n    static LoveRappy: NpcType;\r\n    static StRappy: NpcType;\r\n    static HalloRappy: NpcType;\r\n    static EggRappy: NpcType;\r\n    static Monest2: NpcType;\r\n    static Mothmant2: NpcType;\r\n    static PoisonLily2: NpcType;\r\n    static NarLily2: NpcType;\r\n    static GrassAssassin2: NpcType;\r\n    static Dimenian2: NpcType;\r\n    static LaDimenian2: NpcType;\r\n    static SoDimenian2: NpcType;\r\n    static DarkBelra2: NpcType;\r\n    static BarbaRay: NpcType;\r\n\r\n    // Episode II VR Spaceship\r\n\r\n    static SavageWolf2: NpcType;\r\n    static BarbarousWolf2: NpcType;\r\n    static PanArms2: NpcType;\r\n    static Migium2: NpcType;\r\n    static Hidoom2: NpcType;\r\n    static Dubchic2: NpcType;\r\n    static Gilchic2: NpcType;\r\n    static Garanz2: NpcType;\r\n    static Dubswitch2: NpcType;\r\n    static Delsaber2: NpcType;\r\n    static ChaosSorcerer2: NpcType;\r\n    static GolDragon: NpcType;\r\n\r\n    // Episode II Central Control Area\r\n\r\n    static SinowBerill: NpcType;\r\n    static SinowSpigell: NpcType;\r\n    static Merillia: NpcType;\r\n    static Meriltas: NpcType;\r\n    static Mericarol: NpcType;\r\n    static Mericus: NpcType;\r\n    static Merikle: NpcType;\r\n    static UlGibbon: NpcType;\r\n    static ZolGibbon: NpcType;\r\n    static Gibbles: NpcType;\r\n    static Gee: NpcType;\r\n    static GiGue: NpcType;\r\n    static IllGill: NpcType;\r\n    static DelLily: NpcType;\r\n    static Epsilon: NpcType;\r\n    static GalGryphon: NpcType;\r\n\r\n    // Episode II Seabed\r\n\r\n    static Deldepth: NpcType;\r\n    static Delbiter: NpcType;\r\n    static Dolmolm: NpcType;\r\n    static Dolmdarl: NpcType;\r\n    static Morfos: NpcType;\r\n    static Recobox: NpcType;\r\n    static Recon: NpcType;\r\n    static SinowZoa: NpcType;\r\n    static SinowZele: NpcType;\r\n    static OlgaFlow: NpcType;\r\n\r\n    // Episode IV\r\n\r\n    static SandRappy: NpcType;\r\n    static DelRappy: NpcType;\r\n    static Astark: NpcType;\r\n    static SatelliteLizard: NpcType;\r\n    static Yowie: NpcType;\r\n    static MerissaA: NpcType;\r\n    static MerissaAA: NpcType;\r\n    static Girtablulu: NpcType;\r\n    static Zu: NpcType;\r\n    static Pazuzu: NpcType;\r\n    static Boota: NpcType;\r\n    static ZeBoota: NpcType;\r\n    static BaBoota: NpcType;\r\n    static Dorphon: NpcType;\r\n    static DorphonEclair: NpcType;\r\n    static Goran: NpcType;\r\n    static PyroGoran: NpcType;\r\n    static GoranDetonator: NpcType;\r\n    static SaintMilion: NpcType;\r\n    static Shambertin: NpcType;\r\n    static Kondrieu: NpcType;\r\n}\r\n\r\n(function() {\r\n    let id = 0;\r\n\r\n    //\r\n    // Unknown NPCs\r\n    //\r\n\r\n    NpcType.Unknown = new NpcType(\r\n        id++,\r\n        \"Unknown\",\r\n        \"Unknown\",\r\n        \"Unknown\",\r\n        \"Unknown\",\r\n        undefined,\r\n        false\r\n    );\r\n\r\n    //\r\n    // Friendly NPCs\r\n    //\r\n\r\n    NpcType.FemaleFat = new NpcType(\r\n        id++,\r\n        \"FemaleFat\",\r\n        \"Female Fat\",\r\n        \"Female Fat\",\r\n        \"Female Fat\",\r\n        undefined,\r\n        false\r\n    );\r\n    NpcType.FemaleMacho = new NpcType(\r\n        id++,\r\n        \"FemaleMacho\",\r\n        \"Female Macho\",\r\n        \"Female Macho\",\r\n        \"Female Macho\",\r\n        undefined,\r\n        false\r\n    );\r\n    NpcType.FemaleTall = new NpcType(\r\n        id++,\r\n        \"FemaleTall\",\r\n        \"Female Tall\",\r\n        \"Female Tall\",\r\n        \"Female Tall\",\r\n        undefined,\r\n        false\r\n    );\r\n    NpcType.MaleDwarf = new NpcType(\r\n        id++,\r\n        \"MaleDwarf\",\r\n        \"Male Dwarf\",\r\n        \"Male Dwarf\",\r\n        \"Male Dwarf\",\r\n        undefined,\r\n        false\r\n    );\r\n    NpcType.MaleFat = new NpcType(\r\n        id++,\r\n        \"MaleFat\",\r\n        \"Male Fat\",\r\n        \"Male Fat\",\r\n        \"Male Fat\",\r\n        undefined,\r\n        false\r\n    );\r\n    NpcType.MaleMacho = new NpcType(\r\n        id++,\r\n        \"MaleMacho\",\r\n        \"Male Macho\",\r\n        \"Male Macho\",\r\n        \"Male Macho\",\r\n        undefined,\r\n        false\r\n    );\r\n    NpcType.MaleOld = new NpcType(\r\n        id++,\r\n        \"MaleOld\",\r\n        \"Male Old\",\r\n        \"Male Old\",\r\n        \"Male Old\",\r\n        undefined,\r\n        false\r\n    );\r\n    NpcType.BlueSoldier = new NpcType(\r\n        id++,\r\n        \"BlueSoldier\",\r\n        \"Blue Soldier\",\r\n        \"Blue Soldier\",\r\n        \"Blue Soldier\",\r\n        undefined,\r\n        false\r\n    );\r\n    NpcType.RedSoldier = new NpcType(\r\n        id++,\r\n        \"RedSoldier\",\r\n        \"Red Soldier\",\r\n        \"Red Soldier\",\r\n        \"Red Soldier\",\r\n        undefined,\r\n        false\r\n    );\r\n    NpcType.Principal = new NpcType(\r\n        id++,\r\n        \"Principal\",\r\n        \"Principal\",\r\n        \"Principal\",\r\n        \"Principal\",\r\n        undefined,\r\n        false\r\n    );\r\n    NpcType.Tekker = new NpcType(id++, \"Tekker\", \"Tekker\", \"Tekker\", \"Tekker\", undefined, false);\r\n    NpcType.GuildLady = new NpcType(\r\n        id++,\r\n        \"GuildLady\",\r\n        \"Guild Lady\",\r\n        \"Guild Lady\",\r\n        \"Guild Lady\",\r\n        undefined,\r\n        false\r\n    );\r\n    NpcType.Scientist = new NpcType(\r\n        id++,\r\n        \"Scientist\",\r\n        \"Scientist\",\r\n        \"Scientist\",\r\n        \"Scientist\",\r\n        undefined,\r\n        false\r\n    );\r\n    NpcType.Nurse = new NpcType(id++, \"Nurse\", \"Nurse\", \"Nurse\", \"Nurse\", undefined, false);\r\n    NpcType.Irene = new NpcType(id++, \"Irene\", \"Irene\", \"Irene\", \"Irene\", undefined, false);\r\n    NpcType.ItemShop = new NpcType(\r\n        id++,\r\n        \"ItemShop\",\r\n        \"Item Shop\",\r\n        \"Item Shop\",\r\n        \"Item Shop\",\r\n        undefined,\r\n        false\r\n    );\r\n    NpcType.Nurse2 = new NpcType(id++, \"Nurse2\", \"Nurse (Ep. II)\", \"Nurse\", \"Nurse\", 2, false);\r\n\r\n    //\r\n    // Enemy NPCs\r\n    //\r\n\r\n    // Episode I Forest\r\n\r\n    NpcType.Hildebear = new NpcType(\r\n        id++,\r\n        \"Hildebear\",\r\n        \"Hildebear\",\r\n        \"Hildebear\",\r\n        \"Hildelt\",\r\n        1,\r\n        true\r\n    );\r\n    NpcType.Hildeblue = new NpcType(\r\n        id++,\r\n        \"Hildeblue\",\r\n        \"Hildeblue\",\r\n        \"Hildeblue\",\r\n        \"Hildetorr\",\r\n        1,\r\n        true\r\n    );\r\n    NpcType.Hildebear.rare_type = NpcType.Hildeblue;\r\n    NpcType.RagRappy = new NpcType(id++, \"RagRappy\", \"Rag Rappy\", \"Rag Rappy\", \"El Rappy\", 1, true);\r\n    NpcType.AlRappy = new NpcType(id++, \"AlRappy\", \"Al Rappy\", \"Al Rappy\", \"Pal Rappy\", 1, true);\r\n    NpcType.RagRappy.rare_type = NpcType.AlRappy;\r\n    NpcType.Monest = new NpcType(id++, \"Monest\", \"Monest\", \"Monest\", \"Mothvist\", 1, true);\r\n    NpcType.Mothmant = new NpcType(id++, \"Mothmant\", \"Mothmant\", \"Mothmant\", \"Mothvert\", 1, true);\r\n    NpcType.SavageWolf = new NpcType(\r\n        id++,\r\n        \"SavageWolf\",\r\n        \"Savage Wolf\",\r\n        \"Savage Wolf\",\r\n        \"Gulgus\",\r\n        1,\r\n        true\r\n    );\r\n    NpcType.BarbarousWolf = new NpcType(\r\n        id++,\r\n        \"BarbarousWolf\",\r\n        \"Barbarous Wolf\",\r\n        \"Barbarous Wolf\",\r\n        \"Gulgus-Gue\",\r\n        1,\r\n        true\r\n    );\r\n    NpcType.Booma = new NpcType(id++, \"Booma\", \"Booma\", \"Booma\", \"Bartle\", 1, true);\r\n    NpcType.Gobooma = new NpcType(id++, \"Gobooma\", \"Gobooma\", \"Gobooma\", \"Barble\", 1, true);\r\n    NpcType.Gigobooma = new NpcType(id++, \"Gigobooma\", \"Gigobooma\", \"Gigobooma\", \"Tollaw\", 1, true);\r\n    NpcType.Dragon = new NpcType(id++, \"Dragon\", \"Dragon\", \"Dragon\", \"Sil Dragon\", 1, true);\r\n\r\n    // Episode I Caves\r\n\r\n    NpcType.GrassAssassin = new NpcType(\r\n        id++,\r\n        \"GrassAssassin\",\r\n        \"Grass Assassin\",\r\n        \"Grass Assassin\",\r\n        \"Crimson Assassin\",\r\n        1,\r\n        true\r\n    );\r\n    NpcType.PoisonLily = new NpcType(\r\n        id++,\r\n        \"PoisonLily\",\r\n        \"Poison Lily\",\r\n        \"Poison Lily\",\r\n        \"Ob Lily\",\r\n        1,\r\n        true\r\n    );\r\n    NpcType.NarLily = new NpcType(id++, \"NarLily\", \"Nar Lily\", \"Nar Lily\", \"Mil Lily\", 1, true);\r\n    NpcType.PoisonLily.rare_type = NpcType.NarLily;\r\n    NpcType.NanoDragon = new NpcType(\r\n        id++,\r\n        \"NanoDragon\",\r\n        \"Nano Dragon\",\r\n        \"Nano Dragon\",\r\n        \"Nano Dragon\",\r\n        1,\r\n        true\r\n    );\r\n    NpcType.EvilShark = new NpcType(\r\n        id++,\r\n        \"EvilShark\",\r\n        \"Evil Shark\",\r\n        \"Evil Shark\",\r\n        \"Vulmer\",\r\n        1,\r\n        true\r\n    );\r\n    NpcType.PalShark = new NpcType(id++, \"PalShark\", \"Pal Shark\", \"Pal Shark\", \"Govulmer\", 1, true);\r\n    NpcType.GuilShark = new NpcType(\r\n        id++,\r\n        \"GuilShark\",\r\n        \"Guil Shark\",\r\n        \"Guil Shark\",\r\n        \"Melqueek\",\r\n        1,\r\n        true\r\n    );\r\n    NpcType.PofuillySlime = new NpcType(\r\n        id++,\r\n        \"PofuillySlime\",\r\n        \"Pofuilly Slime\",\r\n        \"Pofuilly Slime\",\r\n        \"Pofuilly Slime\",\r\n        1,\r\n        true\r\n    );\r\n    NpcType.PouillySlime = new NpcType(\r\n        id++,\r\n        \"PouillySlime\",\r\n        \"Pouilly Slime\",\r\n        \"Pouilly Slime\",\r\n        \"Pouilly Slime\",\r\n        1,\r\n        true\r\n    );\r\n    NpcType.PofuillySlime.rare_type = NpcType.PouillySlime;\r\n    NpcType.PanArms = new NpcType(id++, \"PanArms\", \"Pan Arms\", \"Pan Arms\", \"Pan Arms\", 1, true);\r\n    NpcType.Migium = new NpcType(id++, \"Migium\", \"Migium\", \"Migium\", \"Migium\", 1, true);\r\n    NpcType.Hidoom = new NpcType(id++, \"Hidoom\", \"Hidoom\", \"Hidoom\", \"Hidoom\", 1, true);\r\n    NpcType.DeRolLe = new NpcType(id++, \"DeRolLe\", \"De Rol Le\", \"De Rol Le\", \"Dal Ra Lie\", 1, true);\r\n\r\n    // Episode I Mines\r\n\r\n    NpcType.Dubchic = new NpcType(id++, \"Dubchic\", \"Dubchic\", \"Dubchic\", \"Dubchich\", 1, true);\r\n    NpcType.Gilchic = new NpcType(id++, \"Gilchic\", \"Gilchic\", \"Gilchic\", \"Gilchich\", 1, true);\r\n    NpcType.Garanz = new NpcType(id++, \"Garanz\", \"Garanz\", \"Garanz\", \"Baranz\", 1, true);\r\n    NpcType.SinowBeat = new NpcType(\r\n        id++,\r\n        \"SinowBeat\",\r\n        \"Sinow Beat\",\r\n        \"Sinow Beat\",\r\n        \"Sinow Blue\",\r\n        1,\r\n        true\r\n    );\r\n    NpcType.SinowGold = new NpcType(\r\n        id++,\r\n        \"SinowGold\",\r\n        \"Sinow Gold\",\r\n        \"Sinow Gold\",\r\n        \"Sinow Red\",\r\n        1,\r\n        true\r\n    );\r\n    NpcType.Canadine = new NpcType(id++, \"Canadine\", \"Canadine\", \"Canadine\", \"Canabin\", 1, true);\r\n    NpcType.Canane = new NpcType(id++, \"Canane\", \"Canane\", \"Canane\", \"Canune\", 1, true);\r\n    NpcType.Dubswitch = new NpcType(\r\n        id++,\r\n        \"Dubswitch\",\r\n        \"Dubswitch\",\r\n        \"Dubswitch\",\r\n        \"Dubswitch\",\r\n        1,\r\n        true\r\n    );\r\n    NpcType.VolOpt = new NpcType(id++, \"VolOpt\", \"Vol Opt\", \"Vol Opt\", \"Vol Opt ver.2\", 1, true);\r\n\r\n    // Episode I Ruins\r\n\r\n    NpcType.Delsaber = new NpcType(id++, \"Delsaber\", \"Delsaber\", \"Delsaber\", \"Delsaber\", 1, true);\r\n    NpcType.ChaosSorcerer = new NpcType(\r\n        id++,\r\n        \"ChaosSorcerer\",\r\n        \"Chaos Sorcerer\",\r\n        \"Chaos Sorcerer\",\r\n        \"Gran Sorcerer\",\r\n        1,\r\n        true\r\n    );\r\n    NpcType.DarkGunner = new NpcType(\r\n        id++,\r\n        \"DarkGunner\",\r\n        \"Dark Gunner\",\r\n        \"Dark Gunner\",\r\n        \"Dark Gunner\",\r\n        1,\r\n        true\r\n    );\r\n    NpcType.DeathGunner = new NpcType(\r\n        id++,\r\n        \"DeathGunner\",\r\n        \"Death Gunner\",\r\n        \"Death Gunner\",\r\n        \"Death Gunner\",\r\n        1,\r\n        true\r\n    );\r\n    NpcType.ChaosBringer = new NpcType(\r\n        id++,\r\n        \"ChaosBringer\",\r\n        \"Chaos Bringer\",\r\n        \"Chaos Bringer\",\r\n        \"Dark Bringer\",\r\n        1,\r\n        true\r\n    );\r\n    NpcType.DarkBelra = new NpcType(\r\n        id++,\r\n        \"DarkBelra\",\r\n        \"Dark Belra\",\r\n        \"Dark Belra\",\r\n        \"Indi Belra\",\r\n        1,\r\n        true\r\n    );\r\n    NpcType.Dimenian = new NpcType(id++, \"Dimenian\", \"Dimenian\", \"Dimenian\", \"Arlan\", 1, true);\r\n    NpcType.LaDimenian = new NpcType(\r\n        id++,\r\n        \"LaDimenian\",\r\n        \"La Dimenian\",\r\n        \"La Dimenian\",\r\n        \"Merlan\",\r\n        1,\r\n        true\r\n    );\r\n    NpcType.SoDimenian = new NpcType(\r\n        id++,\r\n        \"SoDimenian\",\r\n        \"So Dimenian\",\r\n        \"So Dimenian\",\r\n        \"Del-D\",\r\n        1,\r\n        true\r\n    );\r\n    NpcType.Bulclaw = new NpcType(id++, \"Bulclaw\", \"Bulclaw\", \"Bulclaw\", \"Bulclaw\", 1, true);\r\n    NpcType.Bulk = new NpcType(id++, \"Bulk\", \"Bulk\", \"Bulk\", \"Bulk\", 1, true);\r\n    NpcType.Claw = new NpcType(id++, \"Claw\", \"Claw\", \"Claw\", \"Claw\", 1, true);\r\n    NpcType.DarkFalz = new NpcType(\r\n        id++,\r\n        \"DarkFalz\",\r\n        \"Dark Falz\",\r\n        \"Dark Falz\",\r\n        \"Dark Falz\",\r\n        1,\r\n        true\r\n    );\r\n\r\n    // Episode II VR Temple\r\n\r\n    NpcType.Hildebear2 = new NpcType(\r\n        id++,\r\n        \"Hildebear2\",\r\n        \"Hildebear (Ep. II)\",\r\n        \"Hildebear\",\r\n        \"Hildelt\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.Hildeblue2 = new NpcType(\r\n        id++,\r\n        \"Hildeblue2\",\r\n        \"Hildeblue (Ep. II)\",\r\n        \"Hildeblue\",\r\n        \"Hildetorr\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.Hildebear2.rare_type = NpcType.Hildeblue2;\r\n    NpcType.RagRappy2 = new NpcType(\r\n        id++,\r\n        \"RagRappy2\",\r\n        \"Rag Rappy (Ep. II)\",\r\n        \"Rag Rappy\",\r\n        \"El Rappy\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.LoveRappy = new NpcType(\r\n        id++,\r\n        \"LoveRappy\",\r\n        \"Love Rappy\",\r\n        \"Love Rappy\",\r\n        \"Love Rappy\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.RagRappy2.rare_type = NpcType.LoveRappy;\r\n    NpcType.StRappy = new NpcType(id++, \"StRappy\", \"St. Rappy\", \"St. Rappy\", \"St. Rappy\", 2, true);\r\n    NpcType.HalloRappy = new NpcType(\r\n        id++,\r\n        \"HalloRappy\",\r\n        \"Hallo Rappy\",\r\n        \"Hallo Rappy\",\r\n        \"Hallo Rappy\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.EggRappy = new NpcType(\r\n        id++,\r\n        \"EggRappy\",\r\n        \"Egg Rappy\",\r\n        \"Egg Rappy\",\r\n        \"Egg Rappy\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.Monest2 = new NpcType(\r\n        id++,\r\n        \"Monest2\",\r\n        \"Monest (Ep. II)\",\r\n        \"Monest\",\r\n        \"Mothvist\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.Mothmant2 = new NpcType(id++, \"Mothmant2\", \"Mothmant\", \"Mothmant\", \"Mothvert\", 2, true);\r\n    NpcType.PoisonLily2 = new NpcType(\r\n        id++,\r\n        \"PoisonLily2\",\r\n        \"Poison Lily (Ep. II)\",\r\n        \"Poison Lily\",\r\n        \"Ob Lily\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.NarLily2 = new NpcType(\r\n        id++,\r\n        \"NarLily2\",\r\n        \"Nar Lily (Ep. II)\",\r\n        \"Nar Lily\",\r\n        \"Mil Lily\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.PoisonLily2.rare_type = NpcType.NarLily2;\r\n    NpcType.GrassAssassin2 = new NpcType(\r\n        id++,\r\n        \"GrassAssassin2\",\r\n        \"Grass Assassin (Ep. II)\",\r\n        \"Grass Assassin\",\r\n        \"Crimson Assassin\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.Dimenian2 = new NpcType(\r\n        id++,\r\n        \"Dimenian2\",\r\n        \"Dimenian (Ep. II)\",\r\n        \"Dimenian\",\r\n        \"Arlan\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.LaDimenian2 = new NpcType(\r\n        id++,\r\n        \"LaDimenian2\",\r\n        \"La Dimenian (Ep. II)\",\r\n        \"La Dimenian\",\r\n        \"Merlan\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.SoDimenian2 = new NpcType(\r\n        id++,\r\n        \"SoDimenian2\",\r\n        \"So Dimenian (Ep. II)\",\r\n        \"So Dimenian\",\r\n        \"Del-D\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.DarkBelra2 = new NpcType(\r\n        id++,\r\n        \"DarkBelra2\",\r\n        \"Dark Belra (Ep. II)\",\r\n        \"Dark Belra\",\r\n        \"Indi Belra\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.BarbaRay = new NpcType(\r\n        id++,\r\n        \"BarbaRay\",\r\n        \"Barba Ray\",\r\n        \"Barba Ray\",\r\n        \"Barba Ray\",\r\n        2,\r\n        true\r\n    );\r\n\r\n    // Episode II VR Spaceship\r\n\r\n    NpcType.SavageWolf2 = new NpcType(\r\n        id++,\r\n        \"SavageWolf2\",\r\n        \"Savage Wolf (Ep. II)\",\r\n        \"Savage Wolf\",\r\n        \"Gulgus\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.BarbarousWolf2 = new NpcType(\r\n        id++,\r\n        \"BarbarousWolf2\",\r\n        \"Barbarous Wolf (Ep. II)\",\r\n        \"Barbarous Wolf\",\r\n        \"Gulgus-Gue\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.PanArms2 = new NpcType(\r\n        id++,\r\n        \"PanArms2\",\r\n        \"Pan Arms (Ep. II)\",\r\n        \"Pan Arms\",\r\n        \"Pan Arms\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.Migium2 = new NpcType(id++, \"Migium2\", \"Migium (Ep. II)\", \"Migium\", \"Migium\", 2, true);\r\n    NpcType.Hidoom2 = new NpcType(id++, \"Hidoom2\", \"Hidoom (Ep. II)\", \"Hidoom\", \"Hidoom\", 2, true);\r\n    NpcType.Dubchic2 = new NpcType(\r\n        id++,\r\n        \"Dubchic2\",\r\n        \"Dubchic (Ep. II)\",\r\n        \"Dubchic\",\r\n        \"Dubchich\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.Gilchic2 = new NpcType(\r\n        id++,\r\n        \"Gilchic2\",\r\n        \"Gilchic (Ep. II)\",\r\n        \"Gilchic\",\r\n        \"Gilchich\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.Garanz2 = new NpcType(id++, \"Garanz2\", \"Garanz (Ep. II)\", \"Garanz\", \"Baranz\", 2, true);\r\n    NpcType.Dubswitch2 = new NpcType(\r\n        id++,\r\n        \"Dubswitch2\",\r\n        \"Dubswitch (Ep. II)\",\r\n        \"Dubswitch\",\r\n        \"Dubswitch\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.Delsaber2 = new NpcType(\r\n        id++,\r\n        \"Delsaber2\",\r\n        \"Delsaber (Ep. II)\",\r\n        \"Delsaber\",\r\n        \"Delsaber\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.ChaosSorcerer2 = new NpcType(\r\n        id++,\r\n        \"ChaosSorcerer2\",\r\n        \"Chaos Sorcerer (Ep. II)\",\r\n        \"Chaos Sorcerer\",\r\n        \"Gran Sorcerer\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.GolDragon = new NpcType(\r\n        id++,\r\n        \"GolDragon\",\r\n        \"Gol Dragon\",\r\n        \"Gol Dragon\",\r\n        \"Gol Dragon\",\r\n        2,\r\n        true\r\n    );\r\n\r\n    // Episode II Central Control Area\r\n\r\n    NpcType.SinowBerill = new NpcType(\r\n        id++,\r\n        \"SinowBerill\",\r\n        \"Sinow Berill\",\r\n        \"Sinow Berill\",\r\n        \"Sinow Berill\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.SinowSpigell = new NpcType(\r\n        id++,\r\n        \"SinowSpigell\",\r\n        \"Sinow Spigell\",\r\n        \"Sinow Spigell\",\r\n        \"Sinow Spigell\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.Merillia = new NpcType(id++, \"Merillia\", \"Merillia\", \"Merillia\", \"Merillia\", 2, true);\r\n    NpcType.Meriltas = new NpcType(id++, \"Meriltas\", \"Meriltas\", \"Meriltas\", \"Meriltas\", 2, true);\r\n    NpcType.Mericarol = new NpcType(\r\n        id++,\r\n        \"Mericarol\",\r\n        \"Mericarol\",\r\n        \"Mericarol\",\r\n        \"Mericarol\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.Mericus = new NpcType(id++, \"Mericus\", \"Mericus\", \"Mericus\", \"Mericus\", 2, true);\r\n    NpcType.Merikle = new NpcType(id++, \"Merikle\", \"Merikle\", \"Merikle\", \"Merikle\", 2, true);\r\n    NpcType.UlGibbon = new NpcType(\r\n        id++,\r\n        \"UlGibbon\",\r\n        \"Ul Gibbon\",\r\n        \"Ul Gibbon\",\r\n        \"Ul Gibbon\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.ZolGibbon = new NpcType(\r\n        id++,\r\n        \"ZolGibbon\",\r\n        \"Zol Gibbon\",\r\n        \"Zol Gibbon\",\r\n        \"Zol Gibbon\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.Gibbles = new NpcType(id++, \"Gibbles\", \"Gibbles\", \"Gibbles\", \"Gibbles\", 2, true);\r\n    NpcType.Gee = new NpcType(id++, \"Gee\", \"Gee\", \"Gee\", \"Gee\", 2, true);\r\n    NpcType.GiGue = new NpcType(id++, \"GiGue\", \"Gi Gue\", \"Gi Gue\", \"Gi Gue\", 2, true);\r\n    NpcType.IllGill = new NpcType(id++, \"IllGill\", \"Ill Gill\", \"Ill Gill\", \"Ill Gill\", 2, true);\r\n    NpcType.DelLily = new NpcType(id++, \"DelLily\", \"Del Lily\", \"Del Lily\", \"Del Lily\", 2, true);\r\n    NpcType.Epsilon = new NpcType(id++, \"Epsilon\", \"Epsilon\", \"Epsilon\", \"Epsilon\", 2, true);\r\n    NpcType.GalGryphon = new NpcType(\r\n        id++,\r\n        \"GalGryphon\",\r\n        \"Gal Gryphon\",\r\n        \"Gal Gryphon\",\r\n        \"Gal Gryphon\",\r\n        2,\r\n        true\r\n    );\r\n\r\n    // Episode II Seabed\r\n\r\n    NpcType.Deldepth = new NpcType(id++, \"Deldepth\", \"Deldepth\", \"Deldepth\", \"Deldepth\", 2, true);\r\n    NpcType.Delbiter = new NpcType(id++, \"Delbiter\", \"Delbiter\", \"Delbiter\", \"Delbiter\", 2, true);\r\n    NpcType.Dolmolm = new NpcType(id++, \"Dolmolm\", \"Dolmolm\", \"Dolmolm\", \"Dolmolm\", 2, true);\r\n    NpcType.Dolmdarl = new NpcType(id++, \"Dolmdarl\", \"Dolmdarl\", \"Dolmdarl\", \"Dolmdarl\", 2, true);\r\n    NpcType.Morfos = new NpcType(id++, \"Morfos\", \"Morfos\", \"Morfos\", \"Morfos\", 2, true);\r\n    NpcType.Recobox = new NpcType(id++, \"Recobox\", \"Recobox\", \"Recobox\", \"Recobox\", 2, true);\r\n    NpcType.Recon = new NpcType(id++, \"Recon\", \"Recon\", \"Recon\", \"Recon\", 2, true);\r\n    NpcType.SinowZoa = new NpcType(\r\n        id++,\r\n        \"SinowZoa\",\r\n        \"Sinow Zoa\",\r\n        \"Sinow Zoa\",\r\n        \"Sinow Zoa\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.SinowZele = new NpcType(\r\n        id++,\r\n        \"SinowZele\",\r\n        \"Sinow Zele\",\r\n        \"Sinow Zele\",\r\n        \"Sinow Zele\",\r\n        2,\r\n        true\r\n    );\r\n    NpcType.OlgaFlow = new NpcType(\r\n        id++,\r\n        \"OlgaFlow\",\r\n        \"Olga Flow\",\r\n        \"Olga Flow\",\r\n        \"Olga Flow\",\r\n        2,\r\n        true\r\n    );\r\n\r\n    // Episode IV\r\n\r\n    NpcType.SandRappy = new NpcType(\r\n        id++,\r\n        \"SandRappy\",\r\n        \"Sand Rappy\",\r\n        \"Sand Rappy\",\r\n        \"Sand Rappy\",\r\n        4,\r\n        true\r\n    );\r\n    NpcType.DelRappy = new NpcType(\r\n        id++,\r\n        \"DelRappy\",\r\n        \"Del Rappy\",\r\n        \"Del Rappy\",\r\n        \"Del Rappy\",\r\n        4,\r\n        true\r\n    );\r\n    NpcType.SandRappy.rare_type = NpcType.DelRappy;\r\n    NpcType.Astark = new NpcType(id++, \"Astark\", \"Astark\", \"Astark\", \"Astark\", 4, true);\r\n    NpcType.SatelliteLizard = new NpcType(\r\n        id++,\r\n        \"SatelliteLizard\",\r\n        \"Satellite Lizard\",\r\n        \"Satellite Lizard\",\r\n        \"Satellite Lizard\",\r\n        4,\r\n        true\r\n    );\r\n    NpcType.Yowie = new NpcType(id++, \"Yowie\", \"Yowie\", \"Yowie\", \"Yowie\", 4, true);\r\n    NpcType.MerissaA = new NpcType(\r\n        id++,\r\n        \"MerissaA\",\r\n        \"Merissa A\",\r\n        \"Merissa A\",\r\n        \"Merissa A\",\r\n        4,\r\n        true\r\n    );\r\n    NpcType.MerissaAA = new NpcType(\r\n        id++,\r\n        \"MerissaAA\",\r\n        \"Merissa AA\",\r\n        \"Merissa AA\",\r\n        \"Merissa AA\",\r\n        4,\r\n        true\r\n    );\r\n    NpcType.MerissaA.rare_type = NpcType.MerissaAA;\r\n    NpcType.Girtablulu = new NpcType(\r\n        id++,\r\n        \"Girtablulu\",\r\n        \"Girtablulu\",\r\n        \"Girtablulu\",\r\n        \"Girtablulu\",\r\n        4,\r\n        true\r\n    );\r\n    NpcType.Zu = new NpcType(id++, \"Zu\", \"Zu\", \"Zu\", \"Zu\", 4, true);\r\n    NpcType.Pazuzu = new NpcType(id++, \"Pazuzu\", \"Pazuzu\", \"Pazuzu\", \"Pazuzu\", 4, true);\r\n    NpcType.Zu.rare_type = NpcType.Pazuzu;\r\n    NpcType.Boota = new NpcType(id++, \"Boota\", \"Boota\", \"Boota\", \"Boota\", 4, true);\r\n    NpcType.ZeBoota = new NpcType(id++, \"ZeBoota\", \"Ze Boota\", \"Ze Boota\", \"Ze Boota\", 4, true);\r\n    NpcType.BaBoota = new NpcType(id++, \"BaBoota\", \"Ba Boota\", \"Ba Boota\", \"Ba Boota\", 4, true);\r\n    NpcType.Dorphon = new NpcType(id++, \"Dorphon\", \"Dorphon\", \"Dorphon\", \"Dorphon\", 4, true);\r\n    NpcType.DorphonEclair = new NpcType(\r\n        id++,\r\n        \"DorphonEclair\",\r\n        \"Dorphon Eclair\",\r\n        \"Dorphon Eclair\",\r\n        \"Dorphon Eclair\",\r\n        4,\r\n        true\r\n    );\r\n    NpcType.Dorphon.rare_type = NpcType.DorphonEclair;\r\n    NpcType.Goran = new NpcType(id++, \"Goran\", \"Goran\", \"Goran\", \"Goran\", 4, true);\r\n    NpcType.PyroGoran = new NpcType(\r\n        id++,\r\n        \"PyroGoran\",\r\n        \"Pyro Goran\",\r\n        \"Pyro Goran\",\r\n        \"Pyro Goran\",\r\n        4,\r\n        true\r\n    );\r\n    NpcType.GoranDetonator = new NpcType(\r\n        id++,\r\n        \"GoranDetonator\",\r\n        \"Goran Detonator\",\r\n        \"Goran Detonator\",\r\n        \"Goran Detonator\",\r\n        4,\r\n        true\r\n    );\r\n    NpcType.SaintMilion = new NpcType(\r\n        id++,\r\n        \"SaintMilion\",\r\n        \"Saint-Milion\",\r\n        \"Saint-Milion\",\r\n        \"Saint-Milion\",\r\n        4,\r\n        true\r\n    );\r\n    NpcType.Shambertin = new NpcType(\r\n        id++,\r\n        \"Shambertin\",\r\n        \"Shambertin\",\r\n        \"Shambertin\",\r\n        \"Shambertin\",\r\n        4,\r\n        true\r\n    );\r\n    NpcType.Kondrieu = new NpcType(id++, \"Kondrieu\", \"Kondrieu\", \"Kondrieu\", \"Kondrieu\", 4, true);\r\n    NpcType.SaintMilion.rare_type = NpcType.Kondrieu;\r\n    NpcType.Shambertin.rare_type = NpcType.Kondrieu;\r\n})();\r\n\r\nexport const NpcTypes: NpcType[] = [\r\n    //\r\n    // Unknown NPCs\r\n    //\r\n\r\n    NpcType.Unknown,\r\n\r\n    //\r\n    // Friendly NPCs\r\n    //\r\n\r\n    NpcType.FemaleFat,\r\n    NpcType.FemaleMacho,\r\n    NpcType.FemaleTall,\r\n    NpcType.MaleDwarf,\r\n    NpcType.MaleFat,\r\n    NpcType.MaleMacho,\r\n    NpcType.MaleOld,\r\n    NpcType.BlueSoldier,\r\n    NpcType.RedSoldier,\r\n    NpcType.Principal,\r\n    NpcType.Tekker,\r\n    NpcType.GuildLady,\r\n    NpcType.Scientist,\r\n    NpcType.Nurse,\r\n    NpcType.Irene,\r\n    NpcType.ItemShop,\r\n    NpcType.Nurse2,\r\n\r\n    //\r\n    // Enemy NPCs\r\n    //\r\n\r\n    // Episode I Forest\r\n\r\n    NpcType.Hildebear,\r\n    NpcType.Hildeblue,\r\n    NpcType.RagRappy,\r\n    NpcType.AlRappy,\r\n    NpcType.Monest,\r\n    NpcType.Mothmant,\r\n    NpcType.SavageWolf,\r\n    NpcType.BarbarousWolf,\r\n    NpcType.Booma,\r\n    NpcType.Gobooma,\r\n    NpcType.Gigobooma,\r\n    NpcType.Dragon,\r\n\r\n    // Episode I Caves\r\n\r\n    NpcType.GrassAssassin,\r\n    NpcType.PoisonLily,\r\n    NpcType.NarLily,\r\n    NpcType.NanoDragon,\r\n    NpcType.EvilShark,\r\n    NpcType.PalShark,\r\n    NpcType.GuilShark,\r\n    NpcType.PofuillySlime,\r\n    NpcType.PouillySlime,\r\n    NpcType.PanArms,\r\n    NpcType.Migium,\r\n    NpcType.Hidoom,\r\n    NpcType.DeRolLe,\r\n\r\n    // Episode I Mines\r\n\r\n    NpcType.Dubchic,\r\n    NpcType.Gilchic,\r\n    NpcType.Garanz,\r\n    NpcType.SinowBeat,\r\n    NpcType.SinowGold,\r\n    NpcType.Canadine,\r\n    NpcType.Canane,\r\n    NpcType.Dubswitch,\r\n    NpcType.VolOpt,\r\n\r\n    // Episode I Ruins\r\n\r\n    NpcType.Delsaber,\r\n    NpcType.ChaosSorcerer,\r\n    NpcType.DarkGunner,\r\n    NpcType.DeathGunner,\r\n    NpcType.ChaosBringer,\r\n    NpcType.DarkBelra,\r\n    NpcType.Dimenian,\r\n    NpcType.LaDimenian,\r\n    NpcType.SoDimenian,\r\n    NpcType.Bulclaw,\r\n    NpcType.Bulk,\r\n    NpcType.Claw,\r\n    NpcType.DarkFalz,\r\n\r\n    // Episode II VR Temple\r\n\r\n    NpcType.Hildebear2,\r\n    NpcType.Hildeblue2,\r\n    NpcType.RagRappy2,\r\n    NpcType.LoveRappy,\r\n    NpcType.StRappy,\r\n    NpcType.HalloRappy,\r\n    NpcType.EggRappy,\r\n    NpcType.Monest2,\r\n    NpcType.Mothmant2,\r\n    NpcType.PoisonLily2,\r\n    NpcType.NarLily2,\r\n    NpcType.GrassAssassin2,\r\n    NpcType.Dimenian2,\r\n    NpcType.LaDimenian2,\r\n    NpcType.SoDimenian2,\r\n    NpcType.DarkBelra2,\r\n    NpcType.BarbaRay,\r\n\r\n    // Episode II VR Spaceship\r\n\r\n    NpcType.SavageWolf2,\r\n    NpcType.BarbarousWolf2,\r\n    NpcType.PanArms2,\r\n    NpcType.Migium2,\r\n    NpcType.Hidoom2,\r\n    NpcType.Dubchic2,\r\n    NpcType.Gilchic2,\r\n    NpcType.Garanz2,\r\n    NpcType.Dubswitch2,\r\n    NpcType.Delsaber2,\r\n    NpcType.ChaosSorcerer2,\r\n    NpcType.GolDragon,\r\n\r\n    // Episode II Central Control Area\r\n\r\n    NpcType.SinowBerill,\r\n    NpcType.SinowSpigell,\r\n    NpcType.Merillia,\r\n    NpcType.Meriltas,\r\n    NpcType.Mericarol,\r\n    NpcType.Mericus,\r\n    NpcType.Merikle,\r\n    NpcType.UlGibbon,\r\n    NpcType.ZolGibbon,\r\n    NpcType.Gibbles,\r\n    NpcType.Gee,\r\n    NpcType.GiGue,\r\n    NpcType.IllGill,\r\n    NpcType.DelLily,\r\n    NpcType.Epsilon,\r\n    NpcType.GalGryphon,\r\n\r\n    // Episode II Seabed\r\n\r\n    NpcType.Deldepth,\r\n    NpcType.Delbiter,\r\n    NpcType.Dolmolm,\r\n    NpcType.Dolmdarl,\r\n    NpcType.Morfos,\r\n    NpcType.Recobox,\r\n    NpcType.Recon,\r\n    NpcType.SinowZoa,\r\n    NpcType.SinowZele,\r\n    NpcType.OlgaFlow,\r\n\r\n    // Episode IV\r\n\r\n    NpcType.SandRappy,\r\n    NpcType.DelRappy,\r\n    NpcType.Astark,\r\n    NpcType.SatelliteLizard,\r\n    NpcType.Yowie,\r\n    NpcType.MerissaA,\r\n    NpcType.MerissaAA,\r\n    NpcType.Girtablulu,\r\n    NpcType.Zu,\r\n    NpcType.Pazuzu,\r\n    NpcType.Boota,\r\n    NpcType.ZeBoota,\r\n    NpcType.BaBoota,\r\n    NpcType.Dorphon,\r\n    NpcType.DorphonEclair,\r\n    NpcType.Goran,\r\n    NpcType.PyroGoran,\r\n    NpcType.GoranDetonator,\r\n    NpcType.SaintMilion,\r\n    NpcType.Shambertin,\r\n    NpcType.Kondrieu,\r\n];\r\n\r\nexport const EnemyNpcTypes = NpcTypes.filter(type => type.enemy);\r\n","import { EntityType } from \".\";\r\n\r\nexport class ObjectType implements EntityType {\r\n    readonly id: number;\r\n    readonly code: string;\r\n    readonly pso_id?: number;\r\n    readonly name: string;\r\n\r\n    constructor(id: number, code: string, pso_id: number | undefined, name: string) {\r\n        if (!Number.isInteger(id) || id < 1)\r\n            throw new Error(`Expected id to be an integer greater than or equal to 1, got ${id}.`);\r\n        if (!code) throw new Error(\"code is required.\");\r\n        if (pso_id != null && (!Number.isInteger(pso_id) || pso_id < 0))\r\n            throw new Error(\r\n                `Expected pso_id to be null or an integer greater than or equal to 0, got ${pso_id}.`\r\n            );\r\n        if (!name) throw new Error(\"name is required.\");\r\n\r\n        this.id = id;\r\n        this.code = code;\r\n        this.pso_id = pso_id;\r\n        this.name = name;\r\n    }\r\n\r\n    static Unknown: ObjectType;\r\n    static PlayerSet: ObjectType;\r\n    static Particle: ObjectType;\r\n    static Teleporter: ObjectType;\r\n    static Warp: ObjectType;\r\n    static LightCollision: ObjectType;\r\n    static Item: ObjectType;\r\n    static EnvSound: ObjectType;\r\n    static FogCollision: ObjectType;\r\n    static EventCollision: ObjectType;\r\n    static CharaCollision: ObjectType;\r\n    static ElementalTrap: ObjectType;\r\n    static StatusTrap: ObjectType;\r\n    static HealTrap: ObjectType;\r\n    static LargeElementalTrap: ObjectType;\r\n    static ObjRoomID: ObjectType;\r\n    static Sensor: ObjectType;\r\n    static UnknownItem16: ObjectType;\r\n    static Lensflare: ObjectType;\r\n    static ScriptCollision: ObjectType;\r\n    static HealRing: ObjectType;\r\n    static MapCollision: ObjectType;\r\n    static ScriptCollisionA: ObjectType;\r\n    static ItemLight: ObjectType;\r\n    static RadarCollision: ObjectType;\r\n    static FogCollisionSW: ObjectType;\r\n    static BossTeleporter: ObjectType;\r\n    static ImageBoard: ObjectType;\r\n    static QuestWarp: ObjectType;\r\n    static Epilogue: ObjectType;\r\n    static UnknownItem29: ObjectType;\r\n    static UnknownItem30: ObjectType;\r\n    static UnknownItem31: ObjectType;\r\n    static BoxDetectObject: ObjectType;\r\n    static SymbolChatObject: ObjectType;\r\n    static TouchPlateObject: ObjectType;\r\n    static TargetableObject: ObjectType;\r\n    static EffectObject: ObjectType;\r\n    static CountDownObject: ObjectType;\r\n    static UnknownItem38: ObjectType;\r\n    static UnknownItem39: ObjectType;\r\n    static UnknownItem40: ObjectType;\r\n    static UnknownItem41: ObjectType;\r\n    static MenuActivation: ObjectType;\r\n    static TelepipeLocation: ObjectType;\r\n    static BGMCollision: ObjectType;\r\n    static MainRagolTeleporter: ObjectType;\r\n    static LobbyTeleporter: ObjectType;\r\n    static PrincipalWarp: ObjectType;\r\n    static ShopDoor: ObjectType;\r\n    static HuntersGuildDoor: ObjectType;\r\n    static TeleporterDoor: ObjectType;\r\n    static MedicalCenterDoor: ObjectType;\r\n    static Elevator: ObjectType;\r\n    static EasterEgg: ObjectType;\r\n    static ValentinesHeart: ObjectType;\r\n    static ChristmasTree: ObjectType;\r\n    static ChristmasWreath: ObjectType;\r\n    static HalloweenPumpkin: ObjectType;\r\n    static TwentyFirstCentury: ObjectType;\r\n    static Sonic: ObjectType;\r\n    static WelcomeBoard: ObjectType;\r\n    static Firework: ObjectType;\r\n    static LobbyScreenDoor: ObjectType;\r\n    static MainRagolTeleporterBattleInNextArea: ObjectType;\r\n    static LabTeleporterDoor: ObjectType;\r\n    static Pioneer2InvisibleTouchplate: ObjectType;\r\n    static ForestDoor: ObjectType;\r\n    static ForestSwitch: ObjectType;\r\n    static LaserFence: ObjectType;\r\n    static LaserSquareFence: ObjectType;\r\n    static ForestLaserFenceSwitch: ObjectType;\r\n    static LightRays: ObjectType;\r\n    static BlueButterfly: ObjectType;\r\n    static Probe: ObjectType;\r\n    static RandomTypeBox1: ObjectType;\r\n    static ForestWeatherStation: ObjectType;\r\n    static Battery: ObjectType;\r\n    static ForestConsole: ObjectType;\r\n    static BlackSlidingDoor: ObjectType;\r\n    static RicoMessagePod: ObjectType;\r\n    static EnergyBarrier: ObjectType;\r\n    static ForestRisingBridge: ObjectType;\r\n    static SwitchNoneDoor: ObjectType;\r\n    static EnemyBoxGrey: ObjectType;\r\n    static FixedTypeBox: ObjectType;\r\n    static EnemyBoxBrown: ObjectType;\r\n    static EmptyTypeBox: ObjectType;\r\n    static LaserFenseEx: ObjectType;\r\n    static LaserSquareFenceEx: ObjectType;\r\n    static FloorPanel1: ObjectType;\r\n    static Caves4ButtonDoor: ObjectType;\r\n    static CavesNormalDoor: ObjectType;\r\n    static CavesSmashingPillar: ObjectType;\r\n    static CavesSign1: ObjectType;\r\n    static CavesSign2: ObjectType;\r\n    static CavesSign3: ObjectType;\r\n    static HexagalTank: ObjectType;\r\n    static BrownPlatform: ObjectType;\r\n    static WarningLightObject: ObjectType;\r\n    static Rainbow: ObjectType;\r\n    static FloatingJelifish: ObjectType;\r\n    static FloatingDragonfly: ObjectType;\r\n    static CavesSwitchDoor: ObjectType;\r\n    static RobotRechargeStation: ObjectType;\r\n    static CavesCakeShop: ObjectType;\r\n    static Caves1SmallRedRock: ObjectType;\r\n    static Caves1MediumRedRock: ObjectType;\r\n    static Caves1LargeRedRock: ObjectType;\r\n    static Caves2SmallRock1: ObjectType;\r\n    static Caves2MediumRock1: ObjectType;\r\n    static Caves2LargeRock1: ObjectType;\r\n    static Caves2SmallRock2: ObjectType;\r\n    static Caves2MediumRock2: ObjectType;\r\n    static Caves2LargeRock2: ObjectType;\r\n    static Caves3SmallRock: ObjectType;\r\n    static Caves3MediumRock: ObjectType;\r\n    static Caves3LargeRock: ObjectType;\r\n    static FloorPanel2: ObjectType;\r\n    static DestructableRockCaves1: ObjectType;\r\n    static DestructableRockCaves2: ObjectType;\r\n    static DestructableRockCaves3: ObjectType;\r\n    static MinesDoor: ObjectType;\r\n    static FloorPanel3: ObjectType;\r\n    static MinesSwitchDoor: ObjectType;\r\n    static LargeCryoTube: ObjectType;\r\n    static ComputerLikeCalus: ObjectType;\r\n    static GreenScreenOpeningAndClosing: ObjectType;\r\n    static FloatingRobot: ObjectType;\r\n    static FloatingBlueLight: ObjectType;\r\n    static SelfDestructingObject1: ObjectType;\r\n    static SelfDestructingObject2: ObjectType;\r\n    static SelfDestructingObject3: ObjectType;\r\n    static SparkMachine: ObjectType;\r\n    static MinesLargeFlashingCrate: ObjectType;\r\n    static RuinsSeal: ObjectType;\r\n    static RuinsTeleporter: ObjectType;\r\n    static RuinsWarpSiteToSite: ObjectType;\r\n    static RuinsSwitch: ObjectType;\r\n    static FloorPanel4: ObjectType;\r\n    static Ruins1Door: ObjectType;\r\n    static Ruins3Door: ObjectType;\r\n    static Ruins2Door: ObjectType;\r\n    static Ruins11ButtonDoor: ObjectType;\r\n    static Ruins21ButtonDoor: ObjectType;\r\n    static Ruins31ButtonDoor: ObjectType;\r\n    static Ruins4ButtonDoor: ObjectType;\r\n    static Ruins2ButtonDoor: ObjectType;\r\n    static RuinsSensor: ObjectType;\r\n    static RuinsFenceSwitch: ObjectType;\r\n    static RuinsLaserFence4x2: ObjectType;\r\n    static RuinsLaserFence6x2: ObjectType;\r\n    static RuinsLaserFence4x4: ObjectType;\r\n    static RuinsLaserFence6x4: ObjectType;\r\n    static RuinsPoisonBlob: ObjectType;\r\n    static RuinsPilarTrap: ObjectType;\r\n    static PopupTrapNoTech: ObjectType;\r\n    static RuinsCrystal: ObjectType;\r\n    static Monument: ObjectType;\r\n    static RuinsRock1: ObjectType;\r\n    static RuinsRock2: ObjectType;\r\n    static RuinsRock3: ObjectType;\r\n    static RuinsRock4: ObjectType;\r\n    static RuinsRock5: ObjectType;\r\n    static RuinsRock6: ObjectType;\r\n    static RuinsRock7: ObjectType;\r\n    static Poison: ObjectType;\r\n    static FixedBoxTypeRuins: ObjectType;\r\n    static RandomBoxTypeRuins: ObjectType;\r\n    static EnemyTypeBoxYellow: ObjectType;\r\n    static EnemyTypeBoxBlue: ObjectType;\r\n    static EmptyTypeBoxBlue: ObjectType;\r\n    static DestructableRock: ObjectType;\r\n    static PopupTrapsTechs: ObjectType;\r\n    static FlyingWhiteBird: ObjectType;\r\n    static Tower: ObjectType;\r\n    static FloatingRocks: ObjectType;\r\n    static FloatingSoul: ObjectType;\r\n    static Butterfly: ObjectType;\r\n    static LobbyGameMenu: ObjectType;\r\n    static LobbyWarpObject: ObjectType;\r\n    static Lobby1EventObjectDefaultTree: ObjectType;\r\n    static UnknownItem387: ObjectType;\r\n    static UnknownItem388: ObjectType;\r\n    static UnknownItem389: ObjectType;\r\n    static LobbyEventObjectStaticPumpkin: ObjectType;\r\n    static LobbyEventObject3ChristmasWindows: ObjectType;\r\n    static LobbyEventObjectRedAndWhiteCurtain: ObjectType;\r\n    static UnknownItem393: ObjectType;\r\n    static UnknownItem394: ObjectType;\r\n    static LobbyFishTank: ObjectType;\r\n    static LobbyEventObjectButterflies: ObjectType;\r\n    static UnknownItem400: ObjectType;\r\n    static GreyWallLow: ObjectType;\r\n    static SpaceshipDoor: ObjectType;\r\n    static GreyWallHigh: ObjectType;\r\n    static TempleNormalDoor: ObjectType;\r\n    static BreakableWallWallButUnbreakable: ObjectType;\r\n    static BrokenCilinderAndRubble: ObjectType;\r\n    static ThreeBrokenWallPiecesOnFloor: ObjectType;\r\n    static HighBrickCilinder: ObjectType;\r\n    static LyingCilinder: ObjectType;\r\n    static BrickConeWithFlatTop: ObjectType;\r\n    static BreakableTempleWall: ObjectType;\r\n    static TempleMapDetect: ObjectType;\r\n    static SmallBrownBrickRisingBridge: ObjectType;\r\n    static LongRisingBridgeWithPinkHighEdges: ObjectType;\r\n    static FourSwitchTempleDoor: ObjectType;\r\n    static FourButtonSpaceshipDoor: ObjectType;\r\n    static ItemBoxCca: ObjectType;\r\n    static TeleporterEp2: ObjectType;\r\n    static CCADoor: ObjectType;\r\n    static SpecialBoxCCA: ObjectType;\r\n    static BigCCADoor: ObjectType;\r\n    static BigCCADoorSwitch: ObjectType;\r\n    static LittleRock: ObjectType;\r\n    static Little3StoneWall: ObjectType;\r\n    static Medium3StoneWall: ObjectType;\r\n    static SpiderPlant: ObjectType;\r\n    static CCAAreaTeleporter: ObjectType;\r\n    static UnknownItem523: ObjectType;\r\n    static WhiteBird: ObjectType;\r\n    static OrangeBird: ObjectType;\r\n    static Saw: ObjectType;\r\n    static LaserDetect: ObjectType;\r\n    static UnknownItem529: ObjectType;\r\n    static UnknownItem530: ObjectType;\r\n    static Seagull: ObjectType;\r\n    static Fish: ObjectType;\r\n    static SeabedDoorWithBlueEdges: ObjectType;\r\n    static SeabedDoorAlwaysOpenNonTriggerable: ObjectType;\r\n    static LittleCryotube: ObjectType;\r\n    static WideGlassWallBreakable: ObjectType;\r\n    static BlueFloatingRobot: ObjectType;\r\n    static RedFloatingRobot: ObjectType;\r\n    static Dolphin: ObjectType;\r\n    static CaptureTrap: ObjectType;\r\n    static VRLink: ObjectType;\r\n    static UnknownItem576: ObjectType;\r\n    static WarpInBarbaRayRoom: ObjectType;\r\n    static UnknownItem672: ObjectType;\r\n    static GeeNest: ObjectType;\r\n    static LabComputerConsole: ObjectType;\r\n    static LabComputerConsoleGreenScreen: ObjectType;\r\n    static ChairYelllowPillow: ObjectType;\r\n    static OrangeWallWithHoleInMiddle: ObjectType;\r\n    static GreyWallWithHoleInMiddle: ObjectType;\r\n    static LongTable: ObjectType;\r\n    static GBAStation: ObjectType;\r\n    static TalkLinkToSupport: ObjectType;\r\n    static InstaWarp: ObjectType;\r\n    static LabInvisibleObject: ObjectType;\r\n    static LabGlassWindowDoor: ObjectType;\r\n    static UnknownItem700: ObjectType;\r\n    static LabCelingWarp: ObjectType;\r\n    static Ep4LightSource: ObjectType;\r\n    static Cacti: ObjectType;\r\n    static BigBrownRock: ObjectType;\r\n    static BreakableBrownRock: ObjectType;\r\n    static UnknownItem832: ObjectType;\r\n    static UnknownItem833: ObjectType;\r\n    static PoisonPlant: ObjectType;\r\n    static UnknownItem897: ObjectType;\r\n    static UnknownItem898: ObjectType;\r\n    static OozingDesertPlant: ObjectType;\r\n    static UnknownItem901: ObjectType;\r\n    static BigBlackRocks: ObjectType;\r\n    static UnknownItem903: ObjectType;\r\n    static UnknownItem904: ObjectType;\r\n    static UnknownItem905: ObjectType;\r\n    static UnknownItem906: ObjectType;\r\n    static FallingRock: ObjectType;\r\n    static DesertPlantHasCollision: ObjectType;\r\n    static DesertFixedTypeBoxBreakableCrystals: ObjectType;\r\n    static UnknownItem910: ObjectType;\r\n    static BeeHive: ObjectType;\r\n    static UnknownItem912: ObjectType;\r\n    static Heat: ObjectType;\r\n    static TopOfSaintMillionEgg: ObjectType;\r\n    static UnknownItem961: ObjectType;\r\n\r\n    static from_pso_id(psoId: number): ObjectType {\r\n        switch (psoId) {\r\n            default:\r\n                return ObjectType.Unknown;\r\n\r\n            case 0:\r\n                return ObjectType.PlayerSet;\r\n            case 1:\r\n                return ObjectType.Particle;\r\n            case 2:\r\n                return ObjectType.Teleporter;\r\n            case 3:\r\n                return ObjectType.Warp;\r\n            case 4:\r\n                return ObjectType.LightCollision;\r\n            case 5:\r\n                return ObjectType.Item;\r\n            case 6:\r\n                return ObjectType.EnvSound;\r\n            case 7:\r\n                return ObjectType.FogCollision;\r\n            case 8:\r\n                return ObjectType.EventCollision;\r\n            case 9:\r\n                return ObjectType.CharaCollision;\r\n            case 10:\r\n                return ObjectType.ElementalTrap;\r\n            case 11:\r\n                return ObjectType.StatusTrap;\r\n            case 12:\r\n                return ObjectType.HealTrap;\r\n            case 13:\r\n                return ObjectType.LargeElementalTrap;\r\n            case 14:\r\n                return ObjectType.ObjRoomID;\r\n            case 15:\r\n                return ObjectType.Sensor;\r\n            case 16:\r\n                return ObjectType.UnknownItem16;\r\n            case 17:\r\n                return ObjectType.Lensflare;\r\n            case 18:\r\n                return ObjectType.ScriptCollision;\r\n            case 19:\r\n                return ObjectType.HealRing;\r\n            case 20:\r\n                return ObjectType.MapCollision;\r\n            case 21:\r\n                return ObjectType.ScriptCollisionA;\r\n            case 22:\r\n                return ObjectType.ItemLight;\r\n            case 23:\r\n                return ObjectType.RadarCollision;\r\n            case 24:\r\n                return ObjectType.FogCollisionSW;\r\n            case 25:\r\n                return ObjectType.BossTeleporter;\r\n            case 26:\r\n                return ObjectType.ImageBoard;\r\n            case 27:\r\n                return ObjectType.QuestWarp;\r\n            case 28:\r\n                return ObjectType.Epilogue;\r\n            case 29:\r\n                return ObjectType.UnknownItem29;\r\n            case 30:\r\n                return ObjectType.UnknownItem30;\r\n            case 31:\r\n                return ObjectType.UnknownItem31;\r\n            case 32:\r\n                return ObjectType.BoxDetectObject;\r\n            case 33:\r\n                return ObjectType.SymbolChatObject;\r\n            case 34:\r\n                return ObjectType.TouchPlateObject;\r\n            case 35:\r\n                return ObjectType.TargetableObject;\r\n            case 36:\r\n                return ObjectType.EffectObject;\r\n            case 37:\r\n                return ObjectType.CountDownObject;\r\n            case 38:\r\n                return ObjectType.UnknownItem38;\r\n            case 39:\r\n                return ObjectType.UnknownItem39;\r\n            case 40:\r\n                return ObjectType.UnknownItem40;\r\n            case 41:\r\n                return ObjectType.UnknownItem41;\r\n            case 64:\r\n                return ObjectType.MenuActivation;\r\n            case 65:\r\n                return ObjectType.TelepipeLocation;\r\n            case 66:\r\n                return ObjectType.BGMCollision;\r\n            case 67:\r\n                return ObjectType.MainRagolTeleporter;\r\n            case 68:\r\n                return ObjectType.LobbyTeleporter;\r\n            case 69:\r\n                return ObjectType.PrincipalWarp;\r\n            case 70:\r\n                return ObjectType.ShopDoor;\r\n            case 71:\r\n                return ObjectType.HuntersGuildDoor;\r\n            case 72:\r\n                return ObjectType.TeleporterDoor;\r\n            case 73:\r\n                return ObjectType.MedicalCenterDoor;\r\n            case 74:\r\n                return ObjectType.Elevator;\r\n            case 75:\r\n                return ObjectType.EasterEgg;\r\n            case 76:\r\n                return ObjectType.ValentinesHeart;\r\n            case 77:\r\n                return ObjectType.ChristmasTree;\r\n            case 78:\r\n                return ObjectType.ChristmasWreath;\r\n            case 79:\r\n                return ObjectType.HalloweenPumpkin;\r\n            case 80:\r\n                return ObjectType.TwentyFirstCentury;\r\n            case 81:\r\n                return ObjectType.Sonic;\r\n            case 82:\r\n                return ObjectType.WelcomeBoard;\r\n            case 83:\r\n                return ObjectType.Firework;\r\n            case 84:\r\n                return ObjectType.LobbyScreenDoor;\r\n            case 85:\r\n                return ObjectType.MainRagolTeleporterBattleInNextArea;\r\n            case 86:\r\n                return ObjectType.LabTeleporterDoor;\r\n            case 87:\r\n                return ObjectType.Pioneer2InvisibleTouchplate;\r\n            case 128:\r\n                return ObjectType.ForestDoor;\r\n            case 129:\r\n                return ObjectType.ForestSwitch;\r\n            case 130:\r\n                return ObjectType.LaserFence;\r\n            case 131:\r\n                return ObjectType.LaserSquareFence;\r\n            case 132:\r\n                return ObjectType.ForestLaserFenceSwitch;\r\n            case 133:\r\n                return ObjectType.LightRays;\r\n            case 134:\r\n                return ObjectType.BlueButterfly;\r\n            case 135:\r\n                return ObjectType.Probe;\r\n            case 136:\r\n                return ObjectType.RandomTypeBox1;\r\n            case 137:\r\n                return ObjectType.ForestWeatherStation;\r\n            case 138:\r\n                return ObjectType.Battery;\r\n            case 139:\r\n                return ObjectType.ForestConsole;\r\n            case 140:\r\n                return ObjectType.BlackSlidingDoor;\r\n            case 141:\r\n                return ObjectType.RicoMessagePod;\r\n            case 142:\r\n                return ObjectType.EnergyBarrier;\r\n            case 143:\r\n                return ObjectType.ForestRisingBridge;\r\n            case 144:\r\n                return ObjectType.SwitchNoneDoor;\r\n            case 145:\r\n                return ObjectType.EnemyBoxGrey;\r\n            case 146:\r\n                return ObjectType.FixedTypeBox;\r\n            case 147:\r\n                return ObjectType.EnemyBoxBrown;\r\n            case 149:\r\n                return ObjectType.EmptyTypeBox;\r\n            case 150:\r\n                return ObjectType.LaserFenseEx;\r\n            case 151:\r\n                return ObjectType.LaserSquareFenceEx;\r\n            case 192:\r\n                return ObjectType.FloorPanel1;\r\n            case 193:\r\n                return ObjectType.Caves4ButtonDoor;\r\n            case 194:\r\n                return ObjectType.CavesNormalDoor;\r\n            case 195:\r\n                return ObjectType.CavesSmashingPillar;\r\n            case 196:\r\n                return ObjectType.CavesSign1;\r\n            case 197:\r\n                return ObjectType.CavesSign2;\r\n            case 198:\r\n                return ObjectType.CavesSign3;\r\n            case 199:\r\n                return ObjectType.HexagalTank;\r\n            case 200:\r\n                return ObjectType.BrownPlatform;\r\n            case 201:\r\n                return ObjectType.WarningLightObject;\r\n            case 203:\r\n                return ObjectType.Rainbow;\r\n            case 204:\r\n                return ObjectType.FloatingJelifish;\r\n            case 205:\r\n                return ObjectType.FloatingDragonfly;\r\n            case 206:\r\n                return ObjectType.CavesSwitchDoor;\r\n            case 207:\r\n                return ObjectType.RobotRechargeStation;\r\n            case 208:\r\n                return ObjectType.CavesCakeShop;\r\n            case 209:\r\n                return ObjectType.Caves1SmallRedRock;\r\n            case 210:\r\n                return ObjectType.Caves1MediumRedRock;\r\n            case 211:\r\n                return ObjectType.Caves1LargeRedRock;\r\n            case 212:\r\n                return ObjectType.Caves2SmallRock1;\r\n            case 213:\r\n                return ObjectType.Caves2MediumRock1;\r\n            case 214:\r\n                return ObjectType.Caves2LargeRock1;\r\n            case 215:\r\n                return ObjectType.Caves2SmallRock2;\r\n            case 216:\r\n                return ObjectType.Caves2MediumRock2;\r\n            case 217:\r\n                return ObjectType.Caves2LargeRock2;\r\n            case 218:\r\n                return ObjectType.Caves3SmallRock;\r\n            case 219:\r\n                return ObjectType.Caves3MediumRock;\r\n            case 220:\r\n                return ObjectType.Caves3LargeRock;\r\n            case 222:\r\n                return ObjectType.FloorPanel2;\r\n            case 223:\r\n                return ObjectType.DestructableRockCaves1;\r\n            case 224:\r\n                return ObjectType.DestructableRockCaves2;\r\n            case 225:\r\n                return ObjectType.DestructableRockCaves3;\r\n            case 256:\r\n                return ObjectType.MinesDoor;\r\n            case 257:\r\n                return ObjectType.FloorPanel3;\r\n            case 258:\r\n                return ObjectType.MinesSwitchDoor;\r\n            case 259:\r\n                return ObjectType.LargeCryoTube;\r\n            case 260:\r\n                return ObjectType.ComputerLikeCalus;\r\n            case 261:\r\n                return ObjectType.GreenScreenOpeningAndClosing;\r\n            case 262:\r\n                return ObjectType.FloatingRobot;\r\n            case 263:\r\n                return ObjectType.FloatingBlueLight;\r\n            case 264:\r\n                return ObjectType.SelfDestructingObject1;\r\n            case 265:\r\n                return ObjectType.SelfDestructingObject2;\r\n            case 266:\r\n                return ObjectType.SelfDestructingObject3;\r\n            case 267:\r\n                return ObjectType.SparkMachine;\r\n            case 268:\r\n                return ObjectType.MinesLargeFlashingCrate;\r\n            case 304:\r\n                return ObjectType.RuinsSeal;\r\n            case 320:\r\n                return ObjectType.RuinsTeleporter;\r\n            case 321:\r\n                return ObjectType.RuinsWarpSiteToSite;\r\n            case 322:\r\n                return ObjectType.RuinsSwitch;\r\n            case 323:\r\n                return ObjectType.FloorPanel4;\r\n            case 324:\r\n                return ObjectType.Ruins1Door;\r\n            case 325:\r\n                return ObjectType.Ruins3Door;\r\n            case 326:\r\n                return ObjectType.Ruins2Door;\r\n            case 327:\r\n                return ObjectType.Ruins11ButtonDoor;\r\n            case 328:\r\n                return ObjectType.Ruins21ButtonDoor;\r\n            case 329:\r\n                return ObjectType.Ruins31ButtonDoor;\r\n            case 330:\r\n                return ObjectType.Ruins4ButtonDoor;\r\n            case 331:\r\n                return ObjectType.Ruins2ButtonDoor;\r\n            case 332:\r\n                return ObjectType.RuinsSensor;\r\n            case 333:\r\n                return ObjectType.RuinsFenceSwitch;\r\n            case 334:\r\n                return ObjectType.RuinsLaserFence4x2;\r\n            case 335:\r\n                return ObjectType.RuinsLaserFence6x2;\r\n            case 336:\r\n                return ObjectType.RuinsLaserFence4x4;\r\n            case 337:\r\n                return ObjectType.RuinsLaserFence6x4;\r\n            case 338:\r\n                return ObjectType.RuinsPoisonBlob;\r\n            case 339:\r\n                return ObjectType.RuinsPilarTrap;\r\n            case 340:\r\n                return ObjectType.PopupTrapNoTech;\r\n            case 341:\r\n                return ObjectType.RuinsCrystal;\r\n            case 342:\r\n                return ObjectType.Monument;\r\n            case 345:\r\n                return ObjectType.RuinsRock1;\r\n            case 346:\r\n                return ObjectType.RuinsRock2;\r\n            case 347:\r\n                return ObjectType.RuinsRock3;\r\n            case 348:\r\n                return ObjectType.RuinsRock4;\r\n            case 349:\r\n                return ObjectType.RuinsRock5;\r\n            case 350:\r\n                return ObjectType.RuinsRock6;\r\n            case 351:\r\n                return ObjectType.RuinsRock7;\r\n            case 352:\r\n                return ObjectType.Poison;\r\n            case 353:\r\n                return ObjectType.FixedBoxTypeRuins;\r\n            case 354:\r\n                return ObjectType.RandomBoxTypeRuins;\r\n            case 355:\r\n                return ObjectType.EnemyTypeBoxYellow;\r\n            case 356:\r\n                return ObjectType.EnemyTypeBoxBlue;\r\n            case 357:\r\n                return ObjectType.EmptyTypeBoxBlue;\r\n            case 358:\r\n                return ObjectType.DestructableRock;\r\n            case 359:\r\n                return ObjectType.PopupTrapsTechs;\r\n            case 368:\r\n                return ObjectType.FlyingWhiteBird;\r\n            case 369:\r\n                return ObjectType.Tower;\r\n            case 370:\r\n                return ObjectType.FloatingRocks;\r\n            case 371:\r\n                return ObjectType.FloatingSoul;\r\n            case 372:\r\n                return ObjectType.Butterfly;\r\n            case 384:\r\n                return ObjectType.LobbyGameMenu;\r\n            case 385:\r\n                return ObjectType.LobbyWarpObject;\r\n            case 386:\r\n                return ObjectType.Lobby1EventObjectDefaultTree;\r\n            case 387:\r\n                return ObjectType.UnknownItem387;\r\n            case 388:\r\n                return ObjectType.UnknownItem388;\r\n            case 389:\r\n                return ObjectType.UnknownItem389;\r\n            case 390:\r\n                return ObjectType.LobbyEventObjectStaticPumpkin;\r\n            case 391:\r\n                return ObjectType.LobbyEventObject3ChristmasWindows;\r\n            case 392:\r\n                return ObjectType.LobbyEventObjectRedAndWhiteCurtain;\r\n            case 393:\r\n                return ObjectType.UnknownItem393;\r\n            case 394:\r\n                return ObjectType.UnknownItem394;\r\n            case 395:\r\n                return ObjectType.LobbyFishTank;\r\n            case 396:\r\n                return ObjectType.LobbyEventObjectButterflies;\r\n            case 400:\r\n                return ObjectType.UnknownItem400;\r\n            case 401:\r\n                return ObjectType.GreyWallLow;\r\n            case 402:\r\n                return ObjectType.SpaceshipDoor;\r\n            case 403:\r\n                return ObjectType.GreyWallHigh;\r\n            case 416:\r\n                return ObjectType.TempleNormalDoor;\r\n            case 417:\r\n                return ObjectType.BreakableWallWallButUnbreakable;\r\n            case 418:\r\n                return ObjectType.BrokenCilinderAndRubble;\r\n            case 419:\r\n                return ObjectType.ThreeBrokenWallPiecesOnFloor;\r\n            case 420:\r\n                return ObjectType.HighBrickCilinder;\r\n            case 421:\r\n                return ObjectType.LyingCilinder;\r\n            case 422:\r\n                return ObjectType.BrickConeWithFlatTop;\r\n            case 423:\r\n                return ObjectType.BreakableTempleWall;\r\n            case 424:\r\n                return ObjectType.TempleMapDetect;\r\n            case 425:\r\n                return ObjectType.SmallBrownBrickRisingBridge;\r\n            case 426:\r\n                return ObjectType.LongRisingBridgeWithPinkHighEdges;\r\n            case 427:\r\n                return ObjectType.FourSwitchTempleDoor;\r\n            case 448:\r\n                return ObjectType.FourButtonSpaceshipDoor;\r\n            case 512:\r\n                return ObjectType.ItemBoxCca;\r\n            case 513:\r\n                return ObjectType.TeleporterEp2;\r\n            case 514:\r\n                return ObjectType.CCADoor;\r\n            case 515:\r\n                return ObjectType.SpecialBoxCCA;\r\n            case 516:\r\n                return ObjectType.BigCCADoor;\r\n            case 517:\r\n                return ObjectType.BigCCADoorSwitch;\r\n            case 518:\r\n                return ObjectType.LittleRock;\r\n            case 519:\r\n                return ObjectType.Little3StoneWall;\r\n            case 520:\r\n                return ObjectType.Medium3StoneWall;\r\n            case 521:\r\n                return ObjectType.SpiderPlant;\r\n            case 522:\r\n                return ObjectType.CCAAreaTeleporter;\r\n            case 523:\r\n                return ObjectType.UnknownItem523;\r\n            case 524:\r\n                return ObjectType.WhiteBird;\r\n            case 525:\r\n                return ObjectType.OrangeBird;\r\n            case 527:\r\n                return ObjectType.Saw;\r\n            case 528:\r\n                return ObjectType.LaserDetect;\r\n            case 529:\r\n                return ObjectType.UnknownItem529;\r\n            case 530:\r\n                return ObjectType.UnknownItem530;\r\n            case 531:\r\n                return ObjectType.Seagull;\r\n            case 544:\r\n                return ObjectType.Fish;\r\n            case 545:\r\n                return ObjectType.SeabedDoorWithBlueEdges;\r\n            case 546:\r\n                return ObjectType.SeabedDoorAlwaysOpenNonTriggerable;\r\n            case 547:\r\n                return ObjectType.LittleCryotube;\r\n            case 548:\r\n                return ObjectType.WideGlassWallBreakable;\r\n            case 549:\r\n                return ObjectType.BlueFloatingRobot;\r\n            case 550:\r\n                return ObjectType.RedFloatingRobot;\r\n            case 551:\r\n                return ObjectType.Dolphin;\r\n            case 552:\r\n                return ObjectType.CaptureTrap;\r\n            case 553:\r\n                return ObjectType.VRLink;\r\n            case 576:\r\n                return ObjectType.UnknownItem576;\r\n            case 640:\r\n                return ObjectType.WarpInBarbaRayRoom;\r\n            case 672:\r\n                return ObjectType.UnknownItem672;\r\n            case 688:\r\n                return ObjectType.GeeNest;\r\n            case 689:\r\n                return ObjectType.LabComputerConsole;\r\n            case 690:\r\n                return ObjectType.LabComputerConsoleGreenScreen;\r\n            case 691:\r\n                return ObjectType.ChairYelllowPillow;\r\n            case 692:\r\n                return ObjectType.OrangeWallWithHoleInMiddle;\r\n            case 693:\r\n                return ObjectType.GreyWallWithHoleInMiddle;\r\n            case 694:\r\n                return ObjectType.LongTable;\r\n            case 695:\r\n                return ObjectType.GBAStation;\r\n            case 696:\r\n                return ObjectType.TalkLinkToSupport;\r\n            case 697:\r\n                return ObjectType.InstaWarp;\r\n            case 698:\r\n                return ObjectType.LabInvisibleObject;\r\n            case 699:\r\n                return ObjectType.LabGlassWindowDoor;\r\n            case 700:\r\n                return ObjectType.UnknownItem700;\r\n            case 701:\r\n                return ObjectType.LabCelingWarp;\r\n            case 768:\r\n                return ObjectType.Ep4LightSource;\r\n            case 769:\r\n                return ObjectType.Cacti;\r\n            case 770:\r\n                return ObjectType.BigBrownRock;\r\n            case 771:\r\n                return ObjectType.BreakableBrownRock;\r\n            case 832:\r\n                return ObjectType.UnknownItem832;\r\n            case 833:\r\n                return ObjectType.UnknownItem833;\r\n            case 896:\r\n                return ObjectType.PoisonPlant;\r\n            case 897:\r\n                return ObjectType.UnknownItem897;\r\n            case 898:\r\n                return ObjectType.UnknownItem898;\r\n            case 899:\r\n                return ObjectType.OozingDesertPlant;\r\n            case 901:\r\n                return ObjectType.UnknownItem901;\r\n            case 902:\r\n                return ObjectType.BigBlackRocks;\r\n            case 903:\r\n                return ObjectType.UnknownItem903;\r\n            case 904:\r\n                return ObjectType.UnknownItem904;\r\n            case 905:\r\n                return ObjectType.UnknownItem905;\r\n            case 906:\r\n                return ObjectType.UnknownItem906;\r\n            case 907:\r\n                return ObjectType.FallingRock;\r\n            case 908:\r\n                return ObjectType.DesertPlantHasCollision;\r\n            case 909:\r\n                return ObjectType.DesertFixedTypeBoxBreakableCrystals;\r\n            case 910:\r\n                return ObjectType.UnknownItem910;\r\n            case 911:\r\n                return ObjectType.BeeHive;\r\n            case 912:\r\n                return ObjectType.UnknownItem912;\r\n            case 913:\r\n                return ObjectType.Heat;\r\n            case 960:\r\n                return ObjectType.TopOfSaintMillionEgg;\r\n            case 961:\r\n                return ObjectType.UnknownItem961;\r\n        }\r\n    }\r\n}\r\n\r\n(function() {\r\n    let id = 1;\r\n\r\n    ObjectType.Unknown = new ObjectType(id++, \"Unknown\", undefined, \"Unknown\");\r\n\r\n    ObjectType.PlayerSet = new ObjectType(id++, \"PlayerSet\", 0, \"Player Set\");\r\n    ObjectType.Particle = new ObjectType(id++, \"Particle\", 1, \"Particle\");\r\n    ObjectType.Teleporter = new ObjectType(id++, \"Teleporter\", 2, \"Teleporter\");\r\n    ObjectType.Warp = new ObjectType(id++, \"Warp\", 3, \"Warp\");\r\n    ObjectType.LightCollision = new ObjectType(id++, \"LightCollision\", 4, \"Light Collision\");\r\n    ObjectType.Item = new ObjectType(id++, \"Item\", 5, \"Item\");\r\n    ObjectType.EnvSound = new ObjectType(id++, \"EnvSound\", 6, \"Env Sound\");\r\n    ObjectType.FogCollision = new ObjectType(id++, \"FogCollision\", 7, \"Fog Collision\");\r\n    ObjectType.EventCollision = new ObjectType(id++, \"EventCollision\", 8, \"Event Collision\");\r\n    ObjectType.CharaCollision = new ObjectType(id++, \"CharaCollision\", 9, \"Chara Collision\");\r\n    ObjectType.ElementalTrap = new ObjectType(id++, \"ElementalTrap\", 10, \"Elemental Trap\");\r\n    ObjectType.StatusTrap = new ObjectType(id++, \"StatusTrap\", 11, \"Status Trap\");\r\n    ObjectType.HealTrap = new ObjectType(id++, \"HealTrap\", 12, \"Heal Trap\");\r\n    ObjectType.LargeElementalTrap = new ObjectType(\r\n        id++,\r\n        \"LargeElementalTrap\",\r\n        13,\r\n        \"Large Elemental Trap\"\r\n    );\r\n    ObjectType.ObjRoomID = new ObjectType(id++, \"ObjRoomID\", 14, \"Obj Room ID\");\r\n    ObjectType.Sensor = new ObjectType(id++, \"Sensor\", 15, \"Sensor\");\r\n    ObjectType.UnknownItem16 = new ObjectType(id++, \"UnknownItem16\", 16, \"Unknown Item (16)\");\r\n    ObjectType.Lensflare = new ObjectType(id++, \"Lensflare\", 17, \"Lensflare\");\r\n    ObjectType.ScriptCollision = new ObjectType(id++, \"ScriptCollision\", 18, \"Script Collision\");\r\n    ObjectType.HealRing = new ObjectType(id++, \"HealRing\", 19, \"Heal Ring\");\r\n    ObjectType.MapCollision = new ObjectType(id++, \"MapCollision\", 20, \"Map Collision\");\r\n    ObjectType.ScriptCollisionA = new ObjectType(\r\n        id++,\r\n        \"ScriptCollisionA\",\r\n        21,\r\n        \"Script Collision A\"\r\n    );\r\n    ObjectType.ItemLight = new ObjectType(id++, \"ItemLight\", 22, \"Item Light\");\r\n    ObjectType.RadarCollision = new ObjectType(id++, \"RadarCollision\", 23, \"Radar Collision\");\r\n    ObjectType.FogCollisionSW = new ObjectType(id++, \"FogCollisionSW\", 24, \"Fog Collision SW\");\r\n    ObjectType.BossTeleporter = new ObjectType(id++, \"BossTeleporter\", 25, \"Boss Teleporter\");\r\n    ObjectType.ImageBoard = new ObjectType(id++, \"ImageBoard\", 26, \"Image Board\");\r\n    ObjectType.QuestWarp = new ObjectType(id++, \"QuestWarp\", 27, \"Quest Warp\");\r\n    ObjectType.Epilogue = new ObjectType(id++, \"Epilogue\", 28, \"Epilogue\");\r\n    ObjectType.UnknownItem29 = new ObjectType(id++, \"UnknownItem29\", 29, \"Unknown Item (29)\");\r\n    ObjectType.UnknownItem30 = new ObjectType(id++, \"UnknownItem30\", 30, \"Unknown Item (30)\");\r\n    ObjectType.UnknownItem31 = new ObjectType(id++, \"UnknownItem31\", 31, \"Unknown Item (31)\");\r\n    ObjectType.BoxDetectObject = new ObjectType(id++, \"BoxDetectObject\", 32, \"Box Detect Object\");\r\n    ObjectType.SymbolChatObject = new ObjectType(\r\n        id++,\r\n        \"SymbolChatObject\",\r\n        33,\r\n        \"Symbol Chat Object\"\r\n    );\r\n    ObjectType.TouchPlateObject = new ObjectType(\r\n        id++,\r\n        \"TouchPlateObject\",\r\n        34,\r\n        \"Touch plate Object\"\r\n    );\r\n    ObjectType.TargetableObject = new ObjectType(id++, \"TargetableObject\", 35, \"Targetable Object\");\r\n    ObjectType.EffectObject = new ObjectType(id++, \"EffectObject\", 36, \"Effect object\");\r\n    ObjectType.CountDownObject = new ObjectType(id++, \"CountDownObject\", 37, \"Count Down Object\");\r\n    ObjectType.UnknownItem38 = new ObjectType(id++, \"UnknownItem38\", 38, \"Unknown Item (38)\");\r\n    ObjectType.UnknownItem39 = new ObjectType(id++, \"UnknownItem39\", 39, \"Unknown Item (39)\");\r\n    ObjectType.UnknownItem40 = new ObjectType(id++, \"UnknownItem40\", 40, \"Unknown Item (40)\");\r\n    ObjectType.UnknownItem41 = new ObjectType(id++, \"UnknownItem41\", 41, \"Unknown Item (41)\");\r\n    ObjectType.MenuActivation = new ObjectType(id++, \"MenuActivation\", 64, \"Menu activation\");\r\n    ObjectType.TelepipeLocation = new ObjectType(id++, \"TelepipeLocation\", 65, \"Telepipe Location\");\r\n    ObjectType.BGMCollision = new ObjectType(id++, \"BGMCollision\", 66, \"BGM Collision\");\r\n    ObjectType.MainRagolTeleporter = new ObjectType(\r\n        id++,\r\n        \"MainRagolTeleporter\",\r\n        67,\r\n        \"Main Ragol Teleporter\"\r\n    );\r\n    ObjectType.LobbyTeleporter = new ObjectType(id++, \"LobbyTeleporter\", 68, \"Lobby Teleporter\");\r\n    ObjectType.PrincipalWarp = new ObjectType(id++, \"PrincipalWarp\", 69, \"Principal warp\");\r\n    ObjectType.ShopDoor = new ObjectType(id++, \"ShopDoor\", 70, \"Shop Door\");\r\n    ObjectType.HuntersGuildDoor = new ObjectType(\r\n        id++,\r\n        \"HuntersGuildDoor\",\r\n        71,\r\n        \"Hunter's Guild Door\"\r\n    );\r\n    ObjectType.TeleporterDoor = new ObjectType(id++, \"TeleporterDoor\", 72, \"Teleporter Door\");\r\n    ObjectType.MedicalCenterDoor = new ObjectType(\r\n        id++,\r\n        \"MedicalCenterDoor\",\r\n        73,\r\n        \"Medical Center Door\"\r\n    );\r\n    ObjectType.Elevator = new ObjectType(id++, \"Elevator\", 74, \"Elevator\");\r\n    ObjectType.EasterEgg = new ObjectType(id++, \"EasterEgg\", 75, \"Easter Egg\");\r\n    ObjectType.ValentinesHeart = new ObjectType(id++, \"ValentinesHeart\", 76, \"Valentines Heart\");\r\n    ObjectType.ChristmasTree = new ObjectType(id++, \"ChristmasTree\", 77, \"Christmas Tree\");\r\n    ObjectType.ChristmasWreath = new ObjectType(id++, \"ChristmasWreath\", 78, \"Christmas Wreath\");\r\n    ObjectType.HalloweenPumpkin = new ObjectType(id++, \"HalloweenPumpkin\", 79, \"Halloween Pumpkin\");\r\n    ObjectType.TwentyFirstCentury = new ObjectType(id++, \"TwentyFirstCentury\", 80, \"21st Century\");\r\n    ObjectType.Sonic = new ObjectType(id++, \"Sonic\", 81, \"Sonic\");\r\n    ObjectType.WelcomeBoard = new ObjectType(id++, \"WelcomeBoard\", 82, \"Welcome Board\");\r\n    ObjectType.Firework = new ObjectType(id++, \"Firework\", 83, \"Firework\");\r\n    ObjectType.LobbyScreenDoor = new ObjectType(id++, \"LobbyScreenDoor\", 84, \"Lobby Screen Door\");\r\n    ObjectType.MainRagolTeleporterBattleInNextArea = new ObjectType(\r\n        id++,\r\n        \"MainRagolTeleporterBattleInNextArea\",\r\n        85,\r\n        \"Main Ragol Teleporter (Battle in next area?)\"\r\n    );\r\n    ObjectType.LabTeleporterDoor = new ObjectType(\r\n        id++,\r\n        \"LabTeleporterDoor\",\r\n        86,\r\n        \"Lab Teleporter Door\"\r\n    );\r\n    ObjectType.Pioneer2InvisibleTouchplate = new ObjectType(\r\n        id++,\r\n        \"Pioneer2InvisibleTouchplate\",\r\n        87,\r\n        \"Pioneer 2 Invisible Touchplate\"\r\n    );\r\n    ObjectType.ForestDoor = new ObjectType(id++, \"ForestDoor\", 128, \"Forest Door\");\r\n    ObjectType.ForestSwitch = new ObjectType(id++, \"ForestSwitch\", 129, \"Forest Switch\");\r\n    ObjectType.LaserFence = new ObjectType(id++, \"LaserFence\", 130, \"Laser Fence\");\r\n    ObjectType.LaserSquareFence = new ObjectType(\r\n        id++,\r\n        \"LaserSquareFence\",\r\n        131,\r\n        \"Laser Square Fence\"\r\n    );\r\n    ObjectType.ForestLaserFenceSwitch = new ObjectType(\r\n        id++,\r\n        \"ForestLaserFenceSwitch\",\r\n        132,\r\n        \"Forest Laser Fence Switch\"\r\n    );\r\n    ObjectType.LightRays = new ObjectType(id++, \"LightRays\", 133, \"Light rays\");\r\n    ObjectType.BlueButterfly = new ObjectType(id++, \"BlueButterfly\", 134, \"Blue Butterfly\");\r\n    ObjectType.Probe = new ObjectType(id++, \"Probe\", 135, \"Probe\");\r\n    ObjectType.RandomTypeBox1 = new ObjectType(id++, \"RandomTypeBox1\", 136, \"Random Type Box 1\");\r\n    ObjectType.ForestWeatherStation = new ObjectType(\r\n        id++,\r\n        \"ForestWeatherStation\",\r\n        137,\r\n        \"Forest Weather Station\"\r\n    );\r\n    ObjectType.Battery = new ObjectType(id++, \"Battery\", 138, \"Battery\");\r\n    ObjectType.ForestConsole = new ObjectType(id++, \"ForestConsole\", 139, \"Forest Console\");\r\n    ObjectType.BlackSlidingDoor = new ObjectType(\r\n        id++,\r\n        \"BlackSlidingDoor\",\r\n        140,\r\n        \"Black Sliding Door\"\r\n    );\r\n    ObjectType.RicoMessagePod = new ObjectType(id++, \"RicoMessagePod\", 141, \"Rico Message Pod\");\r\n    ObjectType.EnergyBarrier = new ObjectType(id++, \"EnergyBarrier\", 142, \"Energy Barrier\");\r\n    ObjectType.ForestRisingBridge = new ObjectType(\r\n        id++,\r\n        \"ForestRisingBridge\",\r\n        143,\r\n        \"Forest Rising Bridge\"\r\n    );\r\n    ObjectType.SwitchNoneDoor = new ObjectType(id++, \"SwitchNoneDoor\", 144, \"Switch (none door)\");\r\n    ObjectType.EnemyBoxGrey = new ObjectType(id++, \"EnemyBoxGrey\", 145, \"Enemy Box (Grey)\");\r\n    ObjectType.FixedTypeBox = new ObjectType(id++, \"FixedTypeBox\", 146, \"Fixed Type Box\");\r\n    ObjectType.EnemyBoxBrown = new ObjectType(id++, \"EnemyBoxBrown\", 147, \"Enemy Box (Brown)\");\r\n    ObjectType.EmptyTypeBox = new ObjectType(id++, \"EmptyTypeBox\", 149, \"Empty Type Box\");\r\n    ObjectType.LaserFenseEx = new ObjectType(id++, \"LaserFenseEx\", 150, \"Laser Fense Ex\");\r\n    ObjectType.LaserSquareFenceEx = new ObjectType(\r\n        id++,\r\n        \"LaserSquareFenceEx\",\r\n        151,\r\n        \"Laser Square Fence Ex\"\r\n    );\r\n    ObjectType.FloorPanel1 = new ObjectType(id++, \"FloorPanel1\", 192, \"Floor Panel 1\");\r\n    ObjectType.Caves4ButtonDoor = new ObjectType(\r\n        id++,\r\n        \"Caves4ButtonDoor\",\r\n        193,\r\n        \"Caves 4 Button door\"\r\n    );\r\n    ObjectType.CavesNormalDoor = new ObjectType(id++, \"CavesNormalDoor\", 194, \"Caves Normal door\");\r\n    ObjectType.CavesSmashingPillar = new ObjectType(\r\n        id++,\r\n        \"CavesSmashingPillar\",\r\n        195,\r\n        \"Caves Smashing Pillar\"\r\n    );\r\n    ObjectType.CavesSign1 = new ObjectType(id++, \"CavesSign1\", 196, \"Caves Sign 1\");\r\n    ObjectType.CavesSign2 = new ObjectType(id++, \"CavesSign2\", 197, \"Caves Sign 2\");\r\n    ObjectType.CavesSign3 = new ObjectType(id++, \"CavesSign3\", 198, \"Caves Sign 3\");\r\n    ObjectType.HexagalTank = new ObjectType(id++, \"HexagalTank\", 199, \"Hexagal Tank\");\r\n    ObjectType.BrownPlatform = new ObjectType(id++, \"BrownPlatform\", 200, \"Brown Platform\");\r\n    ObjectType.WarningLightObject = new ObjectType(\r\n        id++,\r\n        \"WarningLightObject\",\r\n        201,\r\n        \"Warning Light Object\"\r\n    );\r\n    ObjectType.Rainbow = new ObjectType(id++, \"Rainbow\", 203, \"Rainbow\");\r\n    ObjectType.FloatingJelifish = new ObjectType(\r\n        id++,\r\n        \"FloatingJelifish\",\r\n        204,\r\n        \"Floating Jelifish\"\r\n    );\r\n    ObjectType.FloatingDragonfly = new ObjectType(\r\n        id++,\r\n        \"FloatingDragonfly\",\r\n        205,\r\n        \"Floating Dragonfly\"\r\n    );\r\n    ObjectType.CavesSwitchDoor = new ObjectType(id++, \"CavesSwitchDoor\", 206, \"Caves Switch Door\");\r\n    ObjectType.RobotRechargeStation = new ObjectType(\r\n        id++,\r\n        \"RobotRechargeStation\",\r\n        207,\r\n        \"Robot Recharge Station\"\r\n    );\r\n    ObjectType.CavesCakeShop = new ObjectType(id++, \"CavesCakeShop\", 208, \"Caves Cake Shop\");\r\n    ObjectType.Caves1SmallRedRock = new ObjectType(\r\n        id++,\r\n        \"Caves1SmallRedRock\",\r\n        209,\r\n        \"Caves 1 Small Red Rock\"\r\n    );\r\n    ObjectType.Caves1MediumRedRock = new ObjectType(\r\n        id++,\r\n        \"Caves1MediumRedRock\",\r\n        210,\r\n        \"Caves 1 Medium Red Rock\"\r\n    );\r\n    ObjectType.Caves1LargeRedRock = new ObjectType(\r\n        id++,\r\n        \"Caves1LargeRedRock\",\r\n        211,\r\n        \"Caves 1 Large Red Rock\"\r\n    );\r\n    ObjectType.Caves2SmallRock1 = new ObjectType(\r\n        id++,\r\n        \"Caves2SmallRock1\",\r\n        212,\r\n        \"Caves 2 Small Rock 1\"\r\n    );\r\n    ObjectType.Caves2MediumRock1 = new ObjectType(\r\n        id++,\r\n        \"Caves2MediumRock1\",\r\n        213,\r\n        \"Caves 2 Medium Rock 1\"\r\n    );\r\n    ObjectType.Caves2LargeRock1 = new ObjectType(\r\n        id++,\r\n        \"Caves2LargeRock1\",\r\n        214,\r\n        \"Caves 2 Large Rock 1\"\r\n    );\r\n    ObjectType.Caves2SmallRock2 = new ObjectType(\r\n        id++,\r\n        \"Caves2SmallRock2\",\r\n        215,\r\n        \"Caves 2 Small Rock 2\"\r\n    );\r\n    ObjectType.Caves2MediumRock2 = new ObjectType(\r\n        id++,\r\n        \"Caves2MediumRock2\",\r\n        216,\r\n        \"Caves 2 Medium Rock 2\"\r\n    );\r\n    ObjectType.Caves2LargeRock2 = new ObjectType(\r\n        id++,\r\n        \"Caves2LargeRock2\",\r\n        217,\r\n        \"Caves 2 Large Rock 2\"\r\n    );\r\n    ObjectType.Caves3SmallRock = new ObjectType(id++, \"Caves3SmallRock\", 218, \"Caves 3 Small Rock\");\r\n    ObjectType.Caves3MediumRock = new ObjectType(\r\n        id++,\r\n        \"Caves3MediumRock\",\r\n        219,\r\n        \"Caves 3 Medium Rock\"\r\n    );\r\n    ObjectType.Caves3LargeRock = new ObjectType(id++, \"Caves3LargeRock\", 220, \"Caves 3 Large Rock\");\r\n    ObjectType.FloorPanel2 = new ObjectType(id++, \"FloorPanel2\", 222, \"Floor Panel 2\");\r\n    ObjectType.DestructableRockCaves1 = new ObjectType(\r\n        id++,\r\n        \"DestructableRockCaves1\",\r\n        223,\r\n        \"Destructable Rock (Caves 1)\"\r\n    );\r\n    ObjectType.DestructableRockCaves2 = new ObjectType(\r\n        id++,\r\n        \"DestructableRockCaves2\",\r\n        224,\r\n        \"Destructable Rock (Caves 2)\"\r\n    );\r\n    ObjectType.DestructableRockCaves3 = new ObjectType(\r\n        id++,\r\n        \"DestructableRockCaves3\",\r\n        225,\r\n        \"Destructable Rock (Caves 3)\"\r\n    );\r\n    ObjectType.MinesDoor = new ObjectType(id++, \"MinesDoor\", 256, \"Mines Door\");\r\n    ObjectType.FloorPanel3 = new ObjectType(id++, \"FloorPanel3\", 257, \"Floor Panel 3\");\r\n    ObjectType.MinesSwitchDoor = new ObjectType(id++, \"MinesSwitchDoor\", 258, \"Mines Switch Door\");\r\n    ObjectType.LargeCryoTube = new ObjectType(id++, \"LargeCryoTube\", 259, \"Large Cryo-Tube\");\r\n    ObjectType.ComputerLikeCalus = new ObjectType(\r\n        id++,\r\n        \"ComputerLikeCalus\",\r\n        260,\r\n        \"Computer (like calus)\"\r\n    );\r\n    ObjectType.GreenScreenOpeningAndClosing = new ObjectType(\r\n        id++,\r\n        \"GreenScreenOpeningAndClosing\",\r\n        261,\r\n        \"Green Screen opening and closing\"\r\n    );\r\n    ObjectType.FloatingRobot = new ObjectType(id++, \"FloatingRobot\", 262, \"Floating Robot\");\r\n    ObjectType.FloatingBlueLight = new ObjectType(\r\n        id++,\r\n        \"FloatingBlueLight\",\r\n        263,\r\n        \"Floating Blue Light\"\r\n    );\r\n    ObjectType.SelfDestructingObject1 = new ObjectType(\r\n        id++,\r\n        \"SelfDestructingObject1\",\r\n        264,\r\n        \"Self Destructing Object 1\"\r\n    );\r\n    ObjectType.SelfDestructingObject2 = new ObjectType(\r\n        id++,\r\n        \"SelfDestructingObject2\",\r\n        265,\r\n        \"Self Destructing Object 2\"\r\n    );\r\n    ObjectType.SelfDestructingObject3 = new ObjectType(\r\n        id++,\r\n        \"SelfDestructingObject3\",\r\n        266,\r\n        \"Self Destructing Object 3\"\r\n    );\r\n    ObjectType.SparkMachine = new ObjectType(id++, \"SparkMachine\", 267, \"Spark Machine\");\r\n    ObjectType.MinesLargeFlashingCrate = new ObjectType(\r\n        id++,\r\n        \"MinesLargeFlashingCrate\",\r\n        268,\r\n        \"Mines Large Flashing Crate\"\r\n    );\r\n    ObjectType.RuinsSeal = new ObjectType(id++, \"RuinsSeal\", 304, \"Ruins Seal\");\r\n    ObjectType.RuinsTeleporter = new ObjectType(id++, \"RuinsTeleporter\", 320, \"Ruins Teleporter\");\r\n    ObjectType.RuinsWarpSiteToSite = new ObjectType(\r\n        id++,\r\n        \"RuinsWarpSiteToSite\",\r\n        321,\r\n        \"Ruins Warp (Site to site)\"\r\n    );\r\n    ObjectType.RuinsSwitch = new ObjectType(id++, \"RuinsSwitch\", 322, \"Ruins Switch\");\r\n    ObjectType.FloorPanel4 = new ObjectType(id++, \"FloorPanel4\", 323, \"Floor Panel 4\");\r\n    ObjectType.Ruins1Door = new ObjectType(id++, \"Ruins1Door\", 324, \"Ruins 1 Door\");\r\n    ObjectType.Ruins3Door = new ObjectType(id++, \"Ruins3Door\", 325, \"Ruins 3 Door\");\r\n    ObjectType.Ruins2Door = new ObjectType(id++, \"Ruins2Door\", 326, \"Ruins 2 Door\");\r\n    ObjectType.Ruins11ButtonDoor = new ObjectType(\r\n        id++,\r\n        \"Ruins11ButtonDoor\",\r\n        327,\r\n        \"Ruins 1-1 Button Door\"\r\n    );\r\n    ObjectType.Ruins21ButtonDoor = new ObjectType(\r\n        id++,\r\n        \"Ruins21ButtonDoor\",\r\n        328,\r\n        \"Ruins 2-1 Button Door\"\r\n    );\r\n    ObjectType.Ruins31ButtonDoor = new ObjectType(\r\n        id++,\r\n        \"Ruins31ButtonDoor\",\r\n        329,\r\n        \"Ruins 3-1 Button Door\"\r\n    );\r\n    ObjectType.Ruins4ButtonDoor = new ObjectType(\r\n        id++,\r\n        \"Ruins4ButtonDoor\",\r\n        330,\r\n        \"Ruins 4-Button Door\"\r\n    );\r\n    ObjectType.Ruins2ButtonDoor = new ObjectType(\r\n        id++,\r\n        \"Ruins2ButtonDoor\",\r\n        331,\r\n        \"Ruins 2-Button Door\"\r\n    );\r\n    ObjectType.RuinsSensor = new ObjectType(id++, \"RuinsSensor\", 332, \"Ruins Sensor\");\r\n    ObjectType.RuinsFenceSwitch = new ObjectType(\r\n        id++,\r\n        \"RuinsFenceSwitch\",\r\n        333,\r\n        \"Ruins Fence Switch\"\r\n    );\r\n    ObjectType.RuinsLaserFence4x2 = new ObjectType(\r\n        id++,\r\n        \"RuinsLaserFence4x2\",\r\n        334,\r\n        \"Ruins Laser Fence 4x2\"\r\n    );\r\n    ObjectType.RuinsLaserFence6x2 = new ObjectType(\r\n        id++,\r\n        \"RuinsLaserFence6x2\",\r\n        335,\r\n        \"Ruins Laser Fence 6x2\"\r\n    );\r\n    ObjectType.RuinsLaserFence4x4 = new ObjectType(\r\n        id++,\r\n        \"RuinsLaserFence4x4\",\r\n        336,\r\n        \"Ruins Laser Fence 4x4\"\r\n    );\r\n    ObjectType.RuinsLaserFence6x4 = new ObjectType(\r\n        id++,\r\n        \"RuinsLaserFence6x4\",\r\n        337,\r\n        \"Ruins Laser Fence 6x4\"\r\n    );\r\n    ObjectType.RuinsPoisonBlob = new ObjectType(id++, \"RuinsPoisonBlob\", 338, \"Ruins poison Blob\");\r\n    ObjectType.RuinsPilarTrap = new ObjectType(id++, \"RuinsPilarTrap\", 339, \"Ruins Pilar Trap\");\r\n    ObjectType.PopupTrapNoTech = new ObjectType(\r\n        id++,\r\n        \"PopupTrapNoTech\",\r\n        340,\r\n        \"Popup Trap (No Tech)\"\r\n    );\r\n    ObjectType.RuinsCrystal = new ObjectType(id++, \"RuinsCrystal\", 341, \"Ruins Crystal\");\r\n    ObjectType.Monument = new ObjectType(id++, \"Monument\", 342, \"Monument\");\r\n    ObjectType.RuinsRock1 = new ObjectType(id++, \"RuinsRock1\", 345, \"Ruins Rock 1\");\r\n    ObjectType.RuinsRock2 = new ObjectType(id++, \"RuinsRock2\", 346, \"Ruins Rock 2\");\r\n    ObjectType.RuinsRock3 = new ObjectType(id++, \"RuinsRock3\", 347, \"Ruins Rock 3\");\r\n    ObjectType.RuinsRock4 = new ObjectType(id++, \"RuinsRock4\", 348, \"Ruins Rock 4\");\r\n    ObjectType.RuinsRock5 = new ObjectType(id++, \"RuinsRock5\", 349, \"Ruins Rock 5\");\r\n    ObjectType.RuinsRock6 = new ObjectType(id++, \"RuinsRock6\", 350, \"Ruins Rock 6\");\r\n    ObjectType.RuinsRock7 = new ObjectType(id++, \"RuinsRock7\", 351, \"Ruins Rock 7\");\r\n    ObjectType.Poison = new ObjectType(id++, \"Poison\", 352, \"Poison\");\r\n    ObjectType.FixedBoxTypeRuins = new ObjectType(\r\n        id++,\r\n        \"FixedBoxTypeRuins\",\r\n        353,\r\n        \"Fixed Box Type (Ruins)\"\r\n    );\r\n    ObjectType.RandomBoxTypeRuins = new ObjectType(\r\n        id++,\r\n        \"RandomBoxTypeRuins\",\r\n        354,\r\n        \"Random Box Type (Ruins)\"\r\n    );\r\n    ObjectType.EnemyTypeBoxYellow = new ObjectType(\r\n        id++,\r\n        \"EnemyTypeBoxYellow\",\r\n        355,\r\n        \"Enemy Type Box (Yellow)\"\r\n    );\r\n    ObjectType.EnemyTypeBoxBlue = new ObjectType(\r\n        id++,\r\n        \"EnemyTypeBoxBlue\",\r\n        356,\r\n        \"Enemy Type Box (Blue)\"\r\n    );\r\n    ObjectType.EmptyTypeBoxBlue = new ObjectType(\r\n        id++,\r\n        \"EmptyTypeBoxBlue\",\r\n        357,\r\n        \"Empty Type Box (Blue)\"\r\n    );\r\n    ObjectType.DestructableRock = new ObjectType(\r\n        id++,\r\n        \"DestructableRock\",\r\n        358,\r\n        \"Destructable Rock\"\r\n    );\r\n    ObjectType.PopupTrapsTechs = new ObjectType(\r\n        id++,\r\n        \"PopupTrapsTechs\",\r\n        359,\r\n        \"Popup Traps (techs)\"\r\n    );\r\n    ObjectType.FlyingWhiteBird = new ObjectType(id++, \"FlyingWhiteBird\", 368, \"Flying White Bird\");\r\n    ObjectType.Tower = new ObjectType(id++, \"Tower\", 369, \"Tower\");\r\n    ObjectType.FloatingRocks = new ObjectType(id++, \"FloatingRocks\", 370, \"Floating Rocks\");\r\n    ObjectType.FloatingSoul = new ObjectType(id++, \"FloatingSoul\", 371, \"Floating Soul\");\r\n    ObjectType.Butterfly = new ObjectType(id++, \"Butterfly\", 372, \"Butterfly\");\r\n    ObjectType.LobbyGameMenu = new ObjectType(id++, \"LobbyGameMenu\", 384, \"Lobby Game menu\");\r\n    ObjectType.LobbyWarpObject = new ObjectType(id++, \"LobbyWarpObject\", 385, \"Lobby Warp Object\");\r\n    ObjectType.Lobby1EventObjectDefaultTree = new ObjectType(\r\n        id++,\r\n        \"Lobby1EventObjectDefaultTree\",\r\n        386,\r\n        \"Lobby 1 Event Object (Default Tree)\"\r\n    );\r\n    ObjectType.UnknownItem387 = new ObjectType(id++, \"UnknownItem387\", 387, \"Unknown Item (387)\");\r\n    ObjectType.UnknownItem388 = new ObjectType(id++, \"UnknownItem388\", 388, \"Unknown Item (388)\");\r\n    ObjectType.UnknownItem389 = new ObjectType(id++, \"UnknownItem389\", 389, \"Unknown Item (389)\");\r\n    ObjectType.LobbyEventObjectStaticPumpkin = new ObjectType(\r\n        id++,\r\n        \"LobbyEventObjectStaticPumpkin\",\r\n        390,\r\n        \"Lobby Event Object (Static Pumpkin)\"\r\n    );\r\n    ObjectType.LobbyEventObject3ChristmasWindows = new ObjectType(\r\n        id++,\r\n        \"LobbyEventObject3ChristmasWindows\",\r\n        391,\r\n        \"Lobby Event Object (3 Christmas Windows)\"\r\n    );\r\n    ObjectType.LobbyEventObjectRedAndWhiteCurtain = new ObjectType(\r\n        id++,\r\n        \"LobbyEventObjectRedAndWhiteCurtain\",\r\n        392,\r\n        \"Lobby Event Object (Red and White Curtain)\"\r\n    );\r\n    ObjectType.UnknownItem393 = new ObjectType(id++, \"UnknownItem393\", 393, \"Unknown Item (393)\");\r\n    ObjectType.UnknownItem394 = new ObjectType(id++, \"UnknownItem394\", 394, \"Unknown Item (394)\");\r\n    ObjectType.LobbyFishTank = new ObjectType(id++, \"LobbyFishTank\", 395, \"Lobby Fish Tank\");\r\n    ObjectType.LobbyEventObjectButterflies = new ObjectType(\r\n        id++,\r\n        \"LobbyEventObjectButterflies\",\r\n        396,\r\n        \"Lobby Event Object (Butterflies)\"\r\n    );\r\n    ObjectType.UnknownItem400 = new ObjectType(id++, \"UnknownItem400\", 400, \"Unknown Item (400)\");\r\n    ObjectType.GreyWallLow = new ObjectType(id++, \"GreyWallLow\", 401, \"grey wall low\");\r\n    ObjectType.SpaceshipDoor = new ObjectType(id++, \"SpaceshipDoor\", 402, \"Spaceship Door\");\r\n    ObjectType.GreyWallHigh = new ObjectType(id++, \"GreyWallHigh\", 403, \"grey wall high\");\r\n    ObjectType.TempleNormalDoor = new ObjectType(\r\n        id++,\r\n        \"TempleNormalDoor\",\r\n        416,\r\n        \"Temple Normal Door\"\r\n    );\r\n    ObjectType.BreakableWallWallButUnbreakable = new ObjectType(\r\n        id++,\r\n        \"BreakableWallWallButUnbreakable\",\r\n        417,\r\n        '\"breakable wall wall, but unbreakable\"'\r\n    );\r\n    ObjectType.BrokenCilinderAndRubble = new ObjectType(\r\n        id++,\r\n        \"BrokenCilinderAndRubble\",\r\n        418,\r\n        \"Broken cilinder and rubble\"\r\n    );\r\n    ObjectType.ThreeBrokenWallPiecesOnFloor = new ObjectType(\r\n        id++,\r\n        \"ThreeBrokenWallPiecesOnFloor\",\r\n        419,\r\n        \"3 broken wall pieces on floor\"\r\n    );\r\n    ObjectType.HighBrickCilinder = new ObjectType(\r\n        id++,\r\n        \"HighBrickCilinder\",\r\n        420,\r\n        \"high brick cilinder\"\r\n    );\r\n    ObjectType.LyingCilinder = new ObjectType(id++, \"LyingCilinder\", 421, \"lying cilinder\");\r\n    ObjectType.BrickConeWithFlatTop = new ObjectType(\r\n        id++,\r\n        \"BrickConeWithFlatTop\",\r\n        422,\r\n        \"brick cone with flat top\"\r\n    );\r\n    ObjectType.BreakableTempleWall = new ObjectType(\r\n        id++,\r\n        \"BreakableTempleWall\",\r\n        423,\r\n        \"breakable temple wall\"\r\n    );\r\n    ObjectType.TempleMapDetect = new ObjectType(id++, \"TempleMapDetect\", 424, \"Temple Map Detect\");\r\n    ObjectType.SmallBrownBrickRisingBridge = new ObjectType(\r\n        id++,\r\n        \"SmallBrownBrickRisingBridge\",\r\n        425,\r\n        \"small brown brick rising bridge\"\r\n    );\r\n    ObjectType.LongRisingBridgeWithPinkHighEdges = new ObjectType(\r\n        id++,\r\n        \"LongRisingBridgeWithPinkHighEdges\",\r\n        426,\r\n        \"long rising bridge (with pink high edges)\"\r\n    );\r\n    ObjectType.FourSwitchTempleDoor = new ObjectType(\r\n        id++,\r\n        \"FourSwitchTempleDoor\",\r\n        427,\r\n        \"4 switch temple door\"\r\n    );\r\n    ObjectType.FourButtonSpaceshipDoor = new ObjectType(\r\n        id++,\r\n        \"FourButtonSpaceshipDoor\",\r\n        448,\r\n        \"4 button spaceship door\"\r\n    );\r\n    ObjectType.ItemBoxCca = new ObjectType(id++, \"ItemBoxCca\", 512, \"item box cca\");\r\n    ObjectType.TeleporterEp2 = new ObjectType(id++, \"TeleporterEp2\", 513, \"Teleporter (Ep 2)\");\r\n    ObjectType.CCADoor = new ObjectType(id++, \"CCADoor\", 514, \"CCA Door\");\r\n    ObjectType.SpecialBoxCCA = new ObjectType(id++, \"SpecialBoxCCA\", 515, \"Special Box CCA\");\r\n    ObjectType.BigCCADoor = new ObjectType(id++, \"BigCCADoor\", 516, \"Big CCA Door\");\r\n    ObjectType.BigCCADoorSwitch = new ObjectType(\r\n        id++,\r\n        \"BigCCADoorSwitch\",\r\n        517,\r\n        \"Big CCA Door Switch\"\r\n    );\r\n    ObjectType.LittleRock = new ObjectType(id++, \"LittleRock\", 518, \"Little Rock\");\r\n    ObjectType.Little3StoneWall = new ObjectType(\r\n        id++,\r\n        \"Little3StoneWall\",\r\n        519,\r\n        \"Little 3 Stone Wall\"\r\n    );\r\n    ObjectType.Medium3StoneWall = new ObjectType(\r\n        id++,\r\n        \"Medium3StoneWall\",\r\n        520,\r\n        \"Medium 3 stone wall\"\r\n    );\r\n    ObjectType.SpiderPlant = new ObjectType(id++, \"SpiderPlant\", 521, \"Spider Plant\");\r\n    ObjectType.CCAAreaTeleporter = new ObjectType(\r\n        id++,\r\n        \"CCAAreaTeleporter\",\r\n        522,\r\n        \"CCA Area Teleporter\"\r\n    );\r\n    ObjectType.UnknownItem523 = new ObjectType(id++, \"UnknownItem523\", 523, \"Unknown Item (523)\");\r\n    ObjectType.WhiteBird = new ObjectType(id++, \"WhiteBird\", 524, \"White Bird\");\r\n    ObjectType.OrangeBird = new ObjectType(id++, \"OrangeBird\", 525, \"Orange Bird\");\r\n    ObjectType.Saw = new ObjectType(id++, \"Saw\", 527, \"Saw\");\r\n    ObjectType.LaserDetect = new ObjectType(id++, \"LaserDetect\", 528, \"Laser Detect\");\r\n    ObjectType.UnknownItem529 = new ObjectType(id++, \"UnknownItem529\", 529, \"Unknown Item (529)\");\r\n    ObjectType.UnknownItem530 = new ObjectType(id++, \"UnknownItem530\", 530, \"Unknown Item (530)\");\r\n    ObjectType.Seagull = new ObjectType(id++, \"Seagull\", 531, \"Seagull\");\r\n    ObjectType.Fish = new ObjectType(id++, \"Fish\", 544, \"Fish\");\r\n    ObjectType.SeabedDoorWithBlueEdges = new ObjectType(\r\n        id++,\r\n        \"SeabedDoorWithBlueEdges\",\r\n        545,\r\n        \"Seabed Door (with blue edges)\"\r\n    );\r\n    ObjectType.SeabedDoorAlwaysOpenNonTriggerable = new ObjectType(\r\n        id++,\r\n        \"SeabedDoorAlwaysOpenNonTriggerable\",\r\n        546,\r\n        \"Seabed door (always open, non-triggerable)\"\r\n    );\r\n    ObjectType.LittleCryotube = new ObjectType(id++, \"LittleCryotube\", 547, \"Little Cryotube\");\r\n    ObjectType.WideGlassWallBreakable = new ObjectType(\r\n        id++,\r\n        \"WideGlassWallBreakable\",\r\n        548,\r\n        \"Wide Glass Wall (breakable)\"\r\n    );\r\n    ObjectType.BlueFloatingRobot = new ObjectType(\r\n        id++,\r\n        \"BlueFloatingRobot\",\r\n        549,\r\n        \"Blue floating robot\"\r\n    );\r\n    ObjectType.RedFloatingRobot = new ObjectType(\r\n        id++,\r\n        \"RedFloatingRobot\",\r\n        550,\r\n        \"Red floating robot\"\r\n    );\r\n    ObjectType.Dolphin = new ObjectType(id++, \"Dolphin\", 551, \"Dolphin\");\r\n    ObjectType.CaptureTrap = new ObjectType(id++, \"CaptureTrap\", 552, \"Capture Trap\");\r\n    ObjectType.VRLink = new ObjectType(id++, \"VRLink\", 553, \"VR link\");\r\n    ObjectType.UnknownItem576 = new ObjectType(id++, \"UnknownItem576\", 576, \"Unknown Item (576)\");\r\n    ObjectType.WarpInBarbaRayRoom = new ObjectType(\r\n        id++,\r\n        \"WarpInBarbaRayRoom\",\r\n        640,\r\n        \"Warp in Barba Ray Room\"\r\n    );\r\n    ObjectType.UnknownItem672 = new ObjectType(id++, \"UnknownItem672\", 672, \"Unknown Item (672)\");\r\n    ObjectType.GeeNest = new ObjectType(id++, \"GeeNest\", 688, \"Gee Nest\");\r\n    ObjectType.LabComputerConsole = new ObjectType(\r\n        id++,\r\n        \"LabComputerConsole\",\r\n        689,\r\n        \"Lab Computer Console\"\r\n    );\r\n    ObjectType.LabComputerConsoleGreenScreen = new ObjectType(\r\n        id++,\r\n        \"LabComputerConsoleGreenScreen\",\r\n        690,\r\n        \"Lab Computer Console (Green Screen)\"\r\n    );\r\n    ObjectType.ChairYelllowPillow = new ObjectType(\r\n        id++,\r\n        \"ChairYelllowPillow\",\r\n        691,\r\n        \"Chair, Yelllow Pillow\"\r\n    );\r\n    ObjectType.OrangeWallWithHoleInMiddle = new ObjectType(\r\n        id++,\r\n        \"OrangeWallWithHoleInMiddle\",\r\n        692,\r\n        \"orange wall with hole in middle\"\r\n    );\r\n    ObjectType.GreyWallWithHoleInMiddle = new ObjectType(\r\n        id++,\r\n        \"GreyWallWithHoleInMiddle\",\r\n        693,\r\n        \"grey wall with hole in middle\"\r\n    );\r\n    ObjectType.LongTable = new ObjectType(id++, \"LongTable\", 694, \"long table\");\r\n    ObjectType.GBAStation = new ObjectType(id++, \"GBAStation\", 695, \"GBA Station\");\r\n    ObjectType.TalkLinkToSupport = new ObjectType(\r\n        id++,\r\n        \"TalkLinkToSupport\",\r\n        696,\r\n        \"Talk (link to support)\"\r\n    );\r\n    ObjectType.InstaWarp = new ObjectType(id++, \"InstaWarp\", 697, \"insta-warp\");\r\n    ObjectType.LabInvisibleObject = new ObjectType(\r\n        id++,\r\n        \"LabInvisibleObject\",\r\n        698,\r\n        \"Lab Invisible Object\"\r\n    );\r\n    ObjectType.LabGlassWindowDoor = new ObjectType(\r\n        id++,\r\n        \"LabGlassWindowDoor\",\r\n        699,\r\n        \"Lab Glass window Door\"\r\n    );\r\n    ObjectType.UnknownItem700 = new ObjectType(id++, \"UnknownItem700\", 700, \"Unknown Item (700)\");\r\n    ObjectType.LabCelingWarp = new ObjectType(id++, \"LabCelingWarp\", 701, \"Lab Celing Warp\");\r\n    ObjectType.Ep4LightSource = new ObjectType(id++, \"Ep4LightSource\", 768, \"Ep4 Light Source\");\r\n    ObjectType.Cacti = new ObjectType(id++, \"Cacti\", 769, \"cacti\");\r\n    ObjectType.BigBrownRock = new ObjectType(id++, \"BigBrownRock\", 770, \"Big Brown Rock\");\r\n    ObjectType.BreakableBrownRock = new ObjectType(\r\n        id++,\r\n        \"BreakableBrownRock\",\r\n        771,\r\n        \"Breakable Brown Rock\"\r\n    );\r\n    ObjectType.UnknownItem832 = new ObjectType(id++, \"UnknownItem832\", 832, \"Unknown Item (832)\");\r\n    ObjectType.UnknownItem833 = new ObjectType(id++, \"UnknownItem833\", 833, \"Unknown Item (833)\");\r\n    ObjectType.PoisonPlant = new ObjectType(id++, \"PoisonPlant\", 896, \"Poison Plant\");\r\n    ObjectType.UnknownItem897 = new ObjectType(id++, \"UnknownItem897\", 897, \"Unknown Item (897)\");\r\n    ObjectType.UnknownItem898 = new ObjectType(id++, \"UnknownItem898\", 898, \"Unknown Item (898)\");\r\n    ObjectType.OozingDesertPlant = new ObjectType(\r\n        id++,\r\n        \"OozingDesertPlant\",\r\n        899,\r\n        \"Oozing Desert Plant\"\r\n    );\r\n    ObjectType.UnknownItem901 = new ObjectType(id++, \"UnknownItem901\", 901, \"Unknown Item (901)\");\r\n    ObjectType.BigBlackRocks = new ObjectType(id++, \"BigBlackRocks\", 902, \"big black rocks\");\r\n    ObjectType.UnknownItem903 = new ObjectType(id++, \"UnknownItem903\", 903, \"Unknown Item (903)\");\r\n    ObjectType.UnknownItem904 = new ObjectType(id++, \"UnknownItem904\", 904, \"Unknown Item (904)\");\r\n    ObjectType.UnknownItem905 = new ObjectType(id++, \"UnknownItem905\", 905, \"Unknown Item (905)\");\r\n    ObjectType.UnknownItem906 = new ObjectType(id++, \"UnknownItem906\", 906, \"Unknown Item (906)\");\r\n    ObjectType.FallingRock = new ObjectType(id++, \"FallingRock\", 907, \"Falling Rock\");\r\n    ObjectType.DesertPlantHasCollision = new ObjectType(\r\n        id++,\r\n        \"DesertPlantHasCollision\",\r\n        908,\r\n        \"Desert Plant (has collision)\"\r\n    );\r\n    ObjectType.DesertFixedTypeBoxBreakableCrystals = new ObjectType(\r\n        id++,\r\n        \"DesertFixedTypeBoxBreakableCrystals\",\r\n        909,\r\n        \"Desert Fixed Type Box (Breakable Crystals)\"\r\n    );\r\n    ObjectType.UnknownItem910 = new ObjectType(id++, \"UnknownItem910\", 910, \"Unknown Item (910)\");\r\n    ObjectType.BeeHive = new ObjectType(id++, \"BeeHive\", 911, \"Bee Hive\");\r\n    ObjectType.UnknownItem912 = new ObjectType(id++, \"UnknownItem912\", 912, \"Unknown Item (912)\");\r\n    ObjectType.Heat = new ObjectType(id++, \"Heat\", 913, \"Heat\");\r\n    ObjectType.TopOfSaintMillionEgg = new ObjectType(\r\n        id++,\r\n        \"TopOfSaintMillionEgg\",\r\n        960,\r\n        \"Top of saint million egg\"\r\n    );\r\n    ObjectType.UnknownItem961 = new ObjectType(id++, \"UnknownItem961\", 961, \"Unknown Item (961)\");\r\n})();\r\n","import { computed, observable, action } from \"mobx\";\r\nimport { DatNpc, DatObject, DatUnknown } from \"../data_formats/parsing/quest/dat\";\r\nimport { Vec3 } from \"../data_formats/vector\";\r\nimport { enum_values } from \"../enums\";\r\nimport { ItemType } from \"./items\";\r\nimport { NpcType } from \"./NpcType\";\r\nimport { ObjectType } from \"./ObjectType\";\r\n\r\nexport * from \"./items\";\r\nexport * from \"./NpcType\";\r\nexport * from \"./ObjectType\";\r\n\r\nexport const RARE_ENEMY_PROB = 1 / 512;\r\nexport const KONDRIEU_PROB = 1 / 10;\r\n\r\nexport enum Server {\r\n    Ephinea = \"Ephinea\",\r\n}\r\n\r\nexport const Servers: Server[] = enum_values(Server);\r\n\r\nexport enum Episode {\r\n    I = 1,\r\n    II = 2,\r\n    IV = 4,\r\n}\r\n\r\nexport const Episodes: Episode[] = enum_values(Episode);\r\n\r\nexport function check_episode(episode: Episode): void {\r\n    if (!Episode[episode]) {\r\n        throw new Error(`Invalid episode ${episode}.`);\r\n    }\r\n}\r\n\r\nexport enum SectionId {\r\n    Viridia,\r\n    Greenill,\r\n    Skyly,\r\n    Bluefull,\r\n    Purplenum,\r\n    Pinkal,\r\n    Redria,\r\n    Oran,\r\n    Yellowboze,\r\n    Whitill,\r\n}\r\n\r\nexport const SectionIds: SectionId[] = enum_values(SectionId);\r\n\r\nexport enum Difficulty {\r\n    Normal,\r\n    Hard,\r\n    VHard,\r\n    Ultimate,\r\n}\r\n\r\nexport const Difficulties: Difficulty[] = enum_values(Difficulty);\r\n\r\nexport class Section {\r\n    readonly id: number;\r\n    readonly position: Vec3;\r\n    readonly y_axis_rotation: number;\r\n    readonly sin_y_axis_rotation: number;\r\n    readonly cos_y_axis_rotation: number;\r\n\r\n    constructor(id: number, position: Vec3, y_axis_rotation: number) {\r\n        if (!Number.isInteger(id) || id < -1)\r\n            throw new Error(`Expected id to be an integer greater than or equal to -1, got ${id}.`);\r\n        if (!position) throw new Error(\"position is required.\");\r\n        if (typeof y_axis_rotation !== \"number\") throw new Error(\"y_axis_rotation is required.\");\r\n\r\n        this.id = id;\r\n        this.position = position;\r\n        this.y_axis_rotation = y_axis_rotation;\r\n        this.sin_y_axis_rotation = Math.sin(this.y_axis_rotation);\r\n        this.cos_y_axis_rotation = Math.cos(this.y_axis_rotation);\r\n    }\r\n}\r\n\r\nexport class Quest {\r\n    @observable id?: number;\r\n    @observable name: string;\r\n    @observable short_description: string;\r\n    @observable long_description: string;\r\n    @observable episode: Episode;\r\n    @observable area_variants: AreaVariant[];\r\n    @observable objects: QuestObject[];\r\n    @observable npcs: QuestNpc[];\r\n    /**\r\n     * (Partial) raw DAT data that can't be parsed yet by Phantasmal.\r\n     */\r\n    dat_unknowns: DatUnknown[];\r\n    /**\r\n     * (Partial) raw BIN data that can't be parsed yet by Phantasmal.\r\n     */\r\n    bin_data: ArrayBuffer;\r\n\r\n    constructor(\r\n        id: number | undefined,\r\n        name: string,\r\n        short_description: string,\r\n        long_description: string,\r\n        episode: Episode,\r\n        area_variants: AreaVariant[],\r\n        objects: QuestObject[],\r\n        npcs: QuestNpc[],\r\n        dat_unknowns: DatUnknown[],\r\n        bin_data: ArrayBuffer\r\n    ) {\r\n        if (id != null && (!Number.isInteger(id) || id < 0))\r\n            throw new Error(\"id should be undefined or a non-negative integer.\");\r\n        check_episode(episode);\r\n        if (!objects || !(objects instanceof Array)) throw new Error(\"objs is required.\");\r\n        if (!npcs || !(npcs instanceof Array)) throw new Error(\"npcs is required.\");\r\n\r\n        this.id = id;\r\n        this.name = name;\r\n        this.short_description = short_description;\r\n        this.long_description = long_description;\r\n        this.episode = episode;\r\n        this.area_variants = area_variants;\r\n        this.objects = objects;\r\n        this.npcs = npcs;\r\n        this.dat_unknowns = dat_unknowns;\r\n        this.bin_data = bin_data;\r\n    }\r\n}\r\n\r\nexport interface EntityType {\r\n    readonly id: number;\r\n    readonly code: string;\r\n    readonly name: string;\r\n}\r\n\r\n/**\r\n * Abstract class from which QuestNpc and QuestObject derive.\r\n */\r\nexport class QuestEntity<Type extends EntityType = EntityType> {\r\n    readonly type: Type;\r\n\r\n    @observable area_id: number;\r\n\r\n    private _section_id: number;\r\n\r\n    @computed get section_id(): number {\r\n        return this.section ? this.section.id : this._section_id;\r\n    }\r\n\r\n    @observable.ref section?: Section;\r\n\r\n    /**\r\n     * World position\r\n     */\r\n    @observable.ref position: Vec3;\r\n\r\n    @observable.ref rotation: Vec3;\r\n\r\n    /**\r\n     * Section-relative position\r\n     */\r\n    @computed get section_position(): Vec3 {\r\n        let { x, y, z } = this.position;\r\n\r\n        if (this.section) {\r\n            const rel_x = x - this.section.position.x;\r\n            const rel_y = y - this.section.position.y;\r\n            const rel_z = z - this.section.position.z;\r\n            const sin = -this.section.sin_y_axis_rotation;\r\n            const cos = this.section.cos_y_axis_rotation;\r\n            const rot_x = cos * rel_x + sin * rel_z;\r\n            const rot_z = -sin * rel_x + cos * rel_z;\r\n            x = rot_x;\r\n            y = rel_y;\r\n            z = rot_z;\r\n        }\r\n\r\n        return new Vec3(x, y, z);\r\n    }\r\n\r\n    set section_position(sec_pos: Vec3) {\r\n        let { x: rel_x, y: rel_y, z: rel_z } = sec_pos;\r\n\r\n        if (this.section) {\r\n            const sin = -this.section.sin_y_axis_rotation;\r\n            const cos = this.section.cos_y_axis_rotation;\r\n            const rot_x = cos * rel_x - sin * rel_z;\r\n            const rot_z = sin * rel_x + cos * rel_z;\r\n            const x = rot_x + this.section.position.x;\r\n            const y = rel_y + this.section.position.y;\r\n            const z = rot_z + this.section.position.z;\r\n            this.position = new Vec3(x, y, z);\r\n        }\r\n    }\r\n\r\n    constructor(type: Type, area_id: number, section_id: number, position: Vec3, rotation: Vec3) {\r\n        if (Object.getPrototypeOf(this) === Object.getPrototypeOf(QuestEntity))\r\n            throw new Error(\"Abstract class should not be instantiated directly.\");\r\n        if (!type) throw new Error(\"type is required.\");\r\n        if (!Number.isInteger(area_id) || area_id < 0)\r\n            throw new Error(`Expected area_id to be a non-negative integer, got ${area_id}.`);\r\n        if (!Number.isInteger(section_id) || section_id < 0)\r\n            throw new Error(`Expected section_id to be a non-negative integer, got ${section_id}.`);\r\n        if (!position) throw new Error(\"position is required.\");\r\n        if (!rotation) throw new Error(\"rotation is required.\");\r\n\r\n        this.type = type;\r\n        this.area_id = area_id;\r\n        this._section_id = section_id;\r\n        this.position = position;\r\n        this.rotation = rotation;\r\n    }\r\n\r\n    @action\r\n    set_position_and_section(position: Vec3, section?: Section): void {\r\n        this.position = position;\r\n        this.section = section;\r\n    }\r\n}\r\n\r\nexport class QuestObject extends QuestEntity<ObjectType> {\r\n    @observable type: ObjectType;\r\n    /**\r\n     * The raw data from a DAT file.\r\n     */\r\n    dat: DatObject;\r\n\r\n    constructor(\r\n        area_id: number,\r\n        section_id: number,\r\n        position: Vec3,\r\n        rotation: Vec3,\r\n        type: ObjectType,\r\n        dat: DatObject\r\n    ) {\r\n        super(type, area_id, section_id, position, rotation);\r\n\r\n        this.type = type;\r\n        this.dat = dat;\r\n    }\r\n}\r\n\r\nexport class QuestNpc extends QuestEntity<NpcType> {\r\n    @observable type: NpcType;\r\n    /**\r\n     * The raw data from a DAT file.\r\n     */\r\n    dat: DatNpc;\r\n\r\n    constructor(\r\n        area_id: number,\r\n        section_id: number,\r\n        position: Vec3,\r\n        rotation: Vec3,\r\n        type: NpcType,\r\n        dat: DatNpc\r\n    ) {\r\n        super(type, area_id, section_id, position, rotation);\r\n\r\n        if (!type) throw new Error(\"type is required.\");\r\n\r\n        this.type = type;\r\n        this.dat = dat;\r\n    }\r\n}\r\n\r\nexport class Area {\r\n    id: number;\r\n    name: string;\r\n    order: number;\r\n    area_variants: AreaVariant[];\r\n\r\n    constructor(id: number, name: string, order: number, area_variants: AreaVariant[]) {\r\n        if (!Number.isInteger(id) || id < 0)\r\n            throw new Error(`Expected id to be a non-negative integer, got ${id}.`);\r\n        if (!name) throw new Error(\"name is required.\");\r\n        if (!area_variants) throw new Error(\"area_variants is required.\");\r\n\r\n        this.id = id;\r\n        this.name = name;\r\n        this.order = order;\r\n        this.area_variants = area_variants;\r\n    }\r\n}\r\n\r\nexport class AreaVariant {\r\n    @observable.shallow sections: Section[] = [];\r\n\r\n    constructor(public id: number, public area: Area) {\r\n        if (!Number.isInteger(id) || id < 0)\r\n            throw new Error(`Expected id to be a non-negative integer, got ${id}.`);\r\n    }\r\n}\r\n\r\ntype ItemDrop = {\r\n    item_type: ItemType;\r\n    anything_rate: number;\r\n    rare_rate: number;\r\n};\r\n\r\nexport class EnemyDrop implements ItemDrop {\r\n    readonly rate: number;\r\n\r\n    constructor(\r\n        readonly difficulty: Difficulty,\r\n        readonly section_id: SectionId,\r\n        readonly npc_type: NpcType,\r\n        readonly item_type: ItemType,\r\n        readonly anything_rate: number,\r\n        readonly rare_rate: number\r\n    ) {\r\n        this.rate = anything_rate * rare_rate;\r\n    }\r\n}\r\n\r\nexport class HuntMethod {\r\n    readonly id: string;\r\n    readonly name: string;\r\n    readonly episode: Episode;\r\n    readonly quest: SimpleQuest;\r\n    readonly enemy_counts: Map<NpcType, number>;\r\n    /**\r\n     * The time it takes to complete the quest in hours.\r\n     */\r\n    readonly default_time: number;\r\n    /**\r\n     * The time it takes to complete the quest in hours as specified by the user.\r\n     */\r\n    @observable user_time?: number;\r\n\r\n    @computed get time(): number {\r\n        return this.user_time != null ? this.user_time : this.default_time;\r\n    }\r\n\r\n    constructor(id: string, name: string, quest: SimpleQuest, default_time: number) {\r\n        if (!id) throw new Error(\"id is required.\");\r\n        if (default_time <= 0) throw new Error(\"default_time must be greater than zero.\");\r\n        if (!name) throw new Error(\"name is required.\");\r\n        if (!quest) throw new Error(\"quest is required.\");\r\n\r\n        this.id = id;\r\n        this.name = name;\r\n        this.episode = quest.episode;\r\n        this.quest = quest;\r\n        this.enemy_counts = quest.enemy_counts;\r\n        this.default_time = default_time;\r\n    }\r\n}\r\n\r\nexport class SimpleQuest {\r\n    constructor(\r\n        public readonly id: number,\r\n        public readonly name: string,\r\n        public readonly episode: Episode,\r\n        public readonly enemy_counts: Map<NpcType, number>\r\n    ) {\r\n        if (!id) throw new Error(\"id is required.\");\r\n        if (!name) throw new Error(\"name is required.\");\r\n        if (!enemy_counts) throw new Error(\"enemyCounts is required.\");\r\n    }\r\n}\r\n\r\nexport class PlayerModel {\r\n    constructor(\r\n        public readonly name: string,\r\n        public readonly head_style_count: number,\r\n        public readonly hair_styles_count: number,\r\n        public readonly hair_styles_with_accessory: Set<number>\r\n    ) {}\r\n}\r\n\r\nexport class PlayerAnimation {\r\n    constructor(public readonly id: number, public readonly name: string) {}\r\n}\r\n","import { observable, computed } from \"mobx\";\r\nimport { defer } from \"lodash\";\r\n\r\nexport enum LoadableState {\r\n    /**\r\n     * No attempt has been made to load data.\r\n     */\r\n    Uninitialized,\r\n\r\n    /**\r\n     * The first data load is underway.\r\n     */\r\n    Initializing,\r\n\r\n    /**\r\n     * Data was loaded at least once. The most recent load was successful.\r\n     */\r\n    Nominal,\r\n\r\n    /**\r\n     * Data was loaded at least once. The most recent load failed.\r\n     */\r\n    Error,\r\n\r\n    /**\r\n     * Data was loaded at least once. Another data load is underway.\r\n     */\r\n    Reloading,\r\n}\r\n\r\n/**\r\n * Represents a value that can be loaded asynchronously.\r\n * [state]{@link Loadable#state} represents the current state of this Loadable's value.\r\n */\r\nexport class Loadable<T> {\r\n    @observable private _value: T;\r\n    @observable private _promise: Promise<T> = new Promise(resolve => resolve(this._value));\r\n    @observable private _state = LoadableState.Uninitialized;\r\n    private _load?: () => Promise<T>;\r\n    @observable private _error?: Error;\r\n\r\n    constructor(initial_value: T, load?: () => Promise<T>) {\r\n        this._value = initial_value;\r\n        this._load = load;\r\n    }\r\n\r\n    /**\r\n     * When this Loadable is uninitialized, a load will be triggered.\r\n     * Will return the initial value until a load has succeeded.\r\n     */\r\n    @computed get value(): T {\r\n        // Load value on first use and return initial placeholder value.\r\n        if (this._state === LoadableState.Uninitialized) {\r\n            // Defer loading value to avoid side effects in computed value.\r\n            defer(() => this.load_value());\r\n        }\r\n\r\n        return this._value;\r\n    }\r\n\r\n    set value(value: T) {\r\n        this._value = value;\r\n    }\r\n\r\n    /**\r\n     * This property returns valid data as soon as possible.\r\n     * If the Loadable is uninitialized a data load will be triggered, otherwise the current value will be returned.\r\n     */\r\n    get promise(): Promise<T> {\r\n        // Load value on first use.\r\n        if (this._state === LoadableState.Uninitialized) {\r\n            return this.load_value();\r\n        } else {\r\n            return this._promise;\r\n        }\r\n    }\r\n\r\n    @computed get state(): LoadableState {\r\n        return this._state;\r\n    }\r\n\r\n    /**\r\n     * @returns true if the initial data load has happened. It may or may not have succeeded.\r\n     * Check [error]{@link Loadable#error} to know whether an error occurred.\r\n     */\r\n    @computed get is_initialized(): boolean {\r\n        return this._state !== LoadableState.Uninitialized;\r\n    }\r\n\r\n    /**\r\n     * @returns true if a data load is underway. This may be the initializing load or a later load.\r\n     */\r\n    @computed get is_loading(): boolean {\r\n        switch (this._state) {\r\n            case LoadableState.Initializing:\r\n            case LoadableState.Reloading:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @returns an {@link Error} if an error occurred during the most recent data load.\r\n     */\r\n    @computed get error(): Error | undefined {\r\n        return this._error;\r\n    }\r\n\r\n    /**\r\n     * Load the data. Initializes the Loadable if it is uninitialized.\r\n     */\r\n    load(): Promise<T> {\r\n        return this.load_value();\r\n    }\r\n\r\n    private async load_value(): Promise<T> {\r\n        if (this.is_loading) return this._promise;\r\n\r\n        this._state = LoadableState.Initializing;\r\n\r\n        try {\r\n            if (this._load) {\r\n                this._promise = this._load();\r\n                this._value = await this._promise;\r\n            }\r\n\r\n            this._state = LoadableState.Nominal;\r\n            this._error = undefined;\r\n            return this._value;\r\n        } catch (e) {\r\n            this._state = LoadableState.Error;\r\n            this._error = e;\r\n            throw e;\r\n        }\r\n    }\r\n}\r\n","import { observable } from \"mobx\";\r\nimport { Server } from \"../domain\";\r\n\r\nclass ApplicationStore {\r\n    @observable current_server: Server = Server.Ephinea;\r\n    @observable current_tool: string = this.init_tool();\r\n\r\n    private key_event_handlers = new Map<string, (e: KeyboardEvent) => void>();\r\n\r\n    on_global_keyup = (tool: string, handler: (e: KeyboardEvent) => void) => {\r\n        this.key_event_handlers.set(tool, handler);\r\n    };\r\n\r\n    dispatch_global_keyup = (e: KeyboardEvent) => {\r\n        const handler = this.key_event_handlers.get(this.current_tool);\r\n\r\n        if (handler) {\r\n            handler(e);\r\n        }\r\n    };\r\n\r\n    private init_tool(): string {\r\n        const param = window.location.search\r\n            .slice(1)\r\n            .split(\"&\")\r\n            .find(p => p.startsWith(\"tool=\"));\r\n        return param ? param.slice(5) : \"viewer\";\r\n    }\r\n}\r\n\r\nexport const application_store = new ApplicationStore();\r\n","import { computed } from \"mobx\";\r\nimport { Server } from \"../domain\";\r\nimport { application_store } from \"./ApplicationStore\";\r\nimport { EnumMap } from \"../enums\";\r\n\r\n/**\r\n * Map with a guaranteed value per server.\r\n */\r\nexport class ServerMap<V> extends EnumMap<Server, V> {\r\n    constructor(initial_value: (server: Server) => V) {\r\n        super(Server, initial_value);\r\n    }\r\n\r\n    /**\r\n     * @returns the value for the current server as set in {@link application_store}.\r\n     */\r\n    @computed get current(): V {\r\n        return this.get(application_store.current_server);\r\n    }\r\n}\r\n","import { observable } from \"mobx\";\r\nimport {\r\n    ItemType,\r\n    Server,\r\n    WeaponItemType,\r\n    ArmorItemType,\r\n    ShieldItemType,\r\n    ToolItemType,\r\n    UnitItemType,\r\n} from \"../domain\";\r\nimport { Loadable } from \"../Loadable\";\r\nimport { ServerMap } from \"./ServerMap\";\r\nimport { ItemTypeDto } from \"../dto\";\r\n\r\nexport class ItemTypeStore {\r\n    private id_to_item_type: ItemType[] = [];\r\n\r\n    @observable item_types: ItemType[] = [];\r\n\r\n    get_by_id(id: number): ItemType | undefined {\r\n        return this.id_to_item_type[id];\r\n    }\r\n\r\n    load = async (server: Server): Promise<ItemTypeStore> => {\r\n        const response = await fetch(\r\n            `${process.env.PUBLIC_URL}/itemTypes.${Server[server].toLowerCase()}.json`\r\n        );\r\n        const data: ItemTypeDto[] = await response.json();\r\n\r\n        const item_types = new Array<ItemType>();\r\n\r\n        for (const item_type_dto of data) {\r\n            let item_type: ItemType;\r\n\r\n            switch (item_type_dto.class) {\r\n                case \"weapon\":\r\n                    item_type = new WeaponItemType(\r\n                        item_type_dto.id,\r\n                        item_type_dto.name,\r\n                        item_type_dto.minAtp,\r\n                        item_type_dto.maxAtp,\r\n                        item_type_dto.ata,\r\n                        item_type_dto.maxGrind,\r\n                        item_type_dto.requiredAtp\r\n                    );\r\n                    break;\r\n                case \"armor\":\r\n                    item_type = new ArmorItemType(\r\n                        item_type_dto.id,\r\n                        item_type_dto.name,\r\n                        item_type_dto.atp,\r\n                        item_type_dto.ata,\r\n                        item_type_dto.minEvp,\r\n                        item_type_dto.maxEvp,\r\n                        item_type_dto.minDfp,\r\n                        item_type_dto.maxDfp,\r\n                        item_type_dto.mst,\r\n                        item_type_dto.hp,\r\n                        item_type_dto.lck\r\n                    );\r\n                    break;\r\n                case \"shield\":\r\n                    item_type = new ShieldItemType(\r\n                        item_type_dto.id,\r\n                        item_type_dto.name,\r\n                        item_type_dto.atp,\r\n                        item_type_dto.ata,\r\n                        item_type_dto.minEvp,\r\n                        item_type_dto.maxEvp,\r\n                        item_type_dto.minDfp,\r\n                        item_type_dto.maxDfp,\r\n                        item_type_dto.mst,\r\n                        item_type_dto.hp,\r\n                        item_type_dto.lck\r\n                    );\r\n                    break;\r\n                case \"unit\":\r\n                    item_type = new UnitItemType(item_type_dto.id, item_type_dto.name);\r\n                    break;\r\n                case \"tool\":\r\n                    item_type = new ToolItemType(item_type_dto.id, item_type_dto.name);\r\n                    break;\r\n                default:\r\n                    continue;\r\n            }\r\n\r\n            this.id_to_item_type[item_type.id] = item_type;\r\n            item_types.push(item_type);\r\n        }\r\n\r\n        this.item_types = item_types;\r\n\r\n        return this;\r\n    };\r\n}\r\n\r\nexport const item_type_stores: ServerMap<Loadable<ItemTypeStore>> = new ServerMap(server => {\r\n    const store = new ItemTypeStore();\r\n    return new Loadable(store, () => store.load(server));\r\n});\r\n","import { observable, IObservableArray, computed } from \"mobx\";\r\nimport { WeaponItem, WeaponItemType, ArmorItemType, ShieldItemType } from \"../domain\";\r\nimport { item_type_stores } from \"./ItemTypeStore\";\r\n\r\nconst NORMAL_DAMAGE_FACTOR = 0.2 * 0.9;\r\nconst HEAVY_DAMAGE_FACTOR = NORMAL_DAMAGE_FACTOR * 1.89;\r\n// const SAC_DAMAGE_FACTOR = NORMAL_DAMAGE_FACTOR * 3.32;\r\n// const VJAYA_DAMAGE_FACTOR = NORMAL_DAMAGE_FACTOR * 5.56;\r\n// const CRIT_FACTOR = 1.5;\r\n\r\nclass Weapon {\r\n    private readonly store: DpsCalcStore;\r\n    readonly item: WeaponItem;\r\n\r\n    @computed get shifta_atp(): number {\r\n        if (this.item.type.min_atp === this.item.type.max_atp) {\r\n            return 0;\r\n        } else {\r\n            return this.item.type.max_atp * this.store.shifta_factor;\r\n        }\r\n    }\r\n\r\n    @computed get min_atp(): number {\r\n        return this.item.type.min_atp + this.item.grind_atp;\r\n    }\r\n\r\n    @computed get max_atp(): number {\r\n        return this.item.type.max_atp + this.item.grind_atp + this.shifta_atp;\r\n    }\r\n\r\n    @computed get final_min_atp(): number {\r\n        return (\r\n            this.min_atp +\r\n            this.store.armor_atp +\r\n            this.store.shield_atp +\r\n            this.store.base_atp +\r\n            this.store.base_shifta_atp\r\n        );\r\n    }\r\n\r\n    @computed get final_max_atp(): number {\r\n        return (\r\n            this.max_atp +\r\n            this.store.armor_atp +\r\n            this.store.shield_atp +\r\n            this.store.base_atp +\r\n            this.store.base_shifta_atp\r\n        );\r\n    }\r\n\r\n    @computed get min_normal_damage(): number {\r\n        return (this.final_min_atp - this.store.enemy_dfp) * NORMAL_DAMAGE_FACTOR;\r\n    }\r\n\r\n    @computed get max_normal_damage(): number {\r\n        return (this.final_max_atp - this.store.enemy_dfp) * NORMAL_DAMAGE_FACTOR;\r\n    }\r\n\r\n    @computed get avg_normal_damage(): number {\r\n        return (this.min_normal_damage + this.max_normal_damage) / 2;\r\n    }\r\n\r\n    @computed get min_heavy_damage(): number {\r\n        return (this.final_min_atp - this.store.enemy_dfp) * HEAVY_DAMAGE_FACTOR;\r\n    }\r\n\r\n    @computed get max_heavy_damage(): number {\r\n        return (this.final_max_atp - this.store.enemy_dfp) * HEAVY_DAMAGE_FACTOR;\r\n    }\r\n\r\n    @computed get avg_heavy_damage(): number {\r\n        return (this.min_heavy_damage + this.max_heavy_damage) / 2;\r\n    }\r\n\r\n    constructor(store: DpsCalcStore, item: WeaponItem) {\r\n        this.store = store;\r\n        this.item = item;\r\n    }\r\n}\r\n\r\nclass DpsCalcStore {\r\n    @computed get weapon_types(): WeaponItemType[] {\r\n        return item_type_stores.current.value.item_types.filter(\r\n            it => it instanceof WeaponItemType\r\n        ) as WeaponItemType[];\r\n    }\r\n\r\n    @computed get armor_types(): ArmorItemType[] {\r\n        return item_type_stores.current.value.item_types.filter(\r\n            it => it instanceof ArmorItemType\r\n        ) as ArmorItemType[];\r\n    }\r\n\r\n    @computed get shield_types(): ShieldItemType[] {\r\n        return item_type_stores.current.value.item_types.filter(\r\n            it => it instanceof ShieldItemType\r\n        ) as ShieldItemType[];\r\n    }\r\n\r\n    //\r\n    // Character Details\r\n    //\r\n\r\n    @observable char_atp: number = 0;\r\n    @observable mag_pow: number = 0;\r\n    @computed get armor_atp(): number {\r\n        return this.armor_type ? this.armor_type.atp : 0;\r\n    }\r\n    @computed get shield_atp(): number {\r\n        return this.shield_type ? this.shield_type.atp : 0;\r\n    }\r\n    @observable shifta_lvl: number = 0;\r\n\r\n    @computed get base_atp(): number {\r\n        return this.char_atp + 2 * this.mag_pow;\r\n    }\r\n\r\n    @computed get shifta_factor(): number {\r\n        return this.shifta_lvl ? 0.013 * (this.shifta_lvl - 1) + 0.1 : 0;\r\n    }\r\n\r\n    @computed get base_shifta_atp(): number {\r\n        return this.base_atp * this.shifta_factor;\r\n    }\r\n\r\n    @observable readonly weapons: IObservableArray<Weapon> = observable.array();\r\n\r\n    add_weapon = (type: WeaponItemType) => {\r\n        this.weapons.push(new Weapon(this, new WeaponItem(type)));\r\n    };\r\n\r\n    @observable armor_type?: ArmorItemType;\r\n    @observable shield_type?: ShieldItemType;\r\n\r\n    //\r\n    // Enemy Details\r\n    //\r\n\r\n    @observable enemy_dfp: number = 0;\r\n}\r\n\r\nexport const dps_calc_store = new DpsCalcStore();\r\n","import React, { PureComponent, ReactNode } from \"react\";\r\nimport {\r\n    OptionValues,\r\n    ReactAsyncSelectProps,\r\n    ReactCreatableSelectProps,\r\n    ReactSelectProps,\r\n} from \"react-select\";\r\nimport VirtualizedSelect, { AdditionalVirtualizedSelectProps } from \"react-virtualized-select\";\r\nimport \"./BigSelect.less\";\r\n\r\n/**\r\n * Simply wraps {@link VirtualizedSelect} to provide consistent styling.\r\n */\r\nexport class BigSelect<TValue = OptionValues> extends PureComponent<\r\n    VirtualizedSelectProps<TValue>\r\n> {\r\n    render(): ReactNode {\r\n        return <VirtualizedSelect className=\"BigSelect\" {...this.props} />;\r\n    }\r\n}\r\n\r\n// Copied from react-virtualized-select.\r\ntype VirtualizedSelectProps<TValue = OptionValues> =\r\n    | (ReactCreatableSelectProps<TValue> &\r\n          ReactAsyncSelectProps<TValue> &\r\n          AdditionalVirtualizedSelectProps<TValue> & { async: true })\r\n    | ReactCreatableSelectProps<TValue> &\r\n          ReactSelectProps<TValue> &\r\n          AdditionalVirtualizedSelectProps<TValue>;\r\n","import { InputNumber } from \"antd\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { Component, ReactNode } from \"react\";\r\nimport { ArmorItemType, ShieldItemType, WeaponItemType } from \"../../domain\";\r\nimport { dps_calc_store } from \"../../stores/DpsCalcStore\";\r\nimport { item_type_stores } from \"../../stores/ItemTypeStore\";\r\nimport { BigSelect } from \"../BigSelect\";\r\n\r\n@observer\r\nexport class DpsCalcComponent extends Component {\r\n    render(): ReactNode {\r\n        return (\r\n            <section>\r\n                <section>\r\n                    <div>Weapons:</div>\r\n                    <BigSelect\r\n                        placeholder=\"Add a weapon\"\r\n                        value={undefined}\r\n                        options={dps_calc_store.weapon_types.map(wt => ({\r\n                            label: wt.name,\r\n                            value: wt.id,\r\n                        }))}\r\n                        onChange={this.add_weapon}\r\n                    />\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <td>Weapon</td>\r\n                                <td>Min. ATP</td>\r\n                                <td>Max. ATP</td>\r\n                                <td>Grind</td>\r\n                                <td>Grind ATP</td>\r\n                                <td>Shifta ATP</td>\r\n                                <td>Final Min. ATP</td>\r\n                                <td>Final Max. ATP</td>\r\n                                <td>Min. Normal Damage</td>\r\n                                <td>Max. Normal Damage</td>\r\n                                <td>Avg. Normal Damage</td>\r\n                                <td>Min. Heavy Damage</td>\r\n                                <td>Max. Heavy Damage</td>\r\n                                <td>Avg. Heavy Damage</td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {dps_calc_store.weapons.map((weapon, i) => (\r\n                                <tr key={i}>\r\n                                    <td>{weapon.item.type.name}</td>\r\n                                    <td>{weapon.item.type.min_atp}</td>\r\n                                    <td>{weapon.item.type.max_atp}</td>\r\n                                    <td>\r\n                                        <InputNumber\r\n                                            size=\"small\"\r\n                                            value={weapon.item.grind}\r\n                                            min={0}\r\n                                            max={weapon.item.type.max_grind}\r\n                                            step={1}\r\n                                            onChange={value => (weapon.item.grind = value || 0)}\r\n                                        />\r\n                                    </td>\r\n                                    <td>{weapon.item.grind_atp}</td>\r\n                                    <td>{weapon.shifta_atp.toFixed(1)}</td>\r\n                                    <td>{weapon.final_min_atp.toFixed(1)}</td>\r\n                                    <td>{weapon.final_max_atp.toFixed(1)}</td>\r\n                                    <td>{weapon.min_normal_damage.toFixed(1)}</td>\r\n                                    <td>{weapon.max_normal_damage.toFixed(1)}</td>\r\n                                    <td>{weapon.avg_normal_damage.toFixed(1)}</td>\r\n                                    <td>{weapon.min_heavy_damage.toFixed(1)}</td>\r\n                                    <td>{weapon.max_heavy_damage.toFixed(1)}</td>\r\n                                    <td>{weapon.avg_heavy_damage.toFixed(1)}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                    <div>Character ATP:</div>\r\n                    <InputNumber\r\n                        value={dps_calc_store.char_atp}\r\n                        min={0}\r\n                        step={1}\r\n                        onChange={value => (dps_calc_store.char_atp = value || 0)}\r\n                    />\r\n                    <div>MAG POW:</div>\r\n                    <InputNumber\r\n                        value={dps_calc_store.mag_pow}\r\n                        min={0}\r\n                        max={200}\r\n                        step={1}\r\n                        onChange={value => (dps_calc_store.mag_pow = value || 0)}\r\n                    />\r\n                    <div>Armor:</div>\r\n                    <BigSelect\r\n                        placeholder=\"Choose an armor\"\r\n                        value={dps_calc_store.armor_type && dps_calc_store.armor_type.id}\r\n                        options={dps_calc_store.armor_types.map(at => ({\r\n                            label: at.name,\r\n                            value: at.id,\r\n                        }))}\r\n                        onChange={this.armor_changed}\r\n                    />\r\n                    <span>Armor ATP: {dps_calc_store.armor_atp}</span>\r\n                    <div>Shield:</div>\r\n                    <BigSelect\r\n                        placeholder=\"Choose a shield\"\r\n                        value={dps_calc_store.shield_type && dps_calc_store.shield_type.id}\r\n                        options={dps_calc_store.shield_types.map(st => ({\r\n                            label: st.name,\r\n                            value: st.id,\r\n                        }))}\r\n                        onChange={this.shield_changed}\r\n                    />\r\n                    <span>Shield ATP: {dps_calc_store.shield_atp}</span>\r\n                    <div>Shifta level:</div>\r\n                    <InputNumber\r\n                        value={dps_calc_store.shifta_lvl}\r\n                        min={0}\r\n                        max={30}\r\n                        step={1}\r\n                        onChange={value => (dps_calc_store.shifta_lvl = value || 0)}\r\n                    />\r\n                    <div>Shifta factor:</div>\r\n                    <div>{dps_calc_store.shifta_factor.toFixed(3)}</div>\r\n                    <div>Base shifta ATP:</div>\r\n                    <div>{dps_calc_store.base_shifta_atp.toFixed(2)}</div>\r\n                </section>\r\n            </section>\r\n        );\r\n    }\r\n\r\n    private add_weapon = (selected: any) => {\r\n        if (selected) {\r\n            let type = item_type_stores.current.value.get_by_id(selected.value)!;\r\n            dps_calc_store.add_weapon(type as WeaponItemType);\r\n        }\r\n    };\r\n\r\n    private armor_changed = (selected: any) => {\r\n        if (selected) {\r\n            let item_type = item_type_stores.current.value.get_by_id(selected.value)!;\r\n            dps_calc_store.armor_type = item_type as ArmorItemType;\r\n        } else {\r\n            dps_calc_store.armor_type = undefined;\r\n        }\r\n    };\r\n\r\n    private shield_changed = (selected: any) => {\r\n        if (selected) {\r\n            let item_type = item_type_stores.current.value.get_by_id(selected.value)!;\r\n            dps_calc_store.shield_type = item_type as ShieldItemType;\r\n        } else {\r\n            dps_calc_store.shield_type = undefined;\r\n        }\r\n    };\r\n}\r\n","import { Alert } from \"antd\";\r\nimport React, { ReactNode, Component, ComponentType } from \"react\";\r\nimport \"./ErrorBoundary.css\";\r\n\r\ntype State = { has_error: boolean };\r\n\r\nexport class ErrorBoundary extends Component<{}, State> {\r\n    state = {\r\n        has_error: false,\r\n    };\r\n\r\n    render(): ReactNode {\r\n        if (this.state.has_error) {\r\n            return (\r\n                <div className=\"ErrorBoundary-error\">\r\n                    <div>\r\n                        <Alert type=\"error\" message=\"Something went wrong.\" />\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return this.props.children;\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromError(): State {\r\n        return { has_error: true };\r\n    }\r\n}\r\n\r\nexport function with_error_boundary<P>(Component: ComponentType<P>): ComponentType<P> {\r\n    const ComponentErrorBoundary = (props: P): JSX.Element => (\r\n        <ErrorBoundary>\r\n            <Component {...props} />\r\n        </ErrorBoundary>\r\n    );\r\n    ComponentErrorBoundary.displayName = `${Component.displayName}ErrorBoundary`;\r\n    return ComponentErrorBoundary;\r\n}\r\n","import Logger from \"js-logger\";\r\nimport { autorun, IReactionDisposer, observable } from \"mobx\";\r\nimport { HuntMethod, NpcType, Server, SimpleQuest } from \"../domain\";\r\nimport { QuestDto } from \"../dto\";\r\nimport { Loadable } from \"../Loadable\";\r\nimport { ServerMap } from \"./ServerMap\";\r\n\r\nconst logger = Logger.get(\"stores/HuntMethodStore\");\r\n\r\nclass HuntMethodStore {\r\n    @observable methods: ServerMap<Loadable<HuntMethod[]>> = new ServerMap(\r\n        server => new Loadable([], () => this.load_hunt_methods(server))\r\n    );\r\n\r\n    private storage_disposer?: IReactionDisposer;\r\n\r\n    private async load_hunt_methods(server: Server): Promise<HuntMethod[]> {\r\n        const response = await fetch(\r\n            `${process.env.PUBLIC_URL}/quests.${Server[server].toLowerCase()}.json`\r\n        );\r\n        const quests = (await response.json()) as QuestDto[];\r\n        const methods = new Array<HuntMethod>();\r\n\r\n        for (const quest of quests) {\r\n            let total_count = 0;\r\n            const enemy_counts = new Map<NpcType, number>();\r\n\r\n            for (const [code, count] of Object.entries(quest.enemyCounts)) {\r\n                const npc_type = NpcType.by_code(code);\r\n\r\n                if (!npc_type) {\r\n                    logger.error(`No NpcType found for code ${code}.`);\r\n                } else {\r\n                    enemy_counts.set(npc_type, count);\r\n                    total_count += count;\r\n                }\r\n            }\r\n\r\n            // Filter out some quests.\r\n            /* eslint-disable no-fallthrough */\r\n            switch (quest.id) {\r\n                // The following quests are left out because their enemies don't drop anything.\r\n                case 31: // Black Paper's Dangerous Deal\r\n                case 34: // Black Paper's Dangerous Deal 2\r\n                case 1305: // Maximum Attack S (Ep. 1)\r\n                case 1306: // Maximum Attack S (Ep. 2)\r\n                case 1307: // Maximum Attack S (Ep. 4)\r\n                case 313: // Beyond the Horizon\r\n\r\n                // MAXIMUM ATTACK 3 Ver2 is filtered out because its actual enemy count depends on the path taken.\r\n                // TODO: generate a method per path.\r\n                case 314:\r\n                    continue;\r\n            }\r\n\r\n            methods.push(\r\n                new HuntMethod(\r\n                    `q${quest.id}`,\r\n                    quest.name,\r\n                    new SimpleQuest(quest.id, quest.name, quest.episode, enemy_counts),\r\n                    /^\\d-\\d.*/.test(quest.name) ? 0.75 : total_count > 400 ? 0.75 : 0.5\r\n                )\r\n            );\r\n        }\r\n\r\n        this.load_from_local_storage(methods, server);\r\n        return methods;\r\n    }\r\n\r\n    private load_from_local_storage = (methods: HuntMethod[], server: Server) => {\r\n        try {\r\n            const method_user_times_json = localStorage.getItem(\r\n                `HuntMethodStore.methodUserTimes.${Server[server]}`\r\n            );\r\n\r\n            if (method_user_times_json) {\r\n                const user_times: StoredUserTimes = JSON.parse(method_user_times_json);\r\n\r\n                for (const method of methods) {\r\n                    method.user_time = user_times[method.id];\r\n                }\r\n            }\r\n\r\n            if (this.storage_disposer) {\r\n                this.storage_disposer();\r\n            }\r\n\r\n            this.storage_disposer = autorun(() => this.store_in_local_storage(methods, server));\r\n        } catch (e) {\r\n            logger.error(e);\r\n        }\r\n    };\r\n\r\n    private store_in_local_storage = (methods: HuntMethod[], server: Server) => {\r\n        try {\r\n            const user_times: StoredUserTimes = {};\r\n\r\n            for (const method of methods) {\r\n                if (method.user_time != undefined) {\r\n                    user_times[method.id] = method.user_time;\r\n                }\r\n            }\r\n\r\n            localStorage.setItem(\r\n                `HuntMethodStore.methodUserTimes.${Server[server]}`,\r\n                JSON.stringify(user_times)\r\n            );\r\n        } catch (e) {\r\n            logger.error(e);\r\n        }\r\n    };\r\n}\r\n\r\ntype StoredUserTimes = { [method_id: string]: number };\r\n\r\nexport const hunt_method_store = new HuntMethodStore();\r\n","import React, { ReactNode, Component } from \"react\";\r\nimport {\r\n    GridCellRenderer,\r\n    Index,\r\n    MultiGrid,\r\n    SortDirectionType,\r\n    SortDirection,\r\n} from \"react-virtualized\";\r\nimport \"./BigTable.less\";\r\n\r\nexport interface Column<T> {\r\n    key?: string;\r\n    name: string;\r\n    width: number;\r\n    cell_renderer: (record: T) => ReactNode;\r\n    tooltip?: (record: T) => string;\r\n    footer_value?: string;\r\n    footer_tooltip?: string;\r\n    /**\r\n     * \"number\" and \"integrated\" have special meaning.\r\n     */\r\n    class_name?: string;\r\n    sortable?: boolean;\r\n}\r\n\r\nexport type ColumnSort<T> = { column: Column<T>; direction: SortDirectionType };\r\n\r\n/**\r\n * A table with a fixed header. Optionally has fixed columns and a footer.\r\n * Uses windowing to support large amounts of rows and columns.\r\n * TODO: no-content message.\r\n */\r\nexport class BigTable<T> extends Component<{\r\n    width: number;\r\n    height: number;\r\n    row_count: number;\r\n    overscan_row_count?: number;\r\n    columns: Column<T>[];\r\n    fixed_column_count?: number;\r\n    overscan_column_count?: number;\r\n    record: (index: Index) => T;\r\n    footer?: boolean;\r\n    /**\r\n     * When this changes, the DataTable will re-render.\r\n     */\r\n    update_trigger?: any;\r\n    sort?: (sort_columns: ColumnSort<T>[]) => void;\r\n}> {\r\n    private sort_columns = new Array<ColumnSort<T>>();\r\n\r\n    render(): ReactNode {\r\n        return (\r\n            <div\r\n                className=\"DataTable\"\r\n                style={{ width: this.props.width, height: this.props.height }}\r\n            >\r\n                <MultiGrid\r\n                    width={this.props.width}\r\n                    height={this.props.height}\r\n                    rowHeight={26}\r\n                    rowCount={this.props.row_count + 1 + (this.props.footer ? 1 : 0)}\r\n                    fixedRowCount={1}\r\n                    overscanRowCount={this.props.overscan_row_count}\r\n                    columnWidth={this.column_width}\r\n                    columnCount={this.props.columns.length}\r\n                    fixedColumnCount={this.props.fixed_column_count}\r\n                    overscanColumnCount={this.props.overscan_column_count}\r\n                    cellRenderer={this.cell_renderer}\r\n                    classNameTopLeftGrid=\"DataTable-header\"\r\n                    classNameTopRightGrid=\"DataTable-header\"\r\n                    updateTigger={this.props.update_trigger}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private column_width = ({ index }: Index): number => {\r\n        return this.props.columns[index].width;\r\n    };\r\n\r\n    private cell_renderer: GridCellRenderer = ({ columnIndex, rowIndex, style }): ReactNode => {\r\n        const column = this.props.columns[columnIndex];\r\n        let cell: ReactNode;\r\n        let sort_indicator: ReactNode;\r\n        let title: string | undefined;\r\n        const classes = [\"DataTable-cell\"];\r\n\r\n        if (columnIndex === this.props.columns.length - 1) {\r\n            classes.push(\"last-in-row\");\r\n        }\r\n\r\n        if (rowIndex === 0) {\r\n            // Header row\r\n            cell = title = column.name;\r\n\r\n            if (column.sortable) {\r\n                classes.push(\"sortable\");\r\n\r\n                const sort = this.sort_columns[0];\r\n\r\n                if (sort && sort.column === column) {\r\n                    if (sort.direction === SortDirection.ASC) {\r\n                        sort_indicator = (\r\n                            <svg\r\n                                className=\"DataTable-sort-indictator\"\r\n                                width=\"18\"\r\n                                height=\"18\"\r\n                                viewBox=\"0 0 24 24\"\r\n                            >\r\n                                <path d=\"M7 14l5-5 5 5z\"></path>\r\n                                <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                            </svg>\r\n                        );\r\n                    } else {\r\n                        sort_indicator = (\r\n                            <svg\r\n                                className=\"DataTable-sort-indictator\"\r\n                                width=\"18\"\r\n                                height=\"18\"\r\n                                viewBox=\"0 0 24 24\"\r\n                            >\r\n                                <path d=\"M7 10l5 5 5-5z\"></path>\r\n                                <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                            </svg>\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            // Record or footer row\r\n            if (column.class_name) {\r\n                classes.push(column.class_name);\r\n            }\r\n\r\n            if (this.props.footer && rowIndex === 1 + this.props.row_count) {\r\n                // Footer row\r\n                classes.push(\"footer-cell\");\r\n                cell = column.footer_value == null ? \"\" : column.footer_value;\r\n                title = column.footer_tooltip == null ? \"\" : column.footer_tooltip;\r\n            } else {\r\n                // Record row\r\n                const result = this.props.record({ index: rowIndex - 1 });\r\n\r\n                cell = column.cell_renderer(result);\r\n\r\n                if (column.tooltip) {\r\n                    title = column.tooltip(result);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (typeof cell !== \"string\") {\r\n            classes.push(\"custom\");\r\n        }\r\n\r\n        const on_click =\r\n            rowIndex === 0 && column.sortable ? () => this.header_clicked(column) : undefined;\r\n\r\n        return (\r\n            <div\r\n                className={classes.join(\" \")}\r\n                key={`${columnIndex}, ${rowIndex}`}\r\n                style={style}\r\n                title={title}\r\n                onClick={on_click}\r\n            >\r\n                {typeof cell === \"string\" ? (\r\n                    <span className=\"DataTable-cell-text\">{cell}</span>\r\n                ) : (\r\n                    cell\r\n                )}\r\n                {sort_indicator}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    private header_clicked = (column: Column<T>): void => {\r\n        const old_index = this.sort_columns.findIndex(sc => sc.column === column);\r\n        let old = old_index === -1 ? undefined : this.sort_columns.splice(old_index, 1)[0];\r\n\r\n        const direction =\r\n            old_index === 0 && old && old.direction === SortDirection.ASC\r\n                ? SortDirection.DESC\r\n                : SortDirection.ASC;\r\n\r\n        this.sort_columns.unshift({ column, direction });\r\n        this.sort_columns.splice(10);\r\n\r\n        if (this.props.sort) {\r\n            this.props.sort(this.sort_columns);\r\n        }\r\n    };\r\n}\r\n","import { TimePicker } from \"antd\";\r\nimport { observer } from \"mobx-react\";\r\nimport moment, { Moment } from \"moment\";\r\nimport React, { ReactNode, Component } from \"react\";\r\nimport { AutoSizer, Index, SortDirection } from \"react-virtualized\";\r\nimport { Episode, HuntMethod } from \"../../domain\";\r\nimport { EnemyNpcTypes, NpcType } from \"../../domain/NpcType\";\r\nimport { hunt_method_store } from \"../../stores/HuntMethodStore\";\r\nimport { BigTable, Column, ColumnSort } from \"../BigTable\";\r\nimport \"./MethodsComponent.css\";\r\n\r\n@observer\r\nexport class MethodsComponent extends Component {\r\n    static columns: Column<HuntMethod>[] = (() => {\r\n        // Standard columns.\r\n        const columns: Column<HuntMethod>[] = [\r\n            {\r\n                key: \"name\",\r\n                name: \"Method\",\r\n                width: 250,\r\n                cell_renderer: method => method.name,\r\n                sortable: true,\r\n            },\r\n            {\r\n                key: \"episode\",\r\n                name: \"Ep.\",\r\n                width: 34,\r\n                cell_renderer: method => Episode[method.episode],\r\n                sortable: true,\r\n            },\r\n            {\r\n                key: \"time\",\r\n                name: \"Time\",\r\n                width: 50,\r\n                cell_renderer: method => <TimeComponent method={method} />,\r\n                class_name: \"integrated\",\r\n                sortable: true,\r\n            },\r\n        ];\r\n\r\n        // One column per enemy type.\r\n        for (const enemy of EnemyNpcTypes) {\r\n            columns.push({\r\n                key: enemy.code,\r\n                name: enemy.name,\r\n                width: 75,\r\n                cell_renderer: method => {\r\n                    const count = method.enemy_counts.get(enemy);\r\n                    return count == null ? \"\" : count.toString();\r\n                },\r\n                class_name: \"number\",\r\n                sortable: true,\r\n            });\r\n        }\r\n\r\n        return columns;\r\n    })();\r\n\r\n    render(): ReactNode {\r\n        const methods = hunt_method_store.methods.current.value;\r\n\r\n        return (\r\n            <section className=\"ho-MethodsComponent\">\r\n                <AutoSizer>\r\n                    {({ width, height }) => (\r\n                        <BigTable<HuntMethod>\r\n                            width={width}\r\n                            height={height}\r\n                            row_count={methods.length}\r\n                            columns={MethodsComponent.columns}\r\n                            fixed_column_count={3}\r\n                            record={this.record}\r\n                            sort={this.sort}\r\n                            update_trigger={hunt_method_store.methods.current.value}\r\n                        />\r\n                    )}\r\n                </AutoSizer>\r\n            </section>\r\n        );\r\n    }\r\n\r\n    private record = ({ index }: Index) => {\r\n        return hunt_method_store.methods.current.value[index];\r\n    };\r\n\r\n    private sort = (sorts: ColumnSort<HuntMethod>[]) => {\r\n        const methods = hunt_method_store.methods.current.value.slice();\r\n\r\n        methods.sort((a, b) => {\r\n            for (const { column, direction } of sorts) {\r\n                let cmp = 0;\r\n\r\n                if (column.key === \"name\") {\r\n                    cmp = a.name.localeCompare(b.name);\r\n                } else if (column.key === \"episode\") {\r\n                    cmp = a.episode - b.episode;\r\n                } else if (column.key === \"time\") {\r\n                    cmp = a.time - b.time;\r\n                } else if (column.key) {\r\n                    const type = NpcType.by_code(column.key);\r\n\r\n                    if (type) {\r\n                        cmp = (a.enemy_counts.get(type) || 0) - (b.enemy_counts.get(type) || 0);\r\n                    }\r\n                }\r\n\r\n                if (cmp !== 0) {\r\n                    return direction === SortDirection.ASC ? cmp : -cmp;\r\n                }\r\n            }\r\n\r\n            return 0;\r\n        });\r\n\r\n        hunt_method_store.methods.current.value = methods;\r\n    };\r\n}\r\n\r\n@observer\r\nclass TimeComponent extends React.Component<{ method: HuntMethod }> {\r\n    render(): ReactNode {\r\n        const time = this.props.method.time;\r\n        const hour = Math.floor(time);\r\n        const minute = Math.round(60 * (time - hour));\r\n\r\n        return (\r\n            <TimePicker\r\n                className=\"ho-MethodsComponent-timepicker\"\r\n                value={moment({ hour, minute })}\r\n                format=\"HH:mm\"\r\n                size=\"small\"\r\n                allowClear={false}\r\n                suffixIcon={<span />}\r\n                onChange={this.change}\r\n            />\r\n        );\r\n    }\r\n\r\n    private change = (time: Moment) => {\r\n        this.props.method.user_time = time.hour() + time.minute() / 60;\r\n    };\r\n}\r\n","import { observable } from \"mobx\";\r\nimport {\r\n    Difficulties,\r\n    Difficulty,\r\n    EnemyDrop,\r\n    NpcType,\r\n    SectionId,\r\n    SectionIds,\r\n    Server,\r\n} from \"../domain\";\r\nimport { NpcTypes } from \"../domain/NpcType\";\r\nimport { EnemyDropDto } from \"../dto\";\r\nimport { Loadable } from \"../Loadable\";\r\nimport { item_type_stores } from \"./ItemTypeStore\";\r\nimport { ServerMap } from \"./ServerMap\";\r\nimport Logger from \"js-logger\";\r\n\r\nconst logger = Logger.get(\"stores/ItemDropStore\");\r\n\r\nexport class EnemyDropTable {\r\n    // Mapping of difficulties to section IDs to NpcTypes to EnemyDrops.\r\n    private table: EnemyDrop[] = new Array(\r\n        Difficulties.length * SectionIds.length * NpcTypes.length\r\n    );\r\n\r\n    // Mapping of ItemType ids to EnemyDrops.\r\n    private item_type_to_drops: EnemyDrop[][] = [];\r\n\r\n    get_drop(\r\n        difficulty: Difficulty,\r\n        section_id: SectionId,\r\n        npc_type: NpcType\r\n    ): EnemyDrop | undefined {\r\n        return this.table[\r\n            difficulty * SectionIds.length * NpcTypes.length +\r\n                section_id * NpcTypes.length +\r\n                npc_type.id\r\n        ];\r\n    }\r\n\r\n    set_drop(\r\n        difficulty: Difficulty,\r\n        section_id: SectionId,\r\n        npc_type: NpcType,\r\n        drop: EnemyDrop\r\n    ): void {\r\n        this.table[\r\n            difficulty * SectionIds.length * NpcTypes.length +\r\n                section_id * NpcTypes.length +\r\n                npc_type.id\r\n        ] = drop;\r\n\r\n        let drops = this.item_type_to_drops[drop.item_type.id];\r\n\r\n        if (!drops) {\r\n            drops = [];\r\n            this.item_type_to_drops[drop.item_type.id] = drops;\r\n        }\r\n\r\n        drops.push(drop);\r\n    }\r\n\r\n    get_drops_for_item_type(item_type_id: number): EnemyDrop[] {\r\n        return this.item_type_to_drops[item_type_id] || [];\r\n    }\r\n}\r\n\r\nexport class ItemDropStore {\r\n    @observable.ref enemy_drops: EnemyDropTable = new EnemyDropTable();\r\n}\r\n\r\nexport const item_drop_stores: ServerMap<Loadable<ItemDropStore>> = new ServerMap(server => {\r\n    const store = new ItemDropStore();\r\n    return new Loadable(store, () => load(store, server));\r\n});\r\n\r\nasync function load(store: ItemDropStore, server: Server): Promise<ItemDropStore> {\r\n    const item_type_store = await item_type_stores.current.promise;\r\n    const response = await fetch(\r\n        `${process.env.PUBLIC_URL}/enemyDrops.${Server[server].toLowerCase()}.json`\r\n    );\r\n    const data: EnemyDropDto[] = await response.json();\r\n\r\n    const drops = new EnemyDropTable();\r\n\r\n    for (const drop_dto of data) {\r\n        const npc_type = NpcType.by_code(drop_dto.enemy);\r\n\r\n        if (!npc_type) {\r\n            logger.warn(\r\n                `Couldn't determine NpcType of episode ${drop_dto.episode} ${drop_dto.enemy}.`\r\n            );\r\n            continue;\r\n        }\r\n\r\n        const difficulty = (Difficulty as any)[drop_dto.difficulty];\r\n        const item_type = item_type_store.get_by_id(drop_dto.itemTypeId);\r\n\r\n        if (!item_type) {\r\n            logger.warn(`Couldn't find item kind ${drop_dto.itemTypeId}.`);\r\n            continue;\r\n        }\r\n\r\n        const section_id = (SectionId as any)[drop_dto.sectionId];\r\n\r\n        if (section_id == null) {\r\n            logger.warn(`Couldn't find section ID ${drop_dto.sectionId}.`);\r\n            continue;\r\n        }\r\n\r\n        drops.set_drop(\r\n            difficulty,\r\n            section_id,\r\n            npc_type,\r\n            new EnemyDrop(\r\n                difficulty,\r\n                section_id,\r\n                npc_type,\r\n                item_type,\r\n                drop_dto.dropRate,\r\n                drop_dto.rareRate\r\n            )\r\n        );\r\n    }\r\n\r\n    store.enemy_drops = drops;\r\n    return store;\r\n}\r\n","import solver from \"javascript-lp-solver\";\r\nimport { autorun, IObservableArray, observable, computed } from \"mobx\";\r\nimport {\r\n    Difficulties,\r\n    Difficulty,\r\n    HuntMethod,\r\n    ItemType,\r\n    KONDRIEU_PROB,\r\n    NpcType,\r\n    RARE_ENEMY_PROB,\r\n    SectionId,\r\n    SectionIds,\r\n    Server,\r\n    Episode,\r\n} from \"../domain\";\r\nimport { application_store } from \"./ApplicationStore\";\r\nimport { hunt_method_store } from \"./HuntMethodStore\";\r\nimport { item_drop_stores } from \"./ItemDropStore\";\r\nimport { item_type_stores } from \"./ItemTypeStore\";\r\nimport Logger from \"js-logger\";\r\n\r\nconst logger = Logger.get(\"stores/HuntOptimizerStore\");\r\n\r\nexport class WantedItem {\r\n    @observable readonly item_type: ItemType;\r\n    @observable amount: number;\r\n\r\n    constructor(item_type: ItemType, amount: number) {\r\n        this.item_type = item_type;\r\n        this.amount = amount;\r\n    }\r\n}\r\n\r\nexport class OptimalResult {\r\n    readonly wanted_items: ItemType[];\r\n    readonly optimal_methods: OptimalMethod[];\r\n\r\n    constructor(wanted_items: ItemType[], optimal_methods: OptimalMethod[]) {\r\n        this.wanted_items = wanted_items;\r\n        this.optimal_methods = optimal_methods;\r\n    }\r\n}\r\n\r\nexport class OptimalMethod {\r\n    readonly difficulty: Difficulty;\r\n    readonly section_ids: SectionId[];\r\n    readonly method_name: string;\r\n    readonly method_episode: Episode;\r\n    readonly method_time: number;\r\n    readonly runs: number;\r\n    readonly total_time: number;\r\n    readonly item_counts: Map<ItemType, number>;\r\n\r\n    constructor(\r\n        difficulty: Difficulty,\r\n        section_ids: SectionId[],\r\n        method_name: string,\r\n        method_episode: Episode,\r\n        method_time: number,\r\n        runs: number,\r\n        item_counts: Map<ItemType, number>\r\n    ) {\r\n        this.difficulty = difficulty;\r\n        this.section_ids = section_ids;\r\n        this.method_name = method_name;\r\n        this.method_episode = method_episode;\r\n        this.method_time = method_time;\r\n        this.runs = runs;\r\n        this.total_time = runs * method_time;\r\n        this.item_counts = item_counts;\r\n    }\r\n}\r\n\r\n// TODO: take into account mothmants spawned from mothverts.\r\n// TODO: take into account split slimes.\r\n// TODO: Prefer methods that don't split pan arms over methods that do.\r\n//       For some reason this doesn't actually seem to be a problem, should probably investigate.\r\n// TODO: Show expected value or probability per item per method.\r\n//       Can be useful when deciding which item to hunt first.\r\n// TODO: boxes.\r\nclass HuntOptimizerStore {\r\n    @computed get huntable_item_types(): ItemType[] {\r\n        const item_drop_store = item_drop_stores.current.value;\r\n        return item_type_stores.current.value.item_types.filter(\r\n            i => item_drop_store.enemy_drops.get_drops_for_item_type(i.id).length\r\n        );\r\n    }\r\n\r\n    // TODO: wanted items per server.\r\n    @observable readonly wanted_items: IObservableArray<WantedItem> = observable.array();\r\n    @observable result?: OptimalResult;\r\n\r\n    constructor() {\r\n        this.initialize();\r\n    }\r\n\r\n    optimize = async () => {\r\n        if (!this.wanted_items.length) {\r\n            this.result = undefined;\r\n            return;\r\n        }\r\n\r\n        // Initialize this set before awaiting data, so user changes don't affect this optimization\r\n        // run from this point on.\r\n        const wanted_items = new Set(\r\n            this.wanted_items.filter(w => w.amount > 0).map(w => w.item_type)\r\n        );\r\n\r\n        const methods = await hunt_method_store.methods.current.promise;\r\n        const drop_table = (await item_drop_stores.current.promise).enemy_drops;\r\n\r\n        // Add a constraint per wanted item.\r\n        const constraints: { [item_name: string]: { min: number } } = {};\r\n\r\n        for (const wanted of this.wanted_items) {\r\n            constraints[wanted.item_type.name] = { min: wanted.amount };\r\n        }\r\n\r\n        // Add a variable to the LP model per method per difficulty per section ID.\r\n        // When a method with pan arms is encountered, two variables are added. One for the method\r\n        // with migiums and hidooms and one with pan arms.\r\n        // Each variable has a time property to minimize and a property per item with the number\r\n        // of enemies that drop the item multiplied by the corresponding drop rate as its value.\r\n        type Variable = {\r\n            time: number;\r\n            [item_name: string]: number;\r\n        };\r\n        const variables: { [method_name: string]: Variable } = {};\r\n\r\n        type VariableDetails = {\r\n            method: HuntMethod;\r\n            difficulty: Difficulty;\r\n            section_id: SectionId;\r\n            split_pan_arms: boolean;\r\n        };\r\n        const variable_details: Map<string, VariableDetails> = new Map();\r\n\r\n        for (const method of methods) {\r\n            // Counts include rare enemies, so they are fractional.\r\n            const counts = new Map<NpcType, number>();\r\n\r\n            for (const [enemy, count] of method.enemy_counts.entries()) {\r\n                const old_count = counts.get(enemy) || 0;\r\n\r\n                if (enemy.rare_type == null) {\r\n                    counts.set(enemy, old_count + count);\r\n                } else {\r\n                    let rate, rare_rate;\r\n\r\n                    if (enemy.rare_type === NpcType.Kondrieu) {\r\n                        rate = 1 - KONDRIEU_PROB;\r\n                        rare_rate = KONDRIEU_PROB;\r\n                    } else {\r\n                        rate = 1 - RARE_ENEMY_PROB;\r\n                        rare_rate = RARE_ENEMY_PROB;\r\n                    }\r\n\r\n                    counts.set(enemy, old_count + count * rate);\r\n                    counts.set(\r\n                        enemy.rare_type,\r\n                        (counts.get(enemy.rare_type) || 0) + count * rare_rate\r\n                    );\r\n                }\r\n            }\r\n\r\n            // Create a secondary counts map if there are any pan arms that can be split into\r\n            // migiums and hidooms.\r\n            const counts_list: Map<NpcType, number>[] = [counts];\r\n            const pan_arms_count = counts.get(NpcType.PanArms);\r\n\r\n            if (pan_arms_count) {\r\n                const split_counts = new Map(counts);\r\n\r\n                split_counts.delete(NpcType.PanArms);\r\n                split_counts.set(NpcType.Migium, pan_arms_count);\r\n                split_counts.set(NpcType.Hidoom, pan_arms_count);\r\n\r\n                counts_list.push(split_counts);\r\n            }\r\n\r\n            const pan_arms_2_count = counts.get(NpcType.PanArms2);\r\n\r\n            if (pan_arms_2_count) {\r\n                const split_counts = new Map(counts);\r\n\r\n                split_counts.delete(NpcType.PanArms2);\r\n                split_counts.set(NpcType.Migium2, pan_arms_2_count);\r\n                split_counts.set(NpcType.Hidoom2, pan_arms_2_count);\r\n\r\n                counts_list.push(split_counts);\r\n            }\r\n\r\n            for (let i = 0; i < counts_list.length; i++) {\r\n                const counts = counts_list[i];\r\n                const split_pan_arms = i === 1;\r\n\r\n                for (const difficulty of Difficulties) {\r\n                    for (const section_id of SectionIds) {\r\n                        // Will contain an entry per wanted item dropped by enemies in this method/\r\n                        // difficulty/section ID combo.\r\n                        const variable: Variable = {\r\n                            time: method.time,\r\n                        };\r\n                        // Only add the variable if the method provides at least 1 item we want.\r\n                        let add_variable = false;\r\n\r\n                        for (const [npc_type, count] of counts.entries()) {\r\n                            const drop = drop_table.get_drop(difficulty, section_id, npc_type);\r\n\r\n                            if (drop && wanted_items.has(drop.item_type)) {\r\n                                const value = variable[drop.item_type.name] || 0;\r\n                                variable[drop.item_type.name] = value + count * drop.rate;\r\n                                add_variable = true;\r\n                            }\r\n                        }\r\n\r\n                        if (add_variable) {\r\n                            const name = this.full_method_name(\r\n                                difficulty,\r\n                                section_id,\r\n                                method,\r\n                                split_pan_arms\r\n                            );\r\n                            variables[name] = variable;\r\n                            variable_details.set(name, {\r\n                                method,\r\n                                difficulty,\r\n                                section_id,\r\n                                split_pan_arms,\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        const result: {\r\n            feasible: boolean;\r\n            bounded: boolean;\r\n            result: number;\r\n            /**\r\n             * Value will always be a number if result is indexed with an actual method name.\r\n             */\r\n            [method: string]: number | boolean;\r\n        } = solver.Solve({\r\n            optimize: \"time\",\r\n            opType: \"min\",\r\n            constraints,\r\n            variables,\r\n        });\r\n\r\n        if (!result.feasible) {\r\n            this.result = undefined;\r\n            return;\r\n        }\r\n\r\n        const optimal_methods: OptimalMethod[] = [];\r\n\r\n        // Loop over the entries in result, ignore standard properties that aren't variables.\r\n        for (const [variable_name, runs_or_other] of Object.entries(result)) {\r\n            const details = variable_details.get(variable_name);\r\n\r\n            if (details) {\r\n                const { method, difficulty, section_id, split_pan_arms } = details;\r\n                const runs = runs_or_other as number;\r\n                const variable = variables[variable_name];\r\n\r\n                const items = new Map<ItemType, number>();\r\n\r\n                for (const [item_name, expected_amount] of Object.entries(variable)) {\r\n                    for (const item of wanted_items) {\r\n                        if (item_name === item.name) {\r\n                            items.set(item, runs * expected_amount);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Find all section IDs that provide the same items with the same expected amount.\r\n                // E.g. if you need a spread needle and a bringer's right arm, using either\r\n                // purplenum or yellowboze will give you the exact same probabilities.\r\n                const section_ids: SectionId[] = [];\r\n\r\n                for (const sid of SectionIds) {\r\n                    let match_found = true;\r\n\r\n                    if (sid !== section_id) {\r\n                        const v =\r\n                            variables[\r\n                                this.full_method_name(difficulty, sid, method, split_pan_arms)\r\n                            ];\r\n\r\n                        if (!v) {\r\n                            match_found = false;\r\n                        } else {\r\n                            for (const item_name of Object.keys(variable)) {\r\n                                if (variable[item_name] !== v[item_name]) {\r\n                                    match_found = false;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (match_found) {\r\n                        section_ids.push(sid);\r\n                    }\r\n                }\r\n\r\n                optimal_methods.push(\r\n                    new OptimalMethod(\r\n                        difficulty,\r\n                        section_ids,\r\n                        method.name + (split_pan_arms ? \" (Split Pan Arms)\" : \"\"),\r\n                        method.episode,\r\n                        method.time,\r\n                        runs,\r\n                        items\r\n                    )\r\n                );\r\n            }\r\n        }\r\n\r\n        this.result = new OptimalResult([...wanted_items], optimal_methods);\r\n    };\r\n\r\n    private full_method_name(\r\n        difficulty: Difficulty,\r\n        section_id: SectionId,\r\n        method: HuntMethod,\r\n        split_pan_arms: boolean\r\n    ): string {\r\n        let name = `${difficulty}\\t${section_id}\\t${method.id}`;\r\n        if (split_pan_arms) name += \"\\tspa\";\r\n        return name;\r\n    }\r\n\r\n    private initialize = async () => {\r\n        try {\r\n            await this.load_from_local_storage();\r\n            autorun(this.store_in_local_storage);\r\n        } catch (e) {\r\n            logger.error(e);\r\n        }\r\n    };\r\n\r\n    private load_from_local_storage = async () => {\r\n        const wanted_items_json = localStorage.getItem(\r\n            `HuntOptimizerStore.wantedItems.${Server[application_store.current_server]}`\r\n        );\r\n\r\n        if (wanted_items_json) {\r\n            const item_store = await item_type_stores.current.promise;\r\n            const wi: StoredWantedItem[] = JSON.parse(wanted_items_json);\r\n\r\n            const wanted_items: WantedItem[] = [];\r\n\r\n            for (const { itemTypeId, itemKindId, amount } of wi) {\r\n                const item =\r\n                    itemTypeId != undefined\r\n                        ? item_store.get_by_id(itemTypeId)\r\n                        : item_store.get_by_id(itemKindId!);\r\n\r\n                if (item) {\r\n                    wanted_items.push(new WantedItem(item, amount));\r\n                }\r\n            }\r\n\r\n            this.wanted_items.replace(wanted_items);\r\n        }\r\n    };\r\n\r\n    private store_in_local_storage = () => {\r\n        try {\r\n            localStorage.setItem(\r\n                `HuntOptimizerStore.wantedItems.${Server[application_store.current_server]}`,\r\n                JSON.stringify(\r\n                    this.wanted_items.map(\r\n                        ({ item_type: itemType, amount }): StoredWantedItem => ({\r\n                            itemTypeId: itemType.id,\r\n                            amount,\r\n                        })\r\n                    )\r\n                )\r\n            );\r\n        } catch (e) {\r\n            logger.error(e);\r\n        }\r\n    };\r\n}\r\n\r\ntype StoredWantedItem = {\r\n    itemTypeId?: number; // Should only be undefined if the legacy name is still used.\r\n    itemKindId?: number; // Legacy name.\r\n    amount: number;\r\n};\r\n\r\nexport const hunt_optimizer_store = new HuntOptimizerStore();\r\n","import { Button, InputNumber, Popover } from \"antd\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { ReactNode, Component } from \"react\";\r\nimport { AutoSizer, Column, Table, TableCellRenderer } from \"react-virtualized\";\r\nimport { hunt_optimizer_store, WantedItem } from \"../../stores/HuntOptimizerStore\";\r\nimport { item_type_stores } from \"../../stores/ItemTypeStore\";\r\nimport { BigSelect } from \"../BigSelect\";\r\nimport \"./WantedItemsComponent.less\";\r\n\r\n@observer\r\nexport class WantedItemsComponent extends Component {\r\n    state = {\r\n        help_visible: false,\r\n    };\r\n\r\n    render(): ReactNode {\r\n        // Make sure render is called on updates.\r\n        hunt_optimizer_store.wanted_items.slice(0, 0);\r\n\r\n        return (\r\n            <section className=\"ho-WantedItemsComponent\">\r\n                <h3>\r\n                    Wanted Items\r\n                    <Popover\r\n                        content={<Help />}\r\n                        trigger=\"click\"\r\n                        visible={this.state.help_visible}\r\n                        onVisibleChange={this.on_help_visible_change}\r\n                    >\r\n                        <Button icon=\"info-circle\" type=\"link\" />\r\n                    </Popover>\r\n                </h3>\r\n                <div className=\"ho-WantedItemsComponent-top-bar\">\r\n                    <BigSelect\r\n                        placeholder=\"Add an item\"\r\n                        value={undefined}\r\n                        style={{ width: 200 }}\r\n                        options={hunt_optimizer_store.huntable_item_types.map(itemType => ({\r\n                            label: itemType.name,\r\n                            value: itemType.id,\r\n                        }))}\r\n                        onChange={this.add_wanted}\r\n                    />\r\n                    <Button onClick={hunt_optimizer_store.optimize} style={{ marginLeft: 10 }}>\r\n                        Optimize\r\n                    </Button>\r\n                </div>\r\n                <div className=\"ho-WantedItemsComponent-table\">\r\n                    <AutoSizer>\r\n                        {({ width, height }) => (\r\n                            <Table\r\n                                width={width}\r\n                                height={height}\r\n                                headerHeight={30}\r\n                                rowHeight={30}\r\n                                rowCount={hunt_optimizer_store.wanted_items.length}\r\n                                rowGetter={({ index }) => hunt_optimizer_store.wanted_items[index]}\r\n                                noRowsRenderer={this.no_rows_renderer}\r\n                            >\r\n                                <Column\r\n                                    label=\"Amount\"\r\n                                    dataKey=\"amount\"\r\n                                    width={70}\r\n                                    cellRenderer={({ rowData }) => (\r\n                                        <WantedAmountCell wantedItem={rowData} />\r\n                                    )}\r\n                                />\r\n                                <Column\r\n                                    label=\"Item\"\r\n                                    dataKey=\"item\"\r\n                                    width={150}\r\n                                    flexGrow={1}\r\n                                    cellDataGetter={({ rowData }) =>\r\n                                        (rowData as WantedItem).item_type.name\r\n                                    }\r\n                                />\r\n                                <Column\r\n                                    dataKey=\"remove\"\r\n                                    width={30}\r\n                                    cellRenderer={this.table_remove_cell_renderer}\r\n                                />\r\n                            </Table>\r\n                        )}\r\n                    </AutoSizer>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n\r\n    private add_wanted = (selected: any) => {\r\n        if (selected) {\r\n            let added = hunt_optimizer_store.wanted_items.find(\r\n                w => w.item_type.id === selected.value\r\n            );\r\n\r\n            if (!added) {\r\n                const item_type = item_type_stores.current.value.get_by_id(selected.value)!;\r\n                hunt_optimizer_store.wanted_items.push(new WantedItem(item_type, 1));\r\n            }\r\n        }\r\n    };\r\n\r\n    private remove_wanted = (wanted: WantedItem) => () => {\r\n        const i = hunt_optimizer_store.wanted_items.findIndex(w => w === wanted);\r\n\r\n        if (i !== -1) {\r\n            hunt_optimizer_store.wanted_items.splice(i, 1);\r\n        }\r\n    };\r\n\r\n    private table_remove_cell_renderer: TableCellRenderer = ({ rowData }) => {\r\n        return <Button type=\"link\" icon=\"delete\" onClick={this.remove_wanted(rowData)} />;\r\n    };\r\n\r\n    private no_rows_renderer = () => {\r\n        return (\r\n            <div className=\"ho-WantedItemsComponent-no-rows\">\r\n                <p>\r\n                    Add some items with the above drop down and click \"Optimize\" to see the result\r\n                    on the right.\r\n                </p>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    private on_help_visible_change = (visible: boolean) => {\r\n        this.setState({ helpVisible: visible });\r\n    };\r\n}\r\n\r\nfunction Help(): JSX.Element {\r\n    return (\r\n        <div className=\"ho-WantedItemsComponent-help\">\r\n            <p>\r\n                Add some items with the drop down and click \"Optimize\" to see the optimal\r\n                combination of hunt methods on the right.\r\n            </p>\r\n            <p>\r\n                At the moment a method is simply a quest run-through. Partial quest run-throughs are\r\n                coming. View the list of methods on the \"Methods\" tab. Each method takes a certain\r\n                amount of time, which affects the optimization result. Make sure the times are\r\n                correct for you.\r\n            </p>\r\n            <p>Only enemy drops are considered. Box drops are coming.</p>\r\n            <p>\r\n                The optimal result is calculated using linear optimization. The optimizer takes rare\r\n                enemies and the fact that pan arms can be split in two into account.\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\n@observer\r\nclass WantedAmountCell extends Component<{ wantedItem: WantedItem }> {\r\n    render(): ReactNode {\r\n        const wanted = this.props.wantedItem;\r\n\r\n        return (\r\n            <InputNumber\r\n                min={0}\r\n                max={10}\r\n                value={wanted.amount}\r\n                onChange={this.wanted_amount_changed}\r\n                size=\"small\"\r\n                style={{ width: \"100%\" }}\r\n            />\r\n        );\r\n    }\r\n\r\n    private wanted_amount_changed = (value?: number) => {\r\n        if (value != null && value >= 0) {\r\n            this.props.wantedItem.amount = value;\r\n        }\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport { SectionId } from \"../domain\";\r\n\r\nexport function SectionIdIcon({\r\n    section_id,\r\n    size = 28,\r\n    title,\r\n}: {\r\n    section_id: SectionId;\r\n    size?: number;\r\n    title?: string;\r\n}): JSX.Element {\r\n    return (\r\n        <div\r\n            title={title}\r\n            style={{\r\n                display: \"inline-block\",\r\n                width: size,\r\n                height: size,\r\n                backgroundImage: `url(${process.env.PUBLIC_URL}/images/sectionids/${SectionId[section_id]}.png)`,\r\n                backgroundSize: size,\r\n            }}\r\n        />\r\n    );\r\n}\r\n","import { computed } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { Component, ReactNode } from \"react\";\r\nimport { AutoSizer, Index } from \"react-virtualized\";\r\nimport { Difficulty, Episode, SectionId } from \"../../domain\";\r\nimport { hunt_optimizer_store, OptimalMethod } from \"../../stores/HuntOptimizerStore\";\r\nimport { BigTable, Column } from \"../BigTable\";\r\nimport { SectionIdIcon } from \"../SectionIdIcon\";\r\nimport { hours_to_string } from \"../time\";\r\nimport \"./OptimizationResultComponent.less\";\r\n\r\n@observer\r\nexport class OptimizationResultComponent extends Component {\r\n    @computed private get columns(): Column<OptimalMethod>[] {\r\n        // Standard columns.\r\n        const result = hunt_optimizer_store.result;\r\n        const optimal_methods = result ? result.optimal_methods : [];\r\n        let total_runs = 0;\r\n        let total_time = 0;\r\n\r\n        for (const method of optimal_methods) {\r\n            total_runs += method.runs;\r\n            total_time += method.total_time;\r\n        }\r\n\r\n        const columns: Column<OptimalMethod>[] = [\r\n            {\r\n                name: \"Difficulty\",\r\n                width: 75,\r\n                cell_renderer: result => Difficulty[result.difficulty],\r\n                footer_value: \"Totals:\",\r\n            },\r\n            {\r\n                name: \"Method\",\r\n                width: 200,\r\n                cell_renderer: result => result.method_name,\r\n                tooltip: result => result.method_name,\r\n            },\r\n            {\r\n                name: \"Ep.\",\r\n                width: 34,\r\n                cell_renderer: result => Episode[result.method_episode],\r\n            },\r\n            {\r\n                name: \"Section ID\",\r\n                width: 80,\r\n                cell_renderer: result => (\r\n                    <div className=\"ho-OptimizationResultComponent-sid-col\">\r\n                        {result.section_ids.map(sid => (\r\n                            <SectionIdIcon section_id={sid} key={sid} size={20} />\r\n                        ))}\r\n                    </div>\r\n                ),\r\n                tooltip: result => result.section_ids.map(sid => SectionId[sid]).join(\", \"),\r\n            },\r\n            {\r\n                name: \"Time/Run\",\r\n                width: 80,\r\n                cell_renderer: result => hours_to_string(result.method_time),\r\n                class_name: \"number\",\r\n            },\r\n            {\r\n                name: \"Runs\",\r\n                width: 60,\r\n                cell_renderer: result => result.runs.toFixed(1),\r\n                tooltip: result => result.runs.toString(),\r\n                footer_value: total_runs.toFixed(1),\r\n                footer_tooltip: total_runs.toString(),\r\n                class_name: \"number\",\r\n            },\r\n            {\r\n                name: \"Total Hours\",\r\n                width: 90,\r\n                cell_renderer: result => result.total_time.toFixed(1),\r\n                tooltip: result => result.total_time.toString(),\r\n                footer_value: total_time.toFixed(1),\r\n                footer_tooltip: total_time.toString(),\r\n                class_name: \"number\",\r\n            },\r\n        ];\r\n\r\n        // Add one column per item.\r\n        if (result) {\r\n            for (const item of result.wanted_items) {\r\n                let totalCount = 0;\r\n\r\n                for (const method of optimal_methods) {\r\n                    totalCount += method.item_counts.get(item) || 0;\r\n                }\r\n\r\n                columns.push({\r\n                    name: item.name,\r\n                    width: 80,\r\n                    cell_renderer: result => {\r\n                        const count = result.item_counts.get(item);\r\n                        return count ? count.toFixed(2) : \"\";\r\n                    },\r\n                    tooltip: result => {\r\n                        const count = result.item_counts.get(item);\r\n                        return count ? count.toString() : \"\";\r\n                    },\r\n                    class_name: \"number\",\r\n                    footer_value: totalCount.toFixed(2),\r\n                    footer_tooltip: totalCount.toString(),\r\n                });\r\n            }\r\n        }\r\n\r\n        return columns;\r\n    }\r\n\r\n    // Make sure render is called when result changes.\r\n    @computed private get update_trigger(): any {\r\n        return hunt_optimizer_store.result;\r\n    }\r\n\r\n    render(): ReactNode {\r\n        this.update_trigger; // eslint-disable-line\r\n        const result = hunt_optimizer_store.result;\r\n\r\n        return (\r\n            <section className=\"ho-OptimizationResultComponent\">\r\n                <h3>Optimization Result</h3>\r\n                <div className=\"ho-OptimizationResultComponent-table\">\r\n                    <AutoSizer>\r\n                        {({ width, height }) => (\r\n                            <BigTable\r\n                                width={width}\r\n                                height={height}\r\n                                row_count={result ? result.optimal_methods.length : 0}\r\n                                columns={this.columns}\r\n                                fixed_column_count={4}\r\n                                record={this.record}\r\n                                footer={result != null}\r\n                                update_trigger={this.update_trigger}\r\n                            />\r\n                        )}\r\n                    </AutoSizer>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n\r\n    private record = ({ index }: Index): OptimalMethod => {\r\n        return hunt_optimizer_store.result!.optimal_methods[index];\r\n    };\r\n}\r\n","/**\r\n * @param hours can be fractional.\r\n * @returns a string of the shape ##:##.\r\n */\r\nexport function hours_to_string(hours: number): string {\r\n    const h = Math.floor(hours);\r\n    const m = Math.round(60 * (hours - h));\r\n    return `${h.toString().padStart(2, \"0\")}:${m.toString().padStart(2, \"0\")}`;\r\n}\r\n","import React from \"react\";\r\nimport { WantedItemsComponent } from \"./WantedItemsComponent\";\r\nimport { OptimizationResultComponent } from \"./OptimizationResultComponent\";\r\nimport \"./OptimizerComponent.css\";\r\n\r\nexport function OptimizerComponent(): JSX.Element {\r\n    return (\r\n        <section className=\"ho-OptimizerComponent\">\r\n            <WantedItemsComponent />\r\n            <OptimizationResultComponent />\r\n        </section>\r\n    );\r\n}\r\n","import { Tabs } from \"antd\";\r\nimport React from \"react\";\r\nimport \"./HuntOptimizerComponent.css\";\r\nimport { MethodsComponent } from \"./MethodsComponent\";\r\nimport { OptimizerComponent } from \"./OptimizerComponent\";\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nexport function HuntOptimizerComponent(): JSX.Element {\r\n    return (\r\n        <section className=\"ho-HuntOptimizerComponent\">\r\n            <Tabs type=\"card\">\r\n                <TabPane tab=\"Optimize\" key=\"optimize\">\r\n                    <OptimizerComponent />\r\n                </TabPane>\r\n                <TabPane tab=\"Methods\" key=\"methods\">\r\n                    <MethodsComponent />\r\n                </TabPane>\r\n            </Tabs>\r\n        </section>\r\n    );\r\n}\r\n","export enum Endianness {\r\n    Little,\r\n    Big,\r\n}\r\n","// TODO: remove dependency on text-encoding because it is no longer maintained.\r\nimport { TextDecoder, TextEncoder } from \"text-encoding\";\r\n\r\nexport const ASCII_DECODER = new TextDecoder(\"ascii\");\r\nexport const UTF_16BE_DECODER = new TextDecoder(\"utf-16be\");\r\nexport const UTF_16LE_DECODER = new TextDecoder(\"utf-16le\");\r\n\r\nexport const ASCII_ENCODER = new TextEncoder(\"ascii\");\r\nexport const UTF_16BE_ENCODER = new TextEncoder(\"utf-16be\");\r\nexport const UTF_16LE_ENCODER = new TextEncoder(\"utf-16le\");\r\n","import {\r\n    ASCII_DECODER,\r\n    UTF_16BE_DECODER,\r\n    UTF_16BE_ENCODER,\r\n    UTF_16LE_DECODER,\r\n    UTF_16LE_ENCODER,\r\n} from \".\";\r\nimport { Endianness } from \"..\";\r\nimport { Cursor } from \"./Cursor\";\r\nimport { Vec3, Vec2 } from \"../vector\";\r\n\r\n/**\r\n * A cursor for reading from an array buffer or part of an array buffer.\r\n */\r\nexport class ArrayBufferCursor implements Cursor {\r\n    get offset(): number {\r\n        return this.dv.byteOffset;\r\n    }\r\n\r\n    get size(): number {\r\n        return this.dv.byteLength;\r\n    }\r\n\r\n    set size(size: number) {\r\n        this.dv = new DataView(this.buffer, this.offset, size);\r\n    }\r\n\r\n    protected _position: number;\r\n\r\n    get position(): number {\r\n        return this._position;\r\n    }\r\n\r\n    protected little_endian!: boolean;\r\n\r\n    get endianness(): Endianness {\r\n        return this.little_endian ? Endianness.Little : Endianness.Big;\r\n    }\r\n\r\n    set endianness(endianness: Endianness) {\r\n        this.little_endian = endianness === Endianness.Little;\r\n        this.utf16_decoder = this.little_endian ? UTF_16LE_DECODER : UTF_16BE_DECODER;\r\n        this.utf16_encoder = this.little_endian ? UTF_16LE_ENCODER : UTF_16BE_ENCODER;\r\n    }\r\n\r\n    get bytes_left(): number {\r\n        return this.size - this.position;\r\n    }\r\n\r\n    protected buffer: ArrayBuffer;\r\n    protected dv: DataView;\r\n\r\n    private utf16_decoder: TextDecoder = UTF_16BE_DECODER;\r\n    private utf16_encoder: TextEncoder = UTF_16BE_ENCODER;\r\n\r\n    /**\r\n     * @param buffer The buffer to read from.\r\n     * @param endianness Decides in which byte order multi-byte integers and floats will be interpreted.\r\n     * @param offset The start offset of the part that will be read from.\r\n     * @param size The size of the part that will be read from.\r\n     */\r\n    constructor(\r\n        buffer: ArrayBuffer,\r\n        endianness: Endianness,\r\n        offset: number = 0,\r\n        size: number = buffer.byteLength\r\n    ) {\r\n        this.buffer = buffer;\r\n        this.dv = new DataView(buffer, offset, size);\r\n        this.endianness = endianness;\r\n        this._position = 0;\r\n    }\r\n\r\n    seek(offset: number): this {\r\n        return this.seek_start(this.position + offset);\r\n    }\r\n\r\n    seek_start(offset: number): this {\r\n        if (offset < 0 || offset > this.size) {\r\n            throw new Error(`Offset ${offset} is out of bounds.`);\r\n        }\r\n\r\n        this._position = offset;\r\n        return this;\r\n    }\r\n\r\n    seek_end(offset: number): this {\r\n        if (offset < 0 || offset > this.size) {\r\n            throw new Error(`Offset ${offset} is out of bounds.`);\r\n        }\r\n\r\n        this._position = this.size - offset;\r\n        return this;\r\n    }\r\n\r\n    u8(): number {\r\n        return this.u8_at(this._position++);\r\n    }\r\n\r\n    u8_at(offset: number): number {\r\n        return this.dv.getUint8(offset);\r\n    }\r\n\r\n    u16(): number {\r\n        const r = this.u16_at(this.position);\r\n        this._position += 2;\r\n        return r;\r\n    }\r\n\r\n    u16_at(offset: number): number {\r\n        return this.dv.getUint16(offset, this.little_endian);\r\n    }\r\n\r\n    u32(): number {\r\n        const r = this.u32_at(this.position);\r\n        this._position += 4;\r\n        return r;\r\n    }\r\n\r\n    u32_at(offset: number): number {\r\n        return this.dv.getUint32(offset, this.little_endian);\r\n    }\r\n\r\n    i8(): number {\r\n        return this.i8_at(this._position++);\r\n    }\r\n\r\n    i8_at(offset: number): number {\r\n        return this.dv.getInt8(offset);\r\n    }\r\n\r\n    i16(): number {\r\n        const r = this.i16_at(this.position);\r\n        this._position += 2;\r\n        return r;\r\n    }\r\n\r\n    i16_at(offset: number): number {\r\n        return this.dv.getInt16(offset, this.little_endian);\r\n    }\r\n\r\n    i32(): number {\r\n        const r = this.i32_at(this.position);\r\n        this._position += 4;\r\n        return r;\r\n    }\r\n\r\n    i32_at(offset: number): number {\r\n        return this.dv.getInt32(offset, this.little_endian);\r\n    }\r\n\r\n    f32(): number {\r\n        const r = this.f32_at(this.position);\r\n        this._position += 4;\r\n        return r;\r\n    }\r\n\r\n    f32_at(offset: number): number {\r\n        return this.dv.getFloat32(offset, this.little_endian);\r\n    }\r\n\r\n    u8_array(n: number): number[] {\r\n        const array = [];\r\n        for (let i = 0; i < n; ++i) array.push(this.dv.getUint8(this._position++));\r\n        return array;\r\n    }\r\n\r\n    u16_array(n: number): number[] {\r\n        const array = [];\r\n\r\n        for (let i = 0; i < n; ++i) {\r\n            array.push(this.dv.getUint16(this.position, this.little_endian));\r\n            this._position += 2;\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    u32_array(n: number): number[] {\r\n        const array = [];\r\n\r\n        for (let i = 0; i < n; ++i) {\r\n            array.push(this.dv.getUint32(this.position, this.little_endian));\r\n            this._position += 4;\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    vec2_f32(): Vec2 {\r\n        return new Vec2(this.f32(), this.f32());\r\n    }\r\n\r\n    vec3_f32(): Vec3 {\r\n        return new Vec3(this.f32(), this.f32(), this.f32());\r\n    }\r\n\r\n    take(size: number): ArrayBufferCursor {\r\n        const offset = this.offset + this.position;\r\n        const wrapper = new ArrayBufferCursor(this.buffer, this.endianness, offset, size);\r\n        this._position += size;\r\n        return wrapper;\r\n    }\r\n\r\n    string_ascii(\r\n        max_byte_length: number,\r\n        null_terminated: boolean,\r\n        drop_remaining: boolean\r\n    ): string {\r\n        const string_length = null_terminated\r\n            ? this.index_of_u8(0, max_byte_length) - this.position\r\n            : max_byte_length;\r\n\r\n        const view = new DataView(this.buffer, this.offset + this.position, string_length);\r\n        const r = ASCII_DECODER.decode(view);\r\n\r\n        this._position += drop_remaining\r\n            ? max_byte_length\r\n            : Math.min(string_length + 1, max_byte_length);\r\n\r\n        return r;\r\n    }\r\n\r\n    string_utf16(\r\n        max_byte_length: number,\r\n        null_terminated: boolean,\r\n        drop_remaining: boolean\r\n    ): string {\r\n        const string_length = null_terminated\r\n            ? this.index_of_u16(0, max_byte_length) - this.position\r\n            : Math.floor(max_byte_length / 2) * 2;\r\n\r\n        const view = new DataView(this.buffer, this.offset + this.position, string_length);\r\n        const r = this.utf16_decoder.decode(view);\r\n\r\n        this._position += drop_remaining\r\n            ? max_byte_length\r\n            : Math.min(string_length + 2, max_byte_length);\r\n\r\n        return r;\r\n    }\r\n\r\n    array_buffer(size: number = this.size - this.position): ArrayBuffer {\r\n        const r = this.buffer.slice(\r\n            this.offset + this.position,\r\n            this.offset + this.position + size\r\n        );\r\n        this._position += size;\r\n        return r;\r\n    }\r\n\r\n    copy_to_uint8_array(array: Uint8Array, size: number = this.size - this.position): this {\r\n        array.set(new Uint8Array(this.buffer, this.offset + this.position, size));\r\n        this._position += size;\r\n        return this;\r\n    }\r\n\r\n    private index_of_u8(value: number, max_byte_length: number): number {\r\n        const max_pos = Math.min(this.position + max_byte_length, this.size);\r\n\r\n        for (let i = this.position; i < max_pos; ++i) {\r\n            if (this.dv.getUint8(i) === value) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return this.position + max_byte_length;\r\n    }\r\n\r\n    private index_of_u16(value: number, max_byte_length: number): number {\r\n        const max_pos = Math.min(this.position + max_byte_length, this.size);\r\n\r\n        for (let i = this.position; i < max_pos; i += 2) {\r\n            if (this.dv.getUint16(i, this.little_endian) === value) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return this.position + max_byte_length;\r\n    }\r\n}\r\n","import { Cursor } from \"../cursor/Cursor\";\r\n\r\nexport type Rel = {\r\n    data_offset: number;\r\n    index: RelIndexEntry[];\r\n};\r\n\r\nexport type RelIndexEntry = {\r\n    offset: number;\r\n    size: number;\r\n};\r\n\r\nexport function parse_rel(cursor: Cursor, parse_index: boolean): Rel {\r\n    cursor.seek_end(32);\r\n\r\n    const index_offset = cursor.u32();\r\n    const index_size = cursor.u32();\r\n    cursor.seek(8); // Typically 1, 0, 0,...\r\n    const data_offset = cursor.u32();\r\n    // Typically followed by 12 nul bytes.\r\n\r\n    cursor.seek_start(index_offset);\r\n    const index = parse_index ? parse_indices(cursor, index_size) : [];\r\n\r\n    return { data_offset, index };\r\n}\r\n\r\nfunction parse_indices(cursor: Cursor, index_size: number): RelIndexEntry[] {\r\n    const compact_offsets = cursor.u16_array(index_size);\r\n    const index: RelIndexEntry[] = [];\r\n    let expanded_offset = 0;\r\n\r\n    for (const compact_offset of compact_offsets) {\r\n        expanded_offset = expanded_offset + 4 * compact_offset;\r\n\r\n        // Size is not always present.\r\n        cursor.seek_start(expanded_offset - 4);\r\n        const size = cursor.u32();\r\n        const offset = cursor.u32();\r\n        index.push({ offset, size });\r\n    }\r\n\r\n    return index;\r\n}\r\n","import { Cursor } from \"../cursor/Cursor\";\r\nimport { Vec3 } from \"../vector\";\r\nimport { parse_rel } from \"./rel\";\r\n\r\nexport type CollisionObject = {\r\n    meshes: CollisionMesh[];\r\n};\r\n\r\nexport type CollisionMesh = {\r\n    vertices: Vec3[];\r\n    triangles: CollisionTriangle[];\r\n};\r\n\r\nexport type CollisionTriangle = {\r\n    indices: [number, number, number];\r\n    flags: number;\r\n    normal: Vec3;\r\n};\r\n\r\nexport function parse_area_collision_geometry(cursor: Cursor): CollisionObject {\r\n    const { data_offset } = parse_rel(cursor, false);\r\n    cursor.seek_start(data_offset);\r\n    const main_offset_table_offset = cursor.u32();\r\n    cursor.seek_start(main_offset_table_offset);\r\n\r\n    const object: CollisionObject = {\r\n        meshes: [],\r\n    };\r\n\r\n    while (cursor.bytes_left) {\r\n        const start_pos = cursor.position;\r\n\r\n        const block_trailer_offset = cursor.u32();\r\n\r\n        if (block_trailer_offset === 0) {\r\n            break;\r\n        }\r\n\r\n        const mesh: CollisionMesh = {\r\n            vertices: [],\r\n            triangles: [],\r\n        };\r\n        object.meshes.push(mesh);\r\n\r\n        cursor.seek_start(block_trailer_offset);\r\n\r\n        const vertex_count = cursor.u32();\r\n        const vertex_table_offset = cursor.u32();\r\n        const triangle_count = cursor.u32();\r\n        const triangle_table_offset = cursor.u32();\r\n\r\n        cursor.seek_start(vertex_table_offset);\r\n\r\n        for (let i = 0; i < vertex_count; i++) {\r\n            const x = cursor.f32();\r\n            const y = cursor.f32();\r\n            const z = cursor.f32();\r\n\r\n            mesh.vertices.push(new Vec3(x, y, z));\r\n        }\r\n\r\n        cursor.seek_start(triangle_table_offset);\r\n\r\n        for (let i = 0; i < triangle_count; i++) {\r\n            const v1 = cursor.u16();\r\n            const v2 = cursor.u16();\r\n            const v3 = cursor.u16();\r\n            const flags = cursor.u16();\r\n            const n_x = cursor.f32();\r\n            const n_y = cursor.f32();\r\n            const n_z = cursor.f32();\r\n            cursor.seek(16);\r\n\r\n            mesh.triangles.push({\r\n                indices: [v1, v2, v3],\r\n                flags,\r\n                normal: new Vec3(n_x, n_y, n_z),\r\n            });\r\n        }\r\n\r\n        cursor.seek_start(start_pos + 24);\r\n    }\r\n\r\n    return object;\r\n}\r\n","import { Cursor } from \"../cursor/Cursor\";\r\n\r\nexport type IffChunk = {\r\n    /**\r\n     * 32-bit unsigned integer.\r\n     */\r\n    type: number;\r\n    data: Cursor;\r\n};\r\n\r\n/**\r\n * PSO uses a little endian variant of the IFF format.\r\n * IFF files contain chunks preceded by an 8-byte header.\r\n * The header consists of 4 ASCII characters for the \"Type ID\" and a 32-bit integer specifying the chunk size.\r\n */\r\nexport function parse_iff(cursor: Cursor): IffChunk[] {\r\n    const chunks: IffChunk[] = [];\r\n\r\n    while (cursor.bytes_left) {\r\n        const type = cursor.u32();\r\n        const size = cursor.u32();\r\n\r\n        if (size > cursor.bytes_left) {\r\n            break;\r\n        }\r\n\r\n        chunks.push({\r\n            type,\r\n            data: cursor.take(size),\r\n        });\r\n    }\r\n\r\n    return chunks;\r\n}\r\n","import Logger from \"js-logger\";\r\nimport { Cursor } from \"../../cursor/Cursor\";\r\nimport { Vec2, Vec3 } from \"../../vector\";\r\n\r\nconst logger = Logger.get(\"data_formats/parsing/ninja/njcm\");\r\n\r\n// TODO:\r\n// - colors\r\n// - bump maps\r\n\r\nexport type NjcmModel = {\r\n    type: \"njcm\";\r\n    /**\r\n     * Sparse array of vertices.\r\n     */\r\n    vertices: NjcmVertex[];\r\n    meshes: NjcmTriangleStrip[];\r\n    collision_sphere_center: Vec3;\r\n    collision_sphere_radius: number;\r\n};\r\n\r\nexport type NjcmVertex = {\r\n    position: Vec3;\r\n    normal?: Vec3;\r\n    bone_weight: number;\r\n    bone_weight_status: number;\r\n    calc_continue: boolean;\r\n};\r\n\r\nenum NjcmChunkType {\r\n    Unknown,\r\n    Null,\r\n    Bits,\r\n    CachePolygonList,\r\n    DrawPolygonList,\r\n    Tiny,\r\n    Material,\r\n    Vertex,\r\n    Volume,\r\n    Strip,\r\n    End,\r\n}\r\n\r\ntype NjcmChunk = {\r\n    type: NjcmChunkType;\r\n    type_id: number;\r\n} & (\r\n    | NjcmUnknownChunk\r\n    | NjcmNullChunk\r\n    | NjcmBitsChunk\r\n    | NjcmCachePolygonListChunk\r\n    | NjcmDrawPolygonListChunk\r\n    | NjcmTinyChunk\r\n    | NjcmMaterialChunk\r\n    | NjcmVertexChunk\r\n    | NjcmVolumeChunk\r\n    | NjcmStripChunk\r\n    | NjcmEndChunk);\r\n\r\ntype NjcmUnknownChunk = {\r\n    type: NjcmChunkType.Unknown;\r\n};\r\n\r\ntype NjcmNullChunk = {\r\n    type: NjcmChunkType.Null;\r\n};\r\n\r\ntype NjcmBitsChunk = {\r\n    type: NjcmChunkType.Bits;\r\n};\r\n\r\ntype NjcmCachePolygonListChunk = {\r\n    type: NjcmChunkType.CachePolygonList;\r\n    cache_index: number;\r\n    offset: number;\r\n};\r\n\r\ntype NjcmDrawPolygonListChunk = {\r\n    type: NjcmChunkType.DrawPolygonList;\r\n    cache_index: number;\r\n};\r\n\r\ntype NjcmTinyChunk = {\r\n    type: NjcmChunkType.Tiny;\r\n    flip_u: boolean;\r\n    flip_v: boolean;\r\n    clamp_u: boolean;\r\n    clamp_v: boolean;\r\n    mipmap_d_adjust: number;\r\n    filter_mode: number;\r\n    super_sample: boolean;\r\n    texture_id: number;\r\n};\r\n\r\ntype NjcmMaterialChunk = {\r\n    type: NjcmChunkType.Material;\r\n};\r\n\r\ntype NjcmVertexChunk = {\r\n    type: NjcmChunkType.Vertex;\r\n    vertices: NjcmChunkVertex[];\r\n};\r\n\r\ntype NjcmVolumeChunk = {\r\n    type: NjcmChunkType.Volume;\r\n};\r\n\r\ntype NjcmStripChunk = {\r\n    type: NjcmChunkType.Strip;\r\n    triangle_strips: NjcmTriangleStrip[];\r\n};\r\n\r\ntype NjcmEndChunk = {\r\n    type: NjcmChunkType.End;\r\n};\r\n\r\ntype NjcmChunkVertex = {\r\n    index: number;\r\n    position: Vec3;\r\n    normal?: Vec3;\r\n    bone_weight: number;\r\n    bone_weight_status: number;\r\n    calc_continue: boolean;\r\n};\r\n\r\ntype NjcmTriangleStrip = {\r\n    ignore_light: boolean;\r\n    ignore_specular: boolean;\r\n    ignore_ambient: boolean;\r\n    use_alpha: boolean;\r\n    double_side: boolean;\r\n    flat_shading: boolean;\r\n    environment_mapping: boolean;\r\n    clockwise_winding: boolean;\r\n    has_tex_coords: boolean;\r\n    has_normal: boolean;\r\n    texture_id?: number;\r\n    vertices: NjcmMeshVertex[];\r\n};\r\n\r\ntype NjcmMeshVertex = {\r\n    index: number;\r\n    normal?: Vec3;\r\n    tex_coords?: Vec2;\r\n};\r\n\r\nexport function parse_njcm_model(cursor: Cursor, cached_chunk_offsets: number[]): NjcmModel {\r\n    const vlist_offset = cursor.u32(); // Vertex list\r\n    const plist_offset = cursor.u32(); // Triangle strip index list\r\n    const bounding_sphere_center = cursor.vec3_f32();\r\n    const bounding_sphere_radius = cursor.f32();\r\n    const vertices: NjcmVertex[] = [];\r\n    const meshes: NjcmTriangleStrip[] = [];\r\n\r\n    if (vlist_offset) {\r\n        cursor.seek_start(vlist_offset);\r\n\r\n        for (const chunk of parse_chunks(cursor, cached_chunk_offsets, true)) {\r\n            if (chunk.type === NjcmChunkType.Vertex) {\r\n                for (const vertex of chunk.vertices) {\r\n                    vertices[vertex.index] = {\r\n                        position: vertex.position,\r\n                        normal: vertex.normal,\r\n                        bone_weight: vertex.bone_weight,\r\n                        bone_weight_status: vertex.bone_weight_status,\r\n                        calc_continue: vertex.calc_continue,\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (plist_offset) {\r\n        cursor.seek_start(plist_offset);\r\n\r\n        let texture_id: number | undefined;\r\n\r\n        for (const chunk of parse_chunks(cursor, cached_chunk_offsets, false)) {\r\n            if (chunk.type === NjcmChunkType.Tiny) {\r\n                texture_id = chunk.texture_id;\r\n            } else if (chunk.type === NjcmChunkType.Strip) {\r\n                for (const strip of chunk.triangle_strips) {\r\n                    strip.texture_id = texture_id;\r\n                }\r\n\r\n                meshes.push(...chunk.triangle_strips);\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        type: \"njcm\",\r\n        vertices,\r\n        meshes,\r\n        collision_sphere_center: bounding_sphere_center,\r\n        collision_sphere_radius: bounding_sphere_radius,\r\n    };\r\n}\r\n\r\n// TODO: don't reparse when DrawPolygonList chunk is encountered.\r\nfunction parse_chunks(\r\n    cursor: Cursor,\r\n    cached_chunk_offsets: number[],\r\n    wide_end_chunks: boolean\r\n): NjcmChunk[] {\r\n    const chunks: NjcmChunk[] = [];\r\n    let loop = true;\r\n\r\n    while (loop) {\r\n        const type_id = cursor.u8();\r\n        const flags = cursor.u8();\r\n        const chunk_start_position = cursor.position;\r\n        let size = 0;\r\n\r\n        if (type_id === 0) {\r\n            chunks.push({\r\n                type: NjcmChunkType.Null,\r\n                type_id,\r\n            });\r\n        } else if (1 <= type_id && type_id <= 3) {\r\n            chunks.push({\r\n                type: NjcmChunkType.Bits,\r\n                type_id,\r\n            });\r\n        } else if (type_id === 4) {\r\n            const cache_index = flags;\r\n            const offset = cursor.position;\r\n            chunks.push({\r\n                type: NjcmChunkType.CachePolygonList,\r\n                type_id,\r\n                cache_index,\r\n                offset,\r\n            });\r\n            cached_chunk_offsets[cache_index] = offset;\r\n            loop = false;\r\n        } else if (type_id === 5) {\r\n            const cache_index = flags;\r\n            const cached_offset = cached_chunk_offsets[cache_index];\r\n\r\n            if (cached_offset != null) {\r\n                cursor.seek_start(cached_offset);\r\n                chunks.push(...parse_chunks(cursor, cached_chunk_offsets, wide_end_chunks));\r\n            }\r\n\r\n            chunks.push({\r\n                type: NjcmChunkType.DrawPolygonList,\r\n                type_id,\r\n                cache_index,\r\n            });\r\n        } else if (8 <= type_id && type_id <= 9) {\r\n            size = 2;\r\n            const texture_bits_and_id = cursor.u16();\r\n            chunks.push({\r\n                type: NjcmChunkType.Tiny,\r\n                type_id,\r\n                flip_u: (type_id & 0x80) !== 0,\r\n                flip_v: (type_id & 0x40) !== 0,\r\n                clamp_u: (type_id & 0x20) !== 0,\r\n                clamp_v: (type_id & 0x10) !== 0,\r\n                mipmap_d_adjust: type_id & 0b1111,\r\n                filter_mode: texture_bits_and_id >>> 14,\r\n                super_sample: (texture_bits_and_id & 0x40) !== 0,\r\n                texture_id: texture_bits_and_id & 0x1fff,\r\n            });\r\n        } else if (17 <= type_id && type_id <= 31) {\r\n            size = 2 + 2 * cursor.u16();\r\n            chunks.push({\r\n                type: NjcmChunkType.Material,\r\n                type_id,\r\n            });\r\n        } else if (32 <= type_id && type_id <= 50) {\r\n            size = 2 + 4 * cursor.u16();\r\n            chunks.push({\r\n                type: NjcmChunkType.Vertex,\r\n                type_id,\r\n                vertices: parse_vertex_chunk(cursor, type_id, flags),\r\n            });\r\n        } else if (56 <= type_id && type_id <= 58) {\r\n            size = 2 + 2 * cursor.u16();\r\n            chunks.push({\r\n                type: NjcmChunkType.Volume,\r\n                type_id,\r\n            });\r\n        } else if (64 <= type_id && type_id <= 75) {\r\n            size = 2 + 2 * cursor.u16();\r\n            chunks.push({\r\n                type: NjcmChunkType.Strip,\r\n                type_id,\r\n                triangle_strips: parse_triangle_strip_chunk(cursor, type_id, flags),\r\n            });\r\n        } else if (type_id === 255) {\r\n            size = wide_end_chunks ? 2 : 0;\r\n            chunks.push({\r\n                type: NjcmChunkType.End,\r\n                type_id,\r\n            });\r\n            loop = false;\r\n        } else {\r\n            size = 2 + 2 * cursor.u16();\r\n            chunks.push({\r\n                type: NjcmChunkType.Unknown,\r\n                type_id,\r\n            });\r\n            logger.warn(`Unknown chunk type ${type_id} at offset ${chunk_start_position}.`);\r\n        }\r\n\r\n        cursor.seek_start(chunk_start_position + size);\r\n    }\r\n\r\n    return chunks;\r\n}\r\n\r\nfunction parse_vertex_chunk(\r\n    cursor: Cursor,\r\n    chunk_type_id: number,\r\n    flags: number\r\n): NjcmChunkVertex[] {\r\n    if (chunk_type_id < 32 || chunk_type_id > 50) {\r\n        logger.warn(`Unknown vertex chunk type ${chunk_type_id}.`);\r\n        return [];\r\n    }\r\n\r\n    const bone_weight_status = flags & 0b11;\r\n    const calc_continue = (flags & 0x80) !== 0;\r\n\r\n    const index = cursor.u16();\r\n    const vertex_count = cursor.u16();\r\n\r\n    const vertices: NjcmChunkVertex[] = [];\r\n\r\n    for (let i = 0; i < vertex_count; ++i) {\r\n        const vertex: NjcmChunkVertex = {\r\n            index: index + i,\r\n            position: cursor.vec3_f32(),\r\n            bone_weight: 1,\r\n            bone_weight_status,\r\n            calc_continue,\r\n        };\r\n\r\n        if (chunk_type_id === 32) {\r\n            // NJD_CV_SH\r\n            cursor.seek(4); // Always 1.0\r\n        } else if (chunk_type_id === 33) {\r\n            // NJD_CV_VN_SH\r\n            cursor.seek(4); // Always 1.0\r\n            vertex.normal = cursor.vec3_f32();\r\n            cursor.seek(4); // Always 0.0\r\n        } else if (35 <= chunk_type_id && chunk_type_id <= 40) {\r\n            if (chunk_type_id === 37) {\r\n                // NJD_CV_NF\r\n                // NinjaFlags32\r\n                vertex.index = index + cursor.u16();\r\n                vertex.bone_weight = cursor.u16() / 255;\r\n            } else {\r\n                // Skip user flags and material information.\r\n                cursor.seek(4);\r\n            }\r\n        } else if (41 <= chunk_type_id && chunk_type_id <= 47) {\r\n            vertex.normal = cursor.vec3_f32();\r\n\r\n            if (chunk_type_id >= 42) {\r\n                if (chunk_type_id === 44) {\r\n                    // NJD_CV_VN_NF\r\n                    // NinjaFlags32\r\n                    vertex.index = index + cursor.u16();\r\n                    vertex.bone_weight = cursor.u16() / 255;\r\n                } else {\r\n                    // Skip user flags and material information.\r\n                    cursor.seek(4);\r\n                }\r\n            }\r\n        } else if (48 <= chunk_type_id && chunk_type_id <= 50) {\r\n            // 32-Bit vertex normal in format: reserved(2)|x(10)|y(10)|z(10)\r\n            const normal = cursor.u32();\r\n            vertex.normal = new Vec3(\r\n                ((normal >> 20) & 0x3ff) / 0x3ff,\r\n                ((normal >> 10) & 0x3ff) / 0x3ff,\r\n                (normal & 0x3ff) / 0x3ff\r\n            );\r\n\r\n            if (chunk_type_id >= 49) {\r\n                // Skip user flags and material information.\r\n                cursor.seek(4);\r\n            }\r\n        }\r\n\r\n        vertices.push(vertex);\r\n    }\r\n\r\n    return vertices;\r\n}\r\n\r\nfunction parse_triangle_strip_chunk(\r\n    cursor: Cursor,\r\n    chunk_type_id: number,\r\n    flags: number\r\n): NjcmTriangleStrip[] {\r\n    const render_flags = {\r\n        ignore_light: (flags & 0b1) !== 0,\r\n        ignore_specular: (flags & 0b10) !== 0,\r\n        ignore_ambient: (flags & 0b100) !== 0,\r\n        use_alpha: (flags & 0b1000) !== 0,\r\n        double_side: (flags & 0b10000) !== 0,\r\n        flat_shading: (flags & 0b100000) !== 0,\r\n        environment_mapping: (flags & 0b1000000) !== 0,\r\n    };\r\n    const user_offset_and_strip_count = cursor.u16();\r\n    const user_flags_size = user_offset_and_strip_count >>> 14;\r\n    const strip_count = user_offset_and_strip_count & 0x3fff;\r\n\r\n    let has_tex_coords = false;\r\n    let has_color = false;\r\n    let has_normal = false;\r\n    let has_double_tex_coords = false;\r\n\r\n    switch (chunk_type_id) {\r\n        case 64:\r\n            break;\r\n        case 65:\r\n        case 66:\r\n            has_tex_coords = true;\r\n            break;\r\n        case 67:\r\n            has_normal = true;\r\n            break;\r\n        case 68:\r\n        case 69:\r\n            has_tex_coords = true;\r\n            has_normal = true;\r\n            break;\r\n        case 70:\r\n            has_color = true;\r\n            break;\r\n        case 71:\r\n        case 72:\r\n            has_tex_coords = true;\r\n            has_color = true;\r\n            break;\r\n        case 73:\r\n            break;\r\n        case 74:\r\n        case 75:\r\n            has_double_tex_coords = true;\r\n            break;\r\n        default:\r\n            throw new Error(`Unexpected chunk type ID: ${chunk_type_id}.`);\r\n    }\r\n\r\n    const strips: NjcmTriangleStrip[] = [];\r\n\r\n    for (let i = 0; i < strip_count; ++i) {\r\n        const winding_flag_and_index_count = cursor.i16();\r\n        const clockwise_winding = winding_flag_and_index_count < 1;\r\n        const index_count = Math.abs(winding_flag_and_index_count);\r\n\r\n        const vertices: NjcmMeshVertex[] = [];\r\n\r\n        for (let j = 0; j < index_count; ++j) {\r\n            const vertex: NjcmMeshVertex = {\r\n                index: cursor.u16(),\r\n            };\r\n            vertices.push(vertex);\r\n\r\n            if (has_tex_coords) {\r\n                vertex.tex_coords = new Vec2(cursor.u16() / 255, cursor.u16() / 255);\r\n            }\r\n\r\n            // Ignore ARGB8888 color.\r\n            if (has_color) {\r\n                cursor.seek(4);\r\n            }\r\n\r\n            if (has_normal) {\r\n                vertex.normal = new Vec3(\r\n                    cursor.u16() / 255,\r\n                    cursor.u16() / 255,\r\n                    cursor.u16() / 255\r\n                );\r\n            }\r\n\r\n            // Ignore double texture coordinates (Ua, Vb, Ua, Vb).\r\n            if (has_double_tex_coords) {\r\n                cursor.seek(8);\r\n            }\r\n\r\n            // User flags start at the third vertex because they are per-triangle.\r\n            if (j >= 2) {\r\n                cursor.seek(2 * user_flags_size);\r\n            }\r\n        }\r\n\r\n        strips.push({\r\n            ...render_flags,\r\n            clockwise_winding,\r\n            has_tex_coords,\r\n            has_normal,\r\n            vertices,\r\n        });\r\n    }\r\n\r\n    return strips;\r\n}\r\n","import Logger from \"js-logger\";\r\nimport { Cursor } from \"../../cursor/Cursor\";\r\nimport { Vec2, Vec3 } from \"../../vector\";\r\n\r\nconst logger = Logger.get(\"data_formats/parsing/ninja/xj\");\r\n\r\n// TODO:\r\n// - vertex colors\r\n// - bump maps\r\n\r\nexport type XjModel = {\r\n    type: \"xj\";\r\n    vertices: XjVertex[];\r\n    meshes: XjMesh[];\r\n    collision_sphere_position: Vec3;\r\n    collision_sphere_radius: number;\r\n};\r\n\r\nexport type XjVertex = {\r\n    position: Vec3;\r\n    normal?: Vec3;\r\n    uv?: Vec2;\r\n};\r\n\r\nexport type XjMesh = {\r\n    material_properties: XjMaterialProperties;\r\n    indices: number[];\r\n};\r\n\r\nexport type XjMaterialProperties = {\r\n    alpha_src?: number;\r\n    alpha_dst?: number;\r\n    texture_id?: number;\r\n    diffuse_r?: number;\r\n    diffuse_g?: number;\r\n    diffuse_b?: number;\r\n    diffuse_a?: number;\r\n};\r\n\r\nexport function parse_xj_model(cursor: Cursor): XjModel {\r\n    cursor.seek(4); // Flags according to QEdit, seemingly always 0.\r\n    const vertex_info_table_offset = cursor.u32();\r\n    const vertex_info_count = cursor.u32();\r\n    const triangle_strip_table_offset = cursor.u32();\r\n    const triangle_strip_count = cursor.u32();\r\n    const transparent_triangle_strip_table_offset = cursor.u32();\r\n    const transparent_triangle_strip_count = cursor.u32();\r\n    const collision_sphere_position = cursor.vec3_f32();\r\n    const collision_sphere_radius = cursor.f32();\r\n\r\n    const model: XjModel = {\r\n        type: \"xj\",\r\n        vertices: [],\r\n        meshes: [],\r\n        collision_sphere_position,\r\n        collision_sphere_radius,\r\n    };\r\n\r\n    if (vertex_info_count >= 1) {\r\n        if (vertex_info_count > 1) {\r\n            logger.warn(`Vertex info count of ${vertex_info_count} was larger than expected.`);\r\n        }\r\n\r\n        model.vertices.push(...parse_vertex_info_table(cursor, vertex_info_table_offset));\r\n    }\r\n\r\n    model.meshes.push(\r\n        ...parse_triangle_strip_table(cursor, triangle_strip_table_offset, triangle_strip_count)\r\n    );\r\n\r\n    model.meshes.push(\r\n        ...parse_triangle_strip_table(\r\n            cursor,\r\n            transparent_triangle_strip_table_offset,\r\n            transparent_triangle_strip_count\r\n        )\r\n    );\r\n\r\n    return model;\r\n}\r\n\r\nfunction parse_vertex_info_table(cursor: Cursor, vertex_info_table_offset: number): XjVertex[] {\r\n    cursor.seek_start(vertex_info_table_offset);\r\n    const vertex_type = cursor.u16();\r\n    cursor.seek(2); // Flags?\r\n    const vertex_table_offset = cursor.u32();\r\n    const vertex_size = cursor.u32();\r\n    const vertex_count = cursor.u32();\r\n    const vertices: XjVertex[] = [];\r\n\r\n    for (let i = 0; i < vertex_count; ++i) {\r\n        cursor.seek_start(vertex_table_offset + i * vertex_size);\r\n\r\n        const position = cursor.vec3_f32();\r\n        let normal: Vec3 | undefined;\r\n        let uv: Vec2 | undefined;\r\n\r\n        switch (vertex_type) {\r\n            case 3:\r\n                normal = cursor.vec3_f32();\r\n                uv = cursor.vec2_f32();\r\n                break;\r\n            case 4:\r\n                // Skip 4 bytes.\r\n                break;\r\n            case 5:\r\n                cursor.seek(4);\r\n                uv = cursor.vec2_f32();\r\n                break;\r\n            case 6:\r\n                normal = cursor.vec3_f32();\r\n                // Skip 4 bytes.\r\n                break;\r\n            case 7:\r\n                normal = cursor.vec3_f32();\r\n                uv = cursor.vec2_f32();\r\n                break;\r\n            default:\r\n                logger.warn(`Unknown vertex type ${vertex_type} with size ${vertex_size}.`);\r\n                break;\r\n        }\r\n\r\n        vertices.push({\r\n            position,\r\n            normal,\r\n            uv,\r\n        });\r\n    }\r\n\r\n    return vertices;\r\n}\r\n\r\nfunction parse_triangle_strip_table(\r\n    cursor: Cursor,\r\n    triangle_strip_list_offset: number,\r\n    triangle_strip_count: number\r\n): XjMesh[] {\r\n    const strips: XjMesh[] = [];\r\n\r\n    for (let i = 0; i < triangle_strip_count; ++i) {\r\n        cursor.seek_start(triangle_strip_list_offset + i * 20);\r\n\r\n        const material_table_offset = cursor.u32();\r\n        const material_table_size = cursor.u32();\r\n        const index_list_offset = cursor.u32();\r\n        const index_count = cursor.u32();\r\n\r\n        const material_properties = parse_triangle_strip_material_properties(\r\n            cursor,\r\n            material_table_offset,\r\n            material_table_size\r\n        );\r\n\r\n        cursor.seek_start(index_list_offset);\r\n        const indices = cursor.u16_array(index_count);\r\n\r\n        strips.push({\r\n            material_properties,\r\n            indices,\r\n        });\r\n    }\r\n\r\n    return strips;\r\n}\r\n\r\nfunction parse_triangle_strip_material_properties(\r\n    cursor: Cursor,\r\n    offset: number,\r\n    size: number\r\n): XjMaterialProperties {\r\n    const props: XjMaterialProperties = {};\r\n\r\n    for (let i = 0; i < size; ++i) {\r\n        cursor.seek_start(offset + i * 16);\r\n\r\n        const type = cursor.u32();\r\n\r\n        switch (type) {\r\n            case 2:\r\n                props.alpha_src = cursor.u32();\r\n                props.alpha_dst = cursor.u32();\r\n                break;\r\n            case 3:\r\n                props.texture_id = cursor.u32();\r\n                break;\r\n            case 5:\r\n                props.diffuse_r = cursor.u8();\r\n                props.diffuse_g = cursor.u8();\r\n                props.diffuse_b = cursor.u8();\r\n                props.diffuse_a = cursor.u8();\r\n                break;\r\n        }\r\n    }\r\n\r\n    return props;\r\n}\r\n","import { Cursor } from \"../../cursor/Cursor\";\r\nimport { Vec3 } from \"../../vector\";\r\nimport { parse_iff } from \"../iff\";\r\nimport { NjcmModel, parse_njcm_model } from \"./njcm\";\r\nimport { parse_xj_model, XjModel } from \"./xj\";\r\n\r\nexport const ANGLE_TO_RAD = (2 * Math.PI) / 0xffff;\r\n\r\nconst NJCM = 0x4d434a4e;\r\n\r\nexport type NjModel = NjcmModel | XjModel;\r\n\r\nexport function is_njcm_model(model: NjModel): model is NjcmModel {\r\n    return model.type === \"njcm\";\r\n}\r\n\r\nexport function is_xj_model(model: NjModel): model is XjModel {\r\n    return model.type === \"xj\";\r\n}\r\n\r\nexport class NjObject<M extends NjModel> {\r\n    evaluation_flags: NjEvaluationFlags;\r\n    model: M | undefined;\r\n    position: Vec3;\r\n    rotation: Vec3; // Euler angles in radians.\r\n    scale: Vec3;\r\n    children: NjObject<M>[];\r\n\r\n    private bone_cache = new Map<number, NjObject<M> | null>();\r\n    private _bone_count = -1;\r\n\r\n    constructor(\r\n        evaluation_flags: NjEvaluationFlags,\r\n        model: M | undefined,\r\n        position: Vec3,\r\n        rotation: Vec3, // Euler angles in radians.\r\n        scale: Vec3,\r\n        children: NjObject<M>[]\r\n    ) {\r\n        this.evaluation_flags = evaluation_flags;\r\n        this.model = model;\r\n        this.position = position;\r\n        this.rotation = rotation;\r\n        this.scale = scale;\r\n        this.children = children;\r\n    }\r\n\r\n    bone_count(): number {\r\n        if (this._bone_count === -1) {\r\n            const id_ref: [number] = [0];\r\n            this.get_bone_internal(this, Infinity, id_ref);\r\n            this._bone_count = id_ref[0];\r\n        }\r\n\r\n        return this._bone_count;\r\n    }\r\n\r\n    get_bone(bone_id: number): NjObject<M> | undefined {\r\n        let bone = this.bone_cache.get(bone_id);\r\n\r\n        // Strict check because null means there's no bone with this id.\r\n        if (bone === undefined) {\r\n            bone = this.get_bone_internal(this, bone_id, [0]);\r\n            this.bone_cache.set(bone_id, bone || null);\r\n        }\r\n\r\n        return bone || undefined;\r\n    }\r\n\r\n    private get_bone_internal(\r\n        object: NjObject<M>,\r\n        bone_id: number,\r\n        id_ref: [number]\r\n    ): NjObject<M> | undefined {\r\n        if (!object.evaluation_flags.skip) {\r\n            const id = id_ref[0]++;\r\n            this.bone_cache.set(id, object);\r\n\r\n            if (id === bone_id) {\r\n                return object;\r\n            }\r\n        }\r\n\r\n        if (!object.evaluation_flags.break_child_trace) {\r\n            for (const child of object.children) {\r\n                const bone = this.get_bone_internal(child, bone_id, id_ref);\r\n                if (bone) return bone;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport type NjEvaluationFlags = {\r\n    no_translate: boolean;\r\n    no_rotate: boolean;\r\n    no_scale: boolean;\r\n    hidden: boolean;\r\n    break_child_trace: boolean;\r\n    zxy_rotation_order: boolean;\r\n    skip: boolean;\r\n    shape_skip: boolean;\r\n};\r\n\r\n/**\r\n * Parses an NJCM file.\r\n */\r\nexport function parse_nj(cursor: Cursor): NjObject<NjcmModel>[] {\r\n    return parse_ninja(cursor, parse_njcm_model, []);\r\n}\r\n\r\n/**\r\n * Parses an NJCM file.\r\n */\r\nexport function parse_xj(cursor: Cursor): NjObject<XjModel>[] {\r\n    return parse_ninja(cursor, parse_xj_model, undefined);\r\n}\r\n\r\n/**\r\n * Parses a ninja object.\r\n */\r\nexport function parse_xj_object(cursor: Cursor): NjObject<XjModel>[] {\r\n    return parse_sibling_objects(cursor, parse_xj_model, undefined);\r\n}\r\n\r\nfunction parse_ninja<M extends NjModel>(\r\n    cursor: Cursor,\r\n    parse_model: (cursor: Cursor, context: any) => M,\r\n    context: any\r\n): NjObject<M>[] {\r\n    // POF0 and other chunks types are ignored.\r\n    return parse_iff(cursor)\r\n        .filter(chunk => chunk.type === NJCM)\r\n        .flatMap(chunk => parse_sibling_objects(chunk.data, parse_model, context));\r\n}\r\n\r\n// TODO: cache model and object offsets so we don't reparse the same data.\r\nfunction parse_sibling_objects<M extends NjModel>(\r\n    cursor: Cursor,\r\n    parse_model: (cursor: Cursor, context: any) => M,\r\n    context: any\r\n): NjObject<M>[] {\r\n    const eval_flags = cursor.u32();\r\n    const no_translate = (eval_flags & 0b1) !== 0;\r\n    const no_rotate = (eval_flags & 0b10) !== 0;\r\n    const no_scale = (eval_flags & 0b100) !== 0;\r\n    const hidden = (eval_flags & 0b1000) !== 0;\r\n    const break_child_trace = (eval_flags & 0b10000) !== 0;\r\n    const zxy_rotation_order = (eval_flags & 0b100000) !== 0;\r\n    const skip = (eval_flags & 0b1000000) !== 0;\r\n    const shape_skip = (eval_flags & 0b10000000) !== 0;\r\n\r\n    const model_offset = cursor.u32();\r\n    const pos_x = cursor.f32();\r\n    const pos_y = cursor.f32();\r\n    const pos_z = cursor.f32();\r\n    const rotation_x = cursor.i32() * ANGLE_TO_RAD;\r\n    const rotation_y = cursor.i32() * ANGLE_TO_RAD;\r\n    const rotation_z = cursor.i32() * ANGLE_TO_RAD;\r\n    const scale_x = cursor.f32();\r\n    const scale_y = cursor.f32();\r\n    const scale_z = cursor.f32();\r\n    const child_offset = cursor.u32();\r\n    const sibling_offset = cursor.u32();\r\n\r\n    let model: M | undefined;\r\n    let children: NjObject<M>[];\r\n    let siblings: NjObject<M>[];\r\n\r\n    if (model_offset) {\r\n        cursor.seek_start(model_offset);\r\n        model = parse_model(cursor, context);\r\n    }\r\n\r\n    if (child_offset) {\r\n        cursor.seek_start(child_offset);\r\n        children = parse_sibling_objects(cursor, parse_model, context);\r\n    } else {\r\n        children = [];\r\n    }\r\n\r\n    if (sibling_offset) {\r\n        cursor.seek_start(sibling_offset);\r\n        siblings = parse_sibling_objects(cursor, parse_model, context);\r\n    } else {\r\n        siblings = [];\r\n    }\r\n\r\n    const object = new NjObject<M>(\r\n        {\r\n            no_translate,\r\n            no_rotate,\r\n            no_scale,\r\n            hidden,\r\n            break_child_trace,\r\n            zxy_rotation_order,\r\n            skip,\r\n            shape_skip,\r\n        },\r\n        model,\r\n        new Vec3(pos_x, pos_y, pos_z),\r\n        new Vec3(rotation_x, rotation_y, rotation_z),\r\n        new Vec3(scale_x, scale_y, scale_z),\r\n        children\r\n    );\r\n\r\n    return [object, ...siblings];\r\n}\r\n","import { Cursor } from \"../cursor/Cursor\";\r\nimport { Vec3 } from \"../vector\";\r\nimport { ANGLE_TO_RAD, NjObject, parse_xj_object } from \"./ninja\";\r\nimport { XjModel } from \"./ninja/xj\";\r\nimport { parse_rel } from \"./rel\";\r\n\r\nexport type RenderObject = {\r\n    sections: RenderSection[];\r\n};\r\n\r\nexport type RenderSection = {\r\n    id: number;\r\n    position: Vec3;\r\n    rotation: Vec3;\r\n    objects: NjObject<XjModel>[];\r\n};\r\n\r\nexport type Vertex = {\r\n    position: Vec3;\r\n    normal?: Vec3;\r\n};\r\n\r\nexport function parse_area_geometry(cursor: Cursor): RenderObject {\r\n    const sections: RenderSection[] = [];\r\n\r\n    cursor.seek_end(16);\r\n\r\n    const { data_offset } = parse_rel(cursor, false);\r\n    cursor.seek_start(data_offset);\r\n    cursor.seek(8); // Format \"fmt2\" in UTF-16.\r\n    const section_count = cursor.u32();\r\n    cursor.seek(4);\r\n    const section_table_offset = cursor.u32();\r\n    // const texture_name_offset = cursor.u32();\r\n\r\n    for (let i = 0; i < section_count; i++) {\r\n        cursor.seek_start(section_table_offset + 52 * i);\r\n\r\n        const section_id = cursor.i32();\r\n        const section_position = cursor.vec3_f32();\r\n        const section_rotation = new Vec3(\r\n            cursor.u32() * ANGLE_TO_RAD,\r\n            cursor.u32() * ANGLE_TO_RAD,\r\n            cursor.u32() * ANGLE_TO_RAD\r\n        );\r\n\r\n        cursor.seek(4);\r\n\r\n        const simple_geometry_offset_table_offset = cursor.u32();\r\n        // const animated_geometry_offset_table_offset = cursor.u32();\r\n        cursor.seek(4);\r\n        const simple_geometry_offset_count = cursor.u32();\r\n        // const animated_geometry_offset_count = cursor.u32();\r\n        // Ignore animated_geometry_offset_count and the last 4 bytes.\r\n\r\n        const objects = parse_geometry_table(\r\n            cursor,\r\n            simple_geometry_offset_table_offset,\r\n            simple_geometry_offset_count\r\n        );\r\n\r\n        sections.push({\r\n            id: section_id,\r\n            position: section_position,\r\n            rotation: section_rotation,\r\n            objects,\r\n        });\r\n    }\r\n\r\n    return { sections };\r\n}\r\n\r\n// TODO: don't reparse the same objects multiple times. Create DAG instead of tree.\r\nfunction parse_geometry_table(\r\n    cursor: Cursor,\r\n    table_offset: number,\r\n    table_entry_count: number\r\n): NjObject<XjModel>[] {\r\n    const objects: NjObject<XjModel>[] = [];\r\n\r\n    for (let i = 0; i < table_entry_count; i++) {\r\n        cursor.seek_start(table_offset + 16 * i);\r\n\r\n        let offset = cursor.u32();\r\n        cursor.seek(8);\r\n        const flags = cursor.u32();\r\n\r\n        if (flags & 0b100) {\r\n            offset = cursor.seek_start(offset).u32();\r\n        }\r\n\r\n        cursor.seek_start(offset);\r\n        objects.push(...parse_xj_object(cursor));\r\n    }\r\n\r\n    return objects;\r\n}\r\n","import {\r\n    BufferGeometry,\r\n    Float32BufferAttribute,\r\n    Uint16BufferAttribute,\r\n    Vector3,\r\n    Bone,\r\n} from \"three\";\r\n\r\nexport type BuilderData = {\r\n    created_by_geometry_builder: boolean;\r\n    /**\r\n     * Maps material indices to normalized material indices.\r\n     */\r\n    normalized_material_indices: Map<number, number>;\r\n    bones: Bone[];\r\n};\r\n\r\nexport type BuilderVec2 = {\r\n    x: number;\r\n    y: number;\r\n};\r\n\r\nexport type BuilderVec3 = {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n};\r\n\r\ntype VertexGroup = {\r\n    offset: number;\r\n    size: number;\r\n    material_index: number;\r\n};\r\n\r\nexport class GeometryBuilder {\r\n    private positions: number[] = [];\r\n    private normals: number[] = [];\r\n    private uvs: number[] = [];\r\n    private indices: number[] = [];\r\n    private bones: Bone[] = [];\r\n    private bone_indices: number[] = [];\r\n    private bone_weights: number[] = [];\r\n    private groups: VertexGroup[] = [];\r\n    /**\r\n     * Will contain all material indices used in {@link this.groups} and -1 for the dummy material.\r\n     */\r\n    private material_indices = new Set<number>([-1]);\r\n\r\n    get vertex_count(): number {\r\n        return this.positions.length / 3;\r\n    }\r\n\r\n    get index_count(): number {\r\n        return this.indices.length;\r\n    }\r\n\r\n    get_position(index: number): Vector3 {\r\n        return new Vector3(\r\n            this.positions[3 * index],\r\n            this.positions[3 * index + 1],\r\n            this.positions[3 * index + 2]\r\n        );\r\n    }\r\n\r\n    get_normal(index: number): Vector3 {\r\n        return new Vector3(\r\n            this.normals[3 * index],\r\n            this.normals[3 * index + 1],\r\n            this.normals[3 * index + 2]\r\n        );\r\n    }\r\n\r\n    add_vertex(position: BuilderVec3, normal: BuilderVec3, uv: BuilderVec2): void {\r\n        this.positions.push(position.x, position.y, position.z);\r\n        this.normals.push(normal.x, normal.y, normal.z);\r\n        this.uvs.push(uv.x, uv.y);\r\n    }\r\n\r\n    add_index(index: number): void {\r\n        this.indices.push(index);\r\n    }\r\n\r\n    add_bone(bone: Bone): void {\r\n        this.bones.push(bone);\r\n    }\r\n\r\n    add_bone_weight(index: number, weight: number): void {\r\n        this.bone_indices.push(index);\r\n        this.bone_weights.push(weight);\r\n    }\r\n\r\n    add_group(offset: number, size: number, material_index?: number): void {\r\n        const last_group = this.groups[this.groups.length - 1];\r\n        const mat_idx = material_index == null ? -1 : material_index;\r\n\r\n        if (last_group && last_group.material_index === mat_idx) {\r\n            last_group.size += size;\r\n        } else {\r\n            this.groups.push({\r\n                offset,\r\n                size,\r\n                material_index: mat_idx,\r\n            });\r\n            this.material_indices.add(mat_idx);\r\n        }\r\n    }\r\n\r\n    build(): BufferGeometry {\r\n        const geom = new BufferGeometry();\r\n        const data = geom.userData as BuilderData;\r\n        data.created_by_geometry_builder = true;\r\n\r\n        geom.addAttribute(\"position\", new Float32BufferAttribute(this.positions, 3));\r\n        geom.addAttribute(\"normal\", new Float32BufferAttribute(this.normals, 3));\r\n        geom.addAttribute(\"uv\", new Float32BufferAttribute(this.uvs, 2));\r\n\r\n        geom.setIndex(new Uint16BufferAttribute(this.indices, 1));\r\n\r\n        if (this.bone_indices.length && this.bones.length) {\r\n            geom.addAttribute(\"skinIndex\", new Uint16BufferAttribute(this.bone_indices, 4));\r\n            geom.addAttribute(\"skinWeight\", new Float32BufferAttribute(this.bone_weights, 4));\r\n            data.bones = this.bones;\r\n        } else {\r\n            data.bones = [];\r\n        }\r\n\r\n        // Normalize material indices.\r\n        const normalized_mat_idxs = new Map<number, number>();\r\n        let i = 0;\r\n\r\n        for (const mat_idx of [...this.material_indices].sort((a, b) => a - b)) {\r\n            normalized_mat_idxs.set(mat_idx, i++);\r\n        }\r\n\r\n        // Use normalized material indices in Three.js groups.\r\n        for (const group of this.groups) {\r\n            geom.addGroup(group.offset, group.size, normalized_mat_idxs.get(group.material_index));\r\n        }\r\n\r\n        data.normalized_material_indices = normalized_mat_idxs;\r\n\r\n        geom.computeBoundingSphere();\r\n        geom.computeBoundingBox();\r\n\r\n        return geom;\r\n    }\r\n}\r\n","import { Vec3 } from \"../../data_formats/vector\";\r\nimport { Vector3 } from \"three\";\r\n\r\nexport function vec3_to_threejs(v: Vec3): Vector3 {\r\n    return new Vector3(v.x, v.y, v.z);\r\n}\r\n","import { Bone, BufferGeometry, Euler, Matrix3, Matrix4, Quaternion, Vector2, Vector3 } from \"three\";\r\nimport { vec3_to_threejs } from \".\";\r\nimport { is_njcm_model, NjModel, NjObject } from \"../../data_formats/parsing/ninja\";\r\nimport { NjcmModel } from \"../../data_formats/parsing/ninja/njcm\";\r\nimport { XjModel } from \"../../data_formats/parsing/ninja/xj\";\r\nimport { GeometryBuilder } from \"./GeometryBuilder\";\r\n\r\nconst DEFAULT_NORMAL = new Vector3(0, 1, 0);\r\nconst DEFAULT_UV = new Vector2(0, 0);\r\nconst NO_TRANSLATION = new Vector3(0, 0, 0);\r\nconst NO_ROTATION = new Quaternion(0, 0, 0, 1);\r\nconst NO_SCALE = new Vector3(1, 1, 1);\r\n\r\nexport function ninja_object_to_geometry_builder(\r\n    object: NjObject<NjModel>,\r\n    builder: GeometryBuilder\r\n): void {\r\n    new GeometryCreator(builder).to_geometry_builder(object);\r\n}\r\n\r\nexport function ninja_object_to_buffer_geometry(object: NjObject<NjModel>): BufferGeometry {\r\n    return new GeometryCreator(new GeometryBuilder()).create_buffer_geometry(object);\r\n}\r\n\r\ntype Vertex = {\r\n    bone_id: number;\r\n    position: Vector3;\r\n    normal?: Vector3;\r\n    bone_weight: number;\r\n    bone_weight_status: number;\r\n    calc_continue: boolean;\r\n};\r\n\r\nclass VerticesHolder {\r\n    private vertices_stack: Vertex[][] = [];\r\n\r\n    put(vertices: Vertex[]): void {\r\n        this.vertices_stack.push(vertices);\r\n    }\r\n\r\n    get(index: number): Vertex[] {\r\n        const vertices: Vertex[] = [];\r\n\r\n        for (let i = this.vertices_stack.length - 1; i >= 0; i--) {\r\n            const vertex = this.vertices_stack[i][index];\r\n\r\n            if (vertex) {\r\n                vertices.push(vertex);\r\n            }\r\n        }\r\n\r\n        return vertices;\r\n    }\r\n}\r\n\r\nclass GeometryCreator {\r\n    private vertices = new VerticesHolder();\r\n    private bone_id: number = 0;\r\n    private builder: GeometryBuilder;\r\n\r\n    constructor(builder: GeometryBuilder) {\r\n        this.builder = builder;\r\n    }\r\n\r\n    to_geometry_builder(object: NjObject<NjModel>): void {\r\n        this.object_to_geometry(object, undefined, new Matrix4());\r\n    }\r\n\r\n    create_buffer_geometry(object: NjObject<NjModel>): BufferGeometry {\r\n        this.to_geometry_builder(object);\r\n        return this.builder.build();\r\n    }\r\n\r\n    private object_to_geometry(\r\n        object: NjObject<NjModel>,\r\n        parent_bone: Bone | undefined,\r\n        parent_matrix: Matrix4\r\n    ): void {\r\n        const {\r\n            no_translate,\r\n            no_rotate,\r\n            no_scale,\r\n            hidden,\r\n            break_child_trace,\r\n            zxy_rotation_order,\r\n            skip,\r\n        } = object.evaluation_flags;\r\n        const { position, rotation, scale } = object;\r\n\r\n        const euler = new Euler(\r\n            rotation.x,\r\n            rotation.y,\r\n            rotation.z,\r\n            zxy_rotation_order ? \"ZXY\" : \"ZYX\"\r\n        );\r\n        const matrix = new Matrix4()\r\n            .compose(\r\n                no_translate ? NO_TRANSLATION : vec3_to_threejs(position),\r\n                no_rotate ? NO_ROTATION : new Quaternion().setFromEuler(euler),\r\n                no_scale ? NO_SCALE : vec3_to_threejs(scale)\r\n            )\r\n            .premultiply(parent_matrix);\r\n\r\n        let bone: Bone | undefined;\r\n\r\n        if (skip) {\r\n            bone = parent_bone;\r\n        } else {\r\n            bone = new Bone();\r\n            bone.name = this.bone_id.toString();\r\n\r\n            bone.position.set(position.x, position.y, position.z);\r\n            bone.setRotationFromEuler(euler);\r\n            bone.scale.set(scale.x, scale.y, scale.z);\r\n\r\n            this.builder.add_bone(bone);\r\n\r\n            if (parent_bone) {\r\n                parent_bone.add(bone);\r\n            }\r\n        }\r\n\r\n        if (object.model && !hidden) {\r\n            this.model_to_geometry(object.model, matrix);\r\n        }\r\n\r\n        this.bone_id++;\r\n\r\n        if (!break_child_trace) {\r\n            for (const child of object.children) {\r\n                this.object_to_geometry(child, bone, matrix);\r\n            }\r\n        }\r\n    }\r\n\r\n    private model_to_geometry(model: NjModel, matrix: Matrix4): void {\r\n        if (is_njcm_model(model)) {\r\n            this.njcm_model_to_geometry(model, matrix);\r\n        } else {\r\n            this.xj_model_to_geometry(model, matrix);\r\n        }\r\n    }\r\n\r\n    private njcm_model_to_geometry(model: NjcmModel, matrix: Matrix4): void {\r\n        const normal_matrix = new Matrix3().getNormalMatrix(matrix);\r\n\r\n        const new_vertices = model.vertices.map(vertex => {\r\n            const position = vec3_to_threejs(vertex.position);\r\n            const normal = vertex.normal ? vec3_to_threejs(vertex.normal) : new Vector3(0, 1, 0);\r\n\r\n            position.applyMatrix4(matrix);\r\n            normal.applyMatrix3(normal_matrix);\r\n\r\n            return {\r\n                bone_id: this.bone_id,\r\n                position,\r\n                normal,\r\n                bone_weight: vertex.bone_weight,\r\n                bone_weight_status: vertex.bone_weight_status,\r\n                calc_continue: vertex.calc_continue,\r\n            };\r\n        });\r\n\r\n        this.vertices.put(new_vertices);\r\n\r\n        for (const mesh of model.meshes) {\r\n            const start_index_count = this.builder.index_count;\r\n\r\n            for (let i = 0; i < mesh.vertices.length; ++i) {\r\n                const mesh_vertex = mesh.vertices[i];\r\n                const vertices = this.vertices.get(mesh_vertex.index);\r\n\r\n                if (vertices.length) {\r\n                    const vertex = vertices[0];\r\n                    const normal = vertex.normal || mesh_vertex.normal || DEFAULT_NORMAL;\r\n                    const index = this.builder.vertex_count;\r\n\r\n                    this.builder.add_vertex(\r\n                        vertex.position,\r\n                        normal,\r\n                        mesh.has_tex_coords ? mesh_vertex.tex_coords! : DEFAULT_UV\r\n                    );\r\n\r\n                    if (i >= 2) {\r\n                        if (i % 2 === (mesh.clockwise_winding ? 1 : 0)) {\r\n                            this.builder.add_index(index - 2);\r\n                            this.builder.add_index(index - 1);\r\n                            this.builder.add_index(index);\r\n                        } else {\r\n                            this.builder.add_index(index - 2);\r\n                            this.builder.add_index(index);\r\n                            this.builder.add_index(index - 1);\r\n                        }\r\n                    }\r\n\r\n                    const bones = [[0, 0], [0, 0], [0, 0], [0, 0]];\r\n\r\n                    for (let j = vertices.length - 1; j >= 0; j--) {\r\n                        const vertex = vertices[j];\r\n                        bones[vertex.bone_weight_status] = [vertex.bone_id, vertex.bone_weight];\r\n                    }\r\n\r\n                    for (const [bone_index, bone_weight] of bones) {\r\n                        this.builder.add_bone_weight(bone_index, bone_weight);\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.builder.add_group(\r\n                start_index_count,\r\n                this.builder.index_count - start_index_count,\r\n                mesh.texture_id\r\n            );\r\n        }\r\n    }\r\n\r\n    private xj_model_to_geometry(model: XjModel, matrix: Matrix4): void {\r\n        const index_offset = this.builder.vertex_count;\r\n        const normal_matrix = new Matrix3().getNormalMatrix(matrix);\r\n\r\n        for (let { position, normal, uv } of model.vertices) {\r\n            const p = vec3_to_threejs(position).applyMatrix4(matrix);\r\n\r\n            const local_n = normal ? vec3_to_threejs(normal) : new Vector3(0, 1, 0);\r\n            const n = local_n.applyMatrix3(normal_matrix);\r\n\r\n            const tuv = uv || DEFAULT_UV;\r\n\r\n            this.builder.add_vertex(p, n, tuv);\r\n        }\r\n\r\n        let current_mat_idx: number | undefined;\r\n\r\n        for (const mesh of model.meshes) {\r\n            const start_index_count = this.builder.index_count;\r\n            let clockwise = false;\r\n\r\n            for (let j = 2; j < mesh.indices.length; ++j) {\r\n                const a = index_offset + mesh.indices[j - 2];\r\n                const b = index_offset + mesh.indices[j - 1];\r\n                const c = index_offset + mesh.indices[j];\r\n                const pa = this.builder.get_position(a);\r\n                const pb = this.builder.get_position(b);\r\n                const pc = this.builder.get_position(c);\r\n                const na = this.builder.get_normal(a);\r\n                const nb = this.builder.get_normal(b);\r\n                const nc = this.builder.get_normal(c);\r\n\r\n                // Calculate a surface normal and reverse the vertex winding if at least 2 of the vertex normals point in the opposite direction.\r\n                // This hack fixes the winding for most models.\r\n                const normal = pb\r\n                    .clone()\r\n                    .sub(pa)\r\n                    .cross(pc.clone().sub(pa));\r\n\r\n                if (clockwise) {\r\n                    normal.negate();\r\n                }\r\n\r\n                const opposite_count =\r\n                    (normal.dot(na) < 0 ? 1 : 0) +\r\n                    (normal.dot(nb) < 0 ? 1 : 0) +\r\n                    (normal.dot(nc) < 0 ? 1 : 0);\r\n\r\n                if (opposite_count >= 2) {\r\n                    clockwise = !clockwise;\r\n                }\r\n\r\n                if (clockwise) {\r\n                    this.builder.add_index(b);\r\n                    this.builder.add_index(a);\r\n                    this.builder.add_index(c);\r\n                } else {\r\n                    this.builder.add_index(a);\r\n                    this.builder.add_index(b);\r\n                    this.builder.add_index(c);\r\n                }\r\n\r\n                clockwise = !clockwise;\r\n            }\r\n\r\n            if (mesh.material_properties.texture_id != null) {\r\n                current_mat_idx = mesh.material_properties.texture_id;\r\n            }\r\n\r\n            this.builder.add_group(\r\n                start_index_count,\r\n                this.builder.index_count - start_index_count,\r\n                current_mat_idx\r\n            );\r\n        }\r\n    }\r\n}\r\n","import {\r\n    DoubleSide,\r\n    Face3,\r\n    Geometry,\r\n    Group,\r\n    Mesh,\r\n    MeshBasicMaterial,\r\n    MeshLambertMaterial,\r\n    Object3D,\r\n    Vector3,\r\n    Color,\r\n} from \"three\";\r\nimport { CollisionObject } from \"../../data_formats/parsing/area_collision_geometry\";\r\nimport { RenderObject } from \"../../data_formats/parsing/area_geometry\";\r\nimport { Section } from \"../../domain\";\r\nimport { GeometryBuilder } from \"./GeometryBuilder\";\r\nimport { ninja_object_to_geometry_builder } from \"./ninja_geometry\";\r\n\r\nconst materials = [\r\n    // Wall\r\n    new MeshBasicMaterial({\r\n        color: 0x80c0d0,\r\n        transparent: true,\r\n        opacity: 0.25,\r\n        visible: false,\r\n    }),\r\n    // Ground\r\n    new MeshLambertMaterial({\r\n        color: 0xa0a0a0,\r\n        side: DoubleSide,\r\n    }),\r\n    // Vegetation\r\n    new MeshLambertMaterial({\r\n        color: 0x50b070,\r\n        side: DoubleSide,\r\n    }),\r\n    // Section transition zone\r\n    new MeshLambertMaterial({\r\n        color: 0x604080,\r\n        side: DoubleSide,\r\n    }),\r\n];\r\nconst wireframe_materials = [\r\n    // Wall\r\n    new MeshBasicMaterial({\r\n        color: 0x90d0e0,\r\n        wireframe: true,\r\n        transparent: true,\r\n        opacity: 0.3,\r\n        visible: false,\r\n    }),\r\n    // Ground\r\n    new MeshBasicMaterial({\r\n        color: 0xd0d0d0,\r\n        wireframe: true,\r\n    }),\r\n    // Vegetation\r\n    new MeshBasicMaterial({\r\n        color: 0x80e0a0,\r\n        wireframe: true,\r\n    }),\r\n    // Section transition zone\r\n    new MeshBasicMaterial({\r\n        color: 0x9070b0,\r\n        wireframe: true,\r\n    }),\r\n];\r\n\r\nexport type AreaUserData = {\r\n    section?: Section;\r\n};\r\n\r\nexport function area_collision_geometry_to_object_3d(object: CollisionObject): Object3D {\r\n    const group = new Group();\r\n\r\n    for (const collision_mesh of object.meshes) {\r\n        // Use Geometry and not BufferGeometry for better raycaster performance.\r\n        const geom = new Geometry();\r\n\r\n        for (const { x, y, z } of collision_mesh.vertices) {\r\n            geom.vertices.push(new Vector3(x, y, z));\r\n        }\r\n\r\n        for (const { indices, flags, normal } of collision_mesh.triangles) {\r\n            const is_section_transition = flags & 0b1000000;\r\n            const is_vegetation = flags & 0b10000;\r\n            const is_ground = flags & 0b1;\r\n            const color_index = is_section_transition ? 3 : is_vegetation ? 2 : is_ground ? 1 : 0;\r\n\r\n            geom.faces.push(\r\n                new Face3(\r\n                    indices[0],\r\n                    indices[1],\r\n                    indices[2],\r\n                    new Vector3(normal.x, normal.y, normal.z),\r\n                    undefined,\r\n                    color_index\r\n                )\r\n            );\r\n        }\r\n\r\n        geom.computeBoundingBox();\r\n        geom.computeBoundingSphere();\r\n\r\n        const mesh = new Mesh(geom, materials);\r\n        mesh.renderOrder = 1;\r\n        group.add(mesh);\r\n\r\n        const wireframe_mesh = new Mesh(geom, wireframe_materials);\r\n        wireframe_mesh.renderOrder = 2;\r\n        group.add(wireframe_mesh);\r\n    }\r\n\r\n    return group;\r\n}\r\n\r\nexport function area_geometry_to_sections_and_object_3d(\r\n    object: RenderObject\r\n): [Section[], Object3D] {\r\n    const sections: Section[] = [];\r\n    const group = new Group();\r\n    let i = 0;\r\n\r\n    for (const section of object.sections) {\r\n        const builder = new GeometryBuilder();\r\n\r\n        for (const object of section.objects) {\r\n            ninja_object_to_geometry_builder(object, builder);\r\n        }\r\n\r\n        const mesh = new Mesh(\r\n            builder.build(),\r\n            new MeshBasicMaterial({\r\n                color: new Color().setHSL((i++ % 7) / 7, 1, 0.5),\r\n                transparent: true,\r\n                opacity: 0.25,\r\n                side: DoubleSide,\r\n            })\r\n        );\r\n        group.add(mesh);\r\n\r\n        mesh.position.set(section.position.x, section.position.y, section.position.z);\r\n        mesh.rotation.set(section.rotation.x, section.rotation.y, section.rotation.z);\r\n\r\n        if (section.id >= 0) {\r\n            const sec = new Section(section.id, section.position, section.rotation.y);\r\n            sections.push(sec);\r\n            (mesh.userData as AreaUserData).section = sec;\r\n        }\r\n    }\r\n\r\n    return [sections, group];\r\n}\r\n","export async function load_array_buffer(url: string): Promise<ArrayBuffer> {\r\n    const base_url = process.env.PUBLIC_URL;\r\n    const response = await fetch(base_url + url);\r\n    return response.arrayBuffer();\r\n}\r\n","export class LoadingCache<K, V> {\r\n    private map = new Map<K, V>();\r\n\r\n    set(key: K, value: V): void {\r\n        this.map.set(key, value);\r\n    }\r\n\r\n    get_or_set(key: K, new_value: () => V): V {\r\n        let v = this.map.get(key);\r\n\r\n        if (v === undefined) {\r\n            v = new_value();\r\n            this.map.set(key, v);\r\n        }\r\n\r\n        return v;\r\n    }\r\n}\r\n","import { Object3D } from \"three\";\r\nimport { Endianness } from \"../data_formats\";\r\nimport { ArrayBufferCursor } from \"../data_formats/cursor/ArrayBufferCursor\";\r\nimport { parse_area_collision_geometry } from \"../data_formats/parsing/area_collision_geometry\";\r\nimport { parse_area_geometry } from \"../data_formats/parsing/area_geometry\";\r\nimport { Section } from \"../domain\";\r\nimport {\r\n    area_collision_geometry_to_object_3d,\r\n    area_geometry_to_sections_and_object_3d,\r\n} from \"../rendering/conversion/areas\";\r\nimport { load_array_buffer } from \"./load_array_buffer\";\r\nimport { LoadingCache } from \"./LoadingCache\";\r\n\r\nconst render_geometry_cache = new LoadingCache<\r\n    string,\r\n    { geometry: Promise<Object3D>; sections: Promise<Section[]> }\r\n>();\r\nconst collision_geometry_cache = new LoadingCache<string, Promise<Object3D>>();\r\n\r\nexport async function load_area_sections(\r\n    episode: number,\r\n    area_id: number,\r\n    area_variant: number\r\n): Promise<Section[]> {\r\n    return render_geometry_cache.get_or_set(`${episode}-${area_id}-${area_variant}`, () =>\r\n        load_area_sections_and_render_geometry(episode, area_id, area_variant)\r\n    ).sections;\r\n}\r\n\r\nexport async function load_area_render_geometry(\r\n    episode: number,\r\n    area_id: number,\r\n    area_variant: number\r\n): Promise<Object3D> {\r\n    return render_geometry_cache.get_or_set(`${episode}-${area_id}-${area_variant}`, () =>\r\n        load_area_sections_and_render_geometry(episode, area_id, area_variant)\r\n    ).geometry;\r\n}\r\n\r\nexport async function load_area_collision_geometry(\r\n    episode: number,\r\n    area_id: number,\r\n    area_variant: number\r\n): Promise<Object3D> {\r\n    return collision_geometry_cache.get_or_set(`${episode}-${area_id}-${area_variant}`, () =>\r\n        get_area_asset(episode, area_id, area_variant, \"collision\").then(buffer =>\r\n            area_collision_geometry_to_object_3d(\r\n                parse_area_collision_geometry(new ArrayBufferCursor(buffer, Endianness.Little))\r\n            )\r\n        )\r\n    );\r\n}\r\n\r\nfunction load_area_sections_and_render_geometry(\r\n    episode: number,\r\n    area_id: number,\r\n    area_variant: number\r\n): { geometry: Promise<Object3D>; sections: Promise<Section[]> } {\r\n    const promise = get_area_asset(episode, area_id, area_variant, \"render\").then(buffer =>\r\n        area_geometry_to_sections_and_object_3d(\r\n            parse_area_geometry(new ArrayBufferCursor(buffer, Endianness.Little))\r\n        )\r\n    );\r\n\r\n    return {\r\n        geometry: promise.then(([, object_3d]) => object_3d),\r\n        sections: promise.then(([sections]) => sections),\r\n    };\r\n}\r\n\r\nconst area_base_names = [\r\n    [\r\n        [\"city00_00\", 1],\r\n        [\"forest01\", 1],\r\n        [\"forest02\", 1],\r\n        [\"cave01_\", 6],\r\n        [\"cave02_\", 5],\r\n        [\"cave03_\", 6],\r\n        [\"machine01_\", 6],\r\n        [\"machine02_\", 6],\r\n        [\"ancient01_\", 5],\r\n        [\"ancient02_\", 5],\r\n        [\"ancient03_\", 5],\r\n        [\"boss01\", 1],\r\n        [\"boss02\", 1],\r\n        [\"boss03\", 1],\r\n        [\"darkfalz00\", 1],\r\n    ],\r\n    [\r\n        [\"labo00_00\", 1],\r\n        [\"ruins01_\", 3],\r\n        [\"ruins02_\", 3],\r\n        [\"space01_\", 3],\r\n        [\"space02_\", 3],\r\n        [\"jungle01_00\", 1],\r\n        [\"jungle02_00\", 1],\r\n        [\"jungle03_00\", 1],\r\n        [\"jungle04_\", 3],\r\n        [\"jungle05_00\", 1],\r\n        [\"seabed01_\", 3],\r\n        [\"seabed02_\", 3],\r\n        [\"boss05\", 1],\r\n        [\"boss06\", 1],\r\n        [\"boss07\", 1],\r\n        [\"boss08\", 1],\r\n        [\"jungle06_00\", 1],\r\n        [\"jungle07_\", 5],\r\n    ],\r\n    [\r\n        // Don't remove this empty array, see usage of area_base_names in area_version_to_base_url.\r\n    ],\r\n    [\r\n        [\"city02_00\", 1],\r\n        [\"wilds01_00\", 1],\r\n        [\"wilds01_01\", 1],\r\n        [\"wilds01_02\", 1],\r\n        [\"wilds01_03\", 1],\r\n        [\"crater01_00\", 1],\r\n        [\"desert01_\", 3],\r\n        [\"desert02_\", 3],\r\n        [\"desert03_\", 3],\r\n        [\"boss09_00\", 1],\r\n    ],\r\n];\r\n\r\nasync function get_area_asset(\r\n    episode: number,\r\n    area_id: number,\r\n    area_variant: number,\r\n    type: \"render\" | \"collision\"\r\n): Promise<ArrayBuffer> {\r\n    const base_url = area_version_to_base_url(episode, area_id, area_variant);\r\n    const suffix = type === \"render\" ? \"n.rel\" : \"c.rel\";\r\n    return load_array_buffer(base_url + suffix);\r\n}\r\n\r\nfunction area_version_to_base_url(episode: number, area_id: number, area_variant: number): string {\r\n    const episode_base_names = area_base_names[episode - 1];\r\n\r\n    if (0 <= area_id && area_id < episode_base_names.length) {\r\n        const [base_name, variants] = episode_base_names[area_id];\r\n\r\n        if (0 <= area_variant && area_variant < variants) {\r\n            let variant: string;\r\n\r\n            if (variants === 1) {\r\n                variant = \"\";\r\n            } else {\r\n                variant = String(area_variant);\r\n                while (variant.length < 2) variant = \"0\" + variant;\r\n            }\r\n\r\n            return `/maps/map_${base_name}${variant}`;\r\n        } else {\r\n            throw new Error(\r\n                `Unknown variant ${area_variant} of area ${area_id} in episode ${episode}.`\r\n            );\r\n        }\r\n    } else {\r\n        throw new Error(`Unknown episode ${episode} area ${area_id}.`);\r\n    }\r\n}\r\n","import { Area, AreaVariant, Section, Episode } from \"../domain\";\r\nimport { load_area_sections } from \"../loading/areas\";\r\n\r\nfunction area(id: number, name: string, order: number, variants: number): Area {\r\n    const area = new Area(id, name, order, []);\r\n    const varis = Array(variants)\r\n        .fill(null)\r\n        .map((_, i) => new AreaVariant(i, area));\r\n    area.area_variants.splice(0, 0, ...varis);\r\n    return area;\r\n}\r\n\r\nclass AreaStore {\r\n    private areas: Area[][] = [];\r\n\r\n    constructor() {\r\n        // The IDs match the PSO IDs for areas.\r\n        let order = 0;\r\n        this.areas[Episode.I] = [\r\n            area(0, \"Pioneer II\", order++, 1),\r\n            area(1, \"Forest 1\", order++, 1),\r\n            area(2, \"Forest 2\", order++, 1),\r\n            area(11, \"Under the Dome\", order++, 1),\r\n            area(3, \"Cave 1\", order++, 6),\r\n            area(4, \"Cave 2\", order++, 5),\r\n            area(5, \"Cave 3\", order++, 6),\r\n            area(12, \"Underground Channel\", order++, 1),\r\n            area(6, \"Mine 1\", order++, 6),\r\n            area(7, \"Mine 2\", order++, 6),\r\n            area(13, \"Monitor Room\", order++, 1),\r\n            area(8, \"Ruins 1\", order++, 5),\r\n            area(9, \"Ruins 2\", order++, 5),\r\n            area(10, \"Ruins 3\", order++, 5),\r\n            area(14, \"Dark Falz\", order++, 1),\r\n            area(15, \"BA Ruins\", order++, 3),\r\n            area(16, \"BA Spaceship\", order++, 3),\r\n            area(17, \"Lobby\", order++, 15),\r\n        ];\r\n        order = 0;\r\n        this.areas[Episode.II] = [\r\n            area(0, \"Lab\", order++, 1),\r\n            area(1, \"VR Temple Alpha\", order++, 3),\r\n            area(2, \"VR Temple Beta\", order++, 3),\r\n            area(14, \"VR Temple Final\", order++, 1),\r\n            area(3, \"VR Spaceship Alpha\", order++, 3),\r\n            area(4, \"VR Spaceship Beta\", order++, 3),\r\n            area(15, \"VR Spaceship Final\", order++, 1),\r\n            area(5, \"Central Control Area\", order++, 1),\r\n            area(6, \"Jungle Area East\", order++, 1),\r\n            area(7, \"Jungle Area North\", order++, 1),\r\n            area(8, \"Mountain Area\", order++, 3),\r\n            area(9, \"Seaside Area\", order++, 1),\r\n            area(12, \"Cliffs of Gal Da Val\", order++, 1),\r\n            area(10, \"Seabed Upper Levels\", order++, 3),\r\n            area(11, \"Seabed Lower Levels\", order++, 3),\r\n            area(13, \"Test Subject Disposal Area\", order++, 1),\r\n            area(16, \"Seaside Area at Night\", order++, 1),\r\n            area(17, \"Control Tower\", order++, 5),\r\n        ];\r\n        order = 0;\r\n        this.areas[Episode.IV] = [\r\n            area(0, \"Pioneer II (Ep. IV)\", order++, 1),\r\n            area(1, \"Crater Route 1\", order++, 1),\r\n            area(2, \"Crater Route 2\", order++, 1),\r\n            area(3, \"Crater Route 3\", order++, 1),\r\n            area(4, \"Crater Route 4\", order++, 1),\r\n            area(5, \"Crater Interior\", order++, 1),\r\n            area(6, \"Subterranean Desert 1\", order++, 3),\r\n            area(7, \"Subterranean Desert 2\", order++, 3),\r\n            area(8, \"Subterranean Desert 3\", order++, 3),\r\n            area(9, \"Meteor Impact Site\", order++, 1),\r\n        ];\r\n    }\r\n\r\n    get_area = (episode: Episode, area_id: number): Area => {\r\n        const area = this.areas[episode].find(a => a.id === area_id);\r\n        if (!area) throw new Error(`Area id ${area_id} for episode ${episode} is invalid.`);\r\n        return area;\r\n    };\r\n\r\n    get_variant = (episode: Episode, area_id: number, variant_id: number): AreaVariant => {\r\n        const area = this.get_area(episode, area_id);\r\n\r\n        const area_variant = area.area_variants[variant_id];\r\n        if (!area_variant)\r\n            throw new Error(\r\n                `Area variant id ${variant_id} for area ${area_id} of episode ${episode} is invalid.`\r\n            );\r\n\r\n        return area_variant;\r\n    };\r\n\r\n    get_area_sections = (\r\n        episode: Episode,\r\n        area_id: number,\r\n        variant_id: number\r\n    ): Promise<Section[]> => {\r\n        return load_area_sections(episode, area_id, variant_id);\r\n    };\r\n}\r\n\r\nexport const area_store = new AreaStore();\r\n","import {\r\n    UTF_16BE_DECODER,\r\n    UTF_16BE_ENCODER,\r\n    UTF_16LE_DECODER,\r\n    UTF_16LE_ENCODER,\r\n    ASCII_DECODER,\r\n} from \".\";\r\nimport { Endianness } from \"..\";\r\nimport { ResizableBuffer } from \"../ResizableBuffer\";\r\nimport { Cursor } from \"./Cursor\";\r\nimport { Vec3, Vec2 } from \"../vector\";\r\n\r\nexport class ResizableBufferCursor implements Cursor {\r\n    private _offset: number;\r\n\r\n    get offset(): number {\r\n        return this._offset;\r\n    }\r\n\r\n    protected _size: number;\r\n\r\n    get size(): number {\r\n        return this._size;\r\n    }\r\n\r\n    protected _position: number;\r\n\r\n    get position(): number {\r\n        return this._position;\r\n    }\r\n\r\n    protected little_endian!: boolean;\r\n\r\n    get endianness(): Endianness {\r\n        return this.little_endian ? Endianness.Little : Endianness.Big;\r\n    }\r\n\r\n    set endianness(endianness: Endianness) {\r\n        this.little_endian = endianness === Endianness.Little;\r\n        this.utf16_decoder = this.little_endian ? UTF_16LE_DECODER : UTF_16BE_DECODER;\r\n        this.utf16_encoder = this.little_endian ? UTF_16LE_ENCODER : UTF_16BE_ENCODER;\r\n    }\r\n\r\n    get bytes_left(): number {\r\n        return this.size - this.position;\r\n    }\r\n\r\n    protected buffer: ResizableBuffer;\r\n\r\n    protected get dv(): DataView {\r\n        return this.buffer.view;\r\n    }\r\n\r\n    private utf16_decoder: TextDecoder = UTF_16BE_DECODER;\r\n    private utf16_encoder: TextEncoder = UTF_16BE_ENCODER;\r\n\r\n    /**\r\n     * @param buffer The buffer to read from.\r\n     * @param endianness Decides in which byte order multi-byte integers and floats will be interpreted.\r\n     * @param offset The start offset of the part that will be read from.\r\n     * @param size The size of the part that will be read from.\r\n     */\r\n    constructor(\r\n        buffer: ResizableBuffer,\r\n        endianness: Endianness,\r\n        offset: number = 0,\r\n        size: number = buffer.size\r\n    ) {\r\n        if (offset < 0 || offset > buffer.size) {\r\n            throw new Error(`Offset ${offset} is out of bounds.`);\r\n        }\r\n\r\n        if (size < 0 || offset + size > buffer.size) {\r\n            throw new Error(`Size ${size} is out of bounds.`);\r\n        }\r\n\r\n        this.buffer = buffer;\r\n        this.endianness = endianness;\r\n        this._offset = offset;\r\n        this._size = size;\r\n        this._position = 0;\r\n    }\r\n\r\n    seek(offset: number): this {\r\n        return this.seek_start(this.position + offset);\r\n    }\r\n\r\n    seek_start(offset: number): this {\r\n        if (offset < 0 || offset > this.size) {\r\n            throw new Error(`Offset ${offset} is out of bounds.`);\r\n        }\r\n\r\n        this._position = offset;\r\n        return this;\r\n    }\r\n\r\n    seek_end(offset: number): this {\r\n        if (offset < 0 || offset > this.size) {\r\n            throw new Error(`Offset ${offset} is out of bounds.`);\r\n        }\r\n\r\n        this._position = this.size - offset;\r\n        return this;\r\n    }\r\n\r\n    u8(): number {\r\n        return this.u8_at(this._position++);\r\n    }\r\n\r\n    u8_at(offset: number): number {\r\n        this.check_offset(offset, 1);\r\n        return this.dv.getUint8(this.offset + offset);\r\n    }\r\n\r\n    u16(): number {\r\n        const r = this.u16_at(this.position);\r\n        this._position += 2;\r\n        return r;\r\n    }\r\n\r\n    u16_at(offset: number): number {\r\n        this.check_offset(offset, 2);\r\n        return this.dv.getUint16(this.offset + offset, this.little_endian);\r\n    }\r\n\r\n    u32(): number {\r\n        const r = this.u32_at(this.position);\r\n        this._position += 4;\r\n        return r;\r\n    }\r\n\r\n    u32_at(offset: number): number {\r\n        this.check_offset(offset, 4);\r\n        return this.dv.getUint32(this.offset + offset, this.little_endian);\r\n    }\r\n\r\n    i8(): number {\r\n        return this.i8_at(this._position++);\r\n    }\r\n\r\n    i8_at(offset: number): number {\r\n        this.check_offset(offset, 1);\r\n        return this.dv.getInt8(this.offset + offset);\r\n    }\r\n\r\n    i16(): number {\r\n        const r = this.i16_at(this.position);\r\n        this._position += 2;\r\n        return r;\r\n    }\r\n\r\n    i16_at(offset: number): number {\r\n        this.check_offset(offset, 2);\r\n        return this.dv.getInt16(this.offset + offset, this.little_endian);\r\n    }\r\n\r\n    i32(): number {\r\n        const r = this.i32_at(this.position);\r\n        this._position += 4;\r\n        return r;\r\n    }\r\n\r\n    i32_at(offset: number): number {\r\n        this.check_offset(offset, 4);\r\n        return this.dv.getInt32(this.offset + offset, this.little_endian);\r\n    }\r\n\r\n    f32(): number {\r\n        const r = this.f32_at(this.position);\r\n        this._position += 4;\r\n        return r;\r\n    }\r\n\r\n    f32_at(offset: number): number {\r\n        this.check_offset(offset, 4);\r\n        return this.dv.getFloat32(this.offset + offset, this.little_endian);\r\n    }\r\n\r\n    u8_array(n: number): number[] {\r\n        this.check_size(\"n\", n, n);\r\n\r\n        const array = [];\r\n\r\n        for (let i = 0; i < n; ++i) {\r\n            array.push(this.dv.getUint8(this.offset + this._position++));\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    u16_array(n: number): number[] {\r\n        this.check_size(\"n\", n, 2 * n);\r\n\r\n        const array = [];\r\n\r\n        for (let i = 0; i < n; ++i) {\r\n            array.push(this.dv.getUint16(this.offset + this.position, this.little_endian));\r\n            this._position += 2;\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    u32_array(n: number): number[] {\r\n        this.check_size(\"n\", n, 4 * n);\r\n\r\n        const array = [];\r\n\r\n        for (let i = 0; i < n; ++i) {\r\n            array.push(this.dv.getUint32(this.offset + this.position, this.little_endian));\r\n            this._position += 4;\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    vec2_f32(): Vec2 {\r\n        return new Vec2(this.f32(), this.f32());\r\n    }\r\n\r\n    vec3_f32(): Vec3 {\r\n        return new Vec3(this.f32(), this.f32(), this.f32());\r\n    }\r\n\r\n    take(size: number): ResizableBufferCursor {\r\n        this.check_size(\"size\", size, size);\r\n\r\n        const offset = this.offset + this.position;\r\n        const wrapper = new ResizableBufferCursor(this.buffer, this.endianness, offset, size);\r\n        this._position += size;\r\n        return wrapper;\r\n    }\r\n\r\n    string_ascii(\r\n        max_byte_length: number,\r\n        null_terminated: boolean,\r\n        drop_remaining: boolean\r\n    ): string {\r\n        this.check_size(\"max_byte_length\", max_byte_length, max_byte_length);\r\n\r\n        const string_length = null_terminated\r\n            ? this.index_of_u8(0, max_byte_length) - this.position\r\n            : max_byte_length;\r\n\r\n        const view = this.buffer.sub_view(this.offset + this.position, string_length);\r\n        const r = ASCII_DECODER.decode(view);\r\n\r\n        this._position += drop_remaining\r\n            ? max_byte_length\r\n            : Math.min(string_length + 1, max_byte_length);\r\n\r\n        return r;\r\n    }\r\n\r\n    string_utf16(\r\n        max_byte_length: number,\r\n        null_terminated: boolean,\r\n        drop_remaining: boolean\r\n    ): string {\r\n        this.check_size(\"max_byte_length\", max_byte_length, max_byte_length);\r\n\r\n        const string_length = null_terminated\r\n            ? this.index_of_u16(0, max_byte_length) - this.position\r\n            : Math.floor(max_byte_length / 2) * 2;\r\n\r\n        const view = this.buffer.sub_view(this.offset + this.position, string_length);\r\n        const r = this.utf16_decoder.decode(view);\r\n\r\n        this._position += drop_remaining\r\n            ? max_byte_length\r\n            : Math.min(string_length + 2, max_byte_length);\r\n\r\n        return r;\r\n    }\r\n\r\n    array_buffer(size: number = this.size - this.position): ArrayBuffer {\r\n        this.check_size(\"size\", size, size);\r\n        const r = this.buffer.backing_buffer.slice(\r\n            this.offset + this.position,\r\n            this.offset + this.position + size\r\n        );\r\n        this._position += size;\r\n        return r;\r\n    }\r\n\r\n    copy_to_uint8_array(array: Uint8Array, size: number = this.size - this.position): this {\r\n        this.check_size(\"size\", size, size);\r\n        array.set(new Uint8Array(this.buffer.backing_buffer, this.offset + this.position, size));\r\n        this._position += size;\r\n        return this;\r\n    }\r\n\r\n    private check_size(name: string, value: number, byte_size: number): void {\r\n        if (byte_size < 0 || byte_size > this.size - this.position) {\r\n            throw new Error(`${name} ${value} is out of bounds.`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks whether we can read size bytes at offset.\r\n     */\r\n    protected check_offset(offset: number, size: number): void {\r\n        if (offset < 0 || offset + size > this.size) {\r\n            throw new Error(`Offset ${offset} is out of bounds.`);\r\n        }\r\n    }\r\n\r\n    private index_of_u8(value: number, max_byte_length: number): number {\r\n        const max_pos = Math.min(this.position + max_byte_length, this.size);\r\n\r\n        for (let i = this.position; i < max_pos; ++i) {\r\n            if (this.dv.getUint8(i) === value) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return this.position + max_byte_length;\r\n    }\r\n\r\n    private index_of_u16(value: number, max_byte_length: number): number {\r\n        const max_pos = Math.min(this.position + max_byte_length, this.size);\r\n\r\n        for (let i = this.position; i < max_pos; i += 2) {\r\n            if (this.dv.getUint16(i, this.little_endian) === value) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return this.position + max_byte_length;\r\n    }\r\n}\r\n","import { WritableCursor } from \"./WritableCursor\";\r\nimport { ResizableBufferCursor } from \"./ResizableBufferCursor\";\r\nimport { Cursor } from \"./Cursor\";\r\nimport { ASCII_ENCODER } from \".\";\r\n\r\nexport class WritableResizableBufferCursor extends ResizableBufferCursor implements WritableCursor {\r\n    get size(): number {\r\n        return this._size;\r\n    }\r\n\r\n    set size(size: number) {\r\n        if (size > this._size) {\r\n            this.ensure_size(size - this._size);\r\n        } else {\r\n            this._size = size;\r\n        }\r\n    }\r\n\r\n    write_u8(value: number): this {\r\n        this.ensure_size(1);\r\n        this.dv.setUint8(this._position++, value);\r\n        return this;\r\n    }\r\n\r\n    write_u16(value: number): this {\r\n        this.ensure_size(2);\r\n        this.dv.setUint16(this.position, value, this.little_endian);\r\n        this._position += 2;\r\n        return this;\r\n    }\r\n\r\n    write_u32(value: number): this {\r\n        this.ensure_size(4);\r\n        this.dv.setUint32(this.position, value, this.little_endian);\r\n        this._position += 4;\r\n        return this;\r\n    }\r\n\r\n    write_i32(value: number): this {\r\n        this.ensure_size(4);\r\n        this.dv.setInt32(this.position, value, this.little_endian);\r\n        this._position += 4;\r\n        return this;\r\n    }\r\n\r\n    write_f32(value: number): this {\r\n        this.ensure_size(4);\r\n        this.dv.setFloat32(this.position, value, this.little_endian);\r\n        this._position += 4;\r\n        return this;\r\n    }\r\n\r\n    write_u8_array(array: number[]): this {\r\n        this.ensure_size(array.length);\r\n        new Uint8Array(this.buffer.backing_buffer, this.offset + this.position).set(\r\n            new Uint8Array(array)\r\n        );\r\n        this._position += array.length;\r\n        return this;\r\n    }\r\n\r\n    write_cursor(other: Cursor): this {\r\n        const size = other.size - other.position;\r\n        this.ensure_size(size);\r\n\r\n        other.copy_to_uint8_array(\r\n            new Uint8Array(this.buffer.backing_buffer, this.offset + this.position, size),\r\n            size\r\n        );\r\n\r\n        this._position += size;\r\n        return this;\r\n    }\r\n\r\n    write_string_ascii(str: string, byte_length: number): this {\r\n        this.ensure_size(byte_length);\r\n\r\n        let i = 0;\r\n\r\n        for (const byte of ASCII_ENCODER.encode(str)) {\r\n            if (i < byte_length) {\r\n                this.write_u8(byte);\r\n                ++i;\r\n            }\r\n        }\r\n\r\n        while (i < byte_length) {\r\n            this.write_u8(0);\r\n            ++i;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    private ensure_size(size: number): void {\r\n        const needed = this.position + size - this._size;\r\n\r\n        if (needed > 0) {\r\n            this._size += needed;\r\n\r\n            if (this.buffer.size < this.offset + this._size) {\r\n                this.buffer.size = this.offset + this._size;\r\n            }\r\n        }\r\n    }\r\n}\r\n","/**\r\n * Resizable buffer.\r\n */\r\nexport class ResizableBuffer {\r\n    private _size: number = 0;\r\n\r\n    get size(): number {\r\n        return this._size;\r\n    }\r\n\r\n    set size(size: number) {\r\n        if (size < 0) {\r\n            throw new Error(\"Size should be non-negative.\");\r\n        }\r\n\r\n        this.ensure_capacity(size);\r\n        this._size = size;\r\n    }\r\n\r\n    get capacity(): number {\r\n        return this._buffer.byteLength;\r\n    }\r\n\r\n    private _buffer: ArrayBuffer;\r\n\r\n    get backing_buffer(): ArrayBuffer {\r\n        return this._buffer;\r\n    }\r\n\r\n    private _data_view: DataView;\r\n\r\n    get view(): DataView {\r\n        return this._data_view;\r\n    }\r\n\r\n    constructor(initial_capacity: number = 8192) {\r\n        this._buffer = new ArrayBuffer(initial_capacity);\r\n        this._data_view = new DataView(this._buffer);\r\n    }\r\n\r\n    sub_view(offset: number, size: number): DataView {\r\n        return new DataView(this._buffer, offset, size);\r\n    }\r\n\r\n    /**\r\n     *  Increases buffer size if necessary.\r\n     */\r\n    private ensure_capacity(min_new_size: number): void {\r\n        if (min_new_size > this.capacity) {\r\n            let new_size = this.capacity || min_new_size;\r\n\r\n            do {\r\n                new_size *= 2;\r\n            } while (new_size < min_new_size);\r\n\r\n            const new_buffer = new ArrayBuffer(new_size);\r\n            new Uint8Array(new_buffer).set(new Uint8Array(this._buffer, 0, this.size));\r\n            this._buffer = new_buffer;\r\n            this._data_view = new DataView(this._buffer);\r\n        }\r\n    }\r\n}\r\n","import { Cursor } from \"../../cursor/Cursor\";\r\nimport { WritableCursor } from \"../../cursor/WritableCursor\";\r\nimport { WritableResizableBufferCursor } from \"../../cursor/WritableResizableBufferCursor\";\r\nimport { ResizableBuffer } from \"../../ResizableBuffer\";\r\n\r\nexport function compress(src: Cursor): Cursor {\r\n    const ctx = new Context(src);\r\n    const hash_table = new HashTable();\r\n\r\n    if (ctx.src.size <= 3) {\r\n        // Make a literal copy of the input.\r\n        while (ctx.src.bytes_left) {\r\n            ctx.set_bit(1);\r\n            ctx.copy_literal();\r\n        }\r\n    } else {\r\n        // Add the first two \"strings\" to the hash table.\r\n        hash_table.put(hash_table.hash(ctx.src), 0);\r\n        ctx.src.seek(1);\r\n        hash_table.put(hash_table.hash(ctx.src), 1);\r\n        ctx.src.seek(-1);\r\n\r\n        // Copy the first two bytes as literals.\r\n        ctx.set_bit(1);\r\n        ctx.copy_literal();\r\n        ctx.set_bit(1);\r\n        ctx.copy_literal();\r\n\r\n        while (ctx.src.bytes_left > 1) {\r\n            let [offset, mlen] = ctx.find_longest_match(hash_table, false);\r\n\r\n            if (mlen > 0) {\r\n                ctx.src.seek(1);\r\n                const [offset2, mlen2] = ctx.find_longest_match(hash_table, true);\r\n                ctx.src.seek(-1);\r\n\r\n                // Did the \"lazy match\" produce something more compressed?\r\n                if (mlen2 > mlen) {\r\n                    let copy_literal = true;\r\n                    // Check if it is a good idea to switch from a short match to a long one.\r\n                    if (mlen >= 2 && mlen <= 5 && offset2 < offset) {\r\n                        if (offset >= -256 && offset2 < -256) {\r\n                            if (mlen2 - mlen < 3) {\r\n                                copy_literal = false;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (copy_literal) {\r\n                        ctx.set_bit(1);\r\n                        ctx.copy_literal();\r\n                        continue;\r\n                    }\r\n                }\r\n\r\n                // What kind of match did we find?\r\n                if (mlen >= 2 && mlen <= 5 && offset >= -256) {\r\n                    // Short match.\r\n                    ctx.set_bit(0);\r\n                    ctx.set_bit(0);\r\n                    ctx.set_bit((mlen - 2) & 0x02);\r\n                    ctx.set_bit((mlen - 2) & 0x01);\r\n                    ctx.write_literal(offset & 0xff);\r\n                    ctx.add_intermediates(hash_table, mlen);\r\n                    continue;\r\n                } else if (mlen >= 3 && mlen <= 9) {\r\n                    // Long match, short length.\r\n                    ctx.set_bit(0);\r\n                    ctx.set_bit(1);\r\n                    ctx.write_literal(((offset & 0x1f) << 3) | ((mlen - 2) & 0x07));\r\n                    ctx.write_literal(offset >> 5);\r\n                    ctx.add_intermediates(hash_table, mlen);\r\n                    continue;\r\n                } else if (mlen > 9) {\r\n                    // Long match, long length.\r\n                    if (mlen > 256) {\r\n                        mlen = 256;\r\n                    }\r\n\r\n                    ctx.set_bit(0);\r\n                    ctx.set_bit(1);\r\n                    ctx.write_literal((offset & 0x1f) << 3);\r\n                    ctx.write_literal(offset >> 5);\r\n                    ctx.write_literal(mlen - 1);\r\n                    ctx.add_intermediates(hash_table, mlen);\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            // If we get here, we didn't find a suitable match, so just we just make a literal copy.\r\n            ctx.set_bit(1);\r\n            ctx.copy_literal();\r\n        }\r\n\r\n        // If there's a left over byte at the end, make a literal copy.\r\n        if (ctx.src.bytes_left) {\r\n            ctx.set_bit(1);\r\n            ctx.copy_literal();\r\n        }\r\n    }\r\n\r\n    ctx.write_eof();\r\n\r\n    return ctx.dst.seek_start(0);\r\n}\r\n\r\nconst MAX_WINDOW = 0x2000;\r\nconst WINDOW_MASK = MAX_WINDOW - 1;\r\nconst HASH_SIZE = 1 << 8;\r\n\r\nclass Context {\r\n    src: Cursor;\r\n    dst: WritableCursor;\r\n    flags: number;\r\n    flag_bits_left: number;\r\n    flag_offset: number;\r\n\r\n    constructor(cursor: Cursor) {\r\n        this.src = cursor;\r\n        this.dst = new WritableResizableBufferCursor(\r\n            new ResizableBuffer(cursor.size),\r\n            cursor.endianness\r\n        );\r\n        this.flags = 0;\r\n        this.flag_bits_left = 0;\r\n        this.flag_offset = 0;\r\n    }\r\n\r\n    set_bit(bit: number): void {\r\n        if (!this.flag_bits_left--) {\r\n            // Write out the flags to their position in the file, and store the next flags byte position.\r\n            const pos = this.dst.position;\r\n            this.dst\r\n                .seek_start(this.flag_offset)\r\n                .write_u8(this.flags)\r\n                .seek_start(pos)\r\n                .write_u8(0); // Placeholder for the next flags byte.\r\n            this.flag_offset = pos;\r\n            this.flag_bits_left = 7;\r\n        }\r\n\r\n        this.flags >>>= 1;\r\n\r\n        if (bit) {\r\n            this.flags |= 0x80;\r\n        }\r\n    }\r\n\r\n    copy_literal(): void {\r\n        this.dst.write_u8(this.src.u8());\r\n    }\r\n\r\n    write_literal(value: number): void {\r\n        this.dst.write_u8(value);\r\n    }\r\n\r\n    write_final_flags(): void {\r\n        this.flags >>>= this.flag_bits_left;\r\n        const pos = this.dst.position;\r\n        this.dst\r\n            .seek_start(this.flag_offset)\r\n            .write_u8(this.flags)\r\n            .seek_start(pos);\r\n    }\r\n\r\n    write_eof(): void {\r\n        this.set_bit(0);\r\n        this.set_bit(1);\r\n\r\n        this.write_final_flags();\r\n\r\n        this.write_literal(0);\r\n        this.write_literal(0);\r\n    }\r\n\r\n    match_length(s2: number): number {\r\n        let len = 0;\r\n        let s1 = this.src.position;\r\n        const size = this.src.size;\r\n\r\n        while (s1 < size && this.src.u8_at(s1) === this.src.u8_at(s2)) {\r\n            ++len;\r\n            ++s1;\r\n            ++s2;\r\n        }\r\n\r\n        return len;\r\n    }\r\n\r\n    find_longest_match(hash_table: HashTable, lazy: boolean): [number, number] {\r\n        if (!this.src.bytes_left) {\r\n            return [0, 0];\r\n        }\r\n\r\n        // Figure out where we're looking.\r\n        const hash = hash_table.hash(this.src);\r\n\r\n        // If there is nothing in the table at that point, bail out now.\r\n        let entry = hash_table.get(hash);\r\n\r\n        if (entry === null) {\r\n            if (!lazy) {\r\n                hash_table.put(hash, this.src.position);\r\n            }\r\n\r\n            return [0, 0];\r\n        }\r\n\r\n        // If we'd go outside the window, truncate the hash chain now.\r\n        if (this.src.position - entry > MAX_WINDOW) {\r\n            hash_table.hash_to_offset[hash] = null;\r\n\r\n            if (!lazy) {\r\n                hash_table.put(hash, this.src.position);\r\n            }\r\n\r\n            return [0, 0];\r\n        }\r\n\r\n        // Ok, we have something in the hash table that matches the hash value.\r\n        // Follow the chain to see if we have an actual string match, and find the longest match.\r\n        let longest_length = 0;\r\n        let longest_match = 0;\r\n\r\n        while (entry != null) {\r\n            const mlen = this.match_length(entry);\r\n\r\n            if (mlen > longest_length || mlen >= 256) {\r\n                longest_length = mlen;\r\n                longest_match = entry;\r\n            }\r\n\r\n            // Follow the chain, making sure not to exceed a difference of MAX_WINDOW.\r\n            let entry_2 = hash_table.prev(entry);\r\n\r\n            if (entry_2 !== null) {\r\n                // If we'd go outside the window, truncate the hash chain now.\r\n                if (this.src.position - entry_2 > MAX_WINDOW) {\r\n                    hash_table.set_prev(entry, null);\r\n                    entry_2 = null;\r\n                }\r\n            }\r\n\r\n            entry = entry_2;\r\n        }\r\n\r\n        // Add our current string to the hash.\r\n        if (!lazy) {\r\n            hash_table.put(hash, this.src.position);\r\n        }\r\n\r\n        // Did we find a match?\r\n        const offset = longest_length > 0 ? longest_match - this.src.position : 0;\r\n        return [offset, longest_length];\r\n    }\r\n\r\n    add_intermediates(hash_table: HashTable, len: number): void {\r\n        this.src.seek(1);\r\n\r\n        for (let i = 1; i < len; ++i) {\r\n            const hash = hash_table.hash(this.src);\r\n            hash_table.put(hash, this.src.position);\r\n            this.src.seek(1);\r\n        }\r\n    }\r\n}\r\n\r\nclass HashTable {\r\n    hash_to_offset: (number | null)[] = new Array(HASH_SIZE).fill(null);\r\n    masked_offset_to_prev: (number | null)[] = new Array(MAX_WINDOW).fill(null);\r\n\r\n    hash(cursor: Cursor): number {\r\n        let hash = cursor.u8();\r\n\r\n        if (cursor.bytes_left) {\r\n            hash ^= cursor.u8();\r\n            cursor.seek(-1);\r\n        }\r\n\r\n        cursor.seek(-1);\r\n        return hash;\r\n    }\r\n\r\n    get(hash: number): number | null {\r\n        return this.hash_to_offset[hash];\r\n    }\r\n\r\n    put(hash: number, offset: number): void {\r\n        this.set_prev(offset, this.hash_to_offset[hash]);\r\n        this.hash_to_offset[hash] = offset;\r\n    }\r\n\r\n    prev(offset: number): number | null {\r\n        return this.masked_offset_to_prev[offset & WINDOW_MASK];\r\n    }\r\n\r\n    set_prev(offset: number, prevOffset: number | null): void {\r\n        this.masked_offset_to_prev[offset & WINDOW_MASK] = prevOffset;\r\n    }\r\n}\r\n","import Logger from \"js-logger\";\r\nimport { Cursor } from \"../../cursor/Cursor\";\r\nimport { WritableCursor } from \"../../cursor/WritableCursor\";\r\nimport { WritableResizableBufferCursor } from \"../../cursor/WritableResizableBufferCursor\";\r\nimport { ResizableBuffer } from \"../../ResizableBuffer\";\r\n\r\nconst logger = Logger.get(\"data_formats/compression/prs/decompress\");\r\n\r\nexport function decompress(cursor: Cursor): Cursor {\r\n    const ctx = new Context(cursor);\r\n\r\n    while (true) {\r\n        if (ctx.read_flag_bit() === 1) {\r\n            // Single byte copy.\r\n            ctx.copy_u8();\r\n        } else {\r\n            // Multi byte copy.\r\n            let length;\r\n            let offset;\r\n\r\n            if (ctx.read_flag_bit() === 0) {\r\n                // Short copy.\r\n                length = ctx.read_flag_bit() << 1;\r\n                length |= ctx.read_flag_bit();\r\n                length += 2;\r\n\r\n                offset = ctx.read_u8() - 256;\r\n            } else {\r\n                // Long copy or end of file.\r\n                offset = ctx.read_u16();\r\n\r\n                // Two zero bytes implies that this is the end of the file.\r\n                if (offset === 0) {\r\n                    break;\r\n                }\r\n\r\n                // Do we need to read a length byte, or is it encoded in what we already have?\r\n                length = offset & 0b111;\r\n                offset >>>= 3;\r\n\r\n                if (length === 0) {\r\n                    length = ctx.read_u8();\r\n                    length += 1;\r\n                } else {\r\n                    length += 2;\r\n                }\r\n\r\n                offset -= 8192;\r\n            }\r\n\r\n            ctx.offset_copy(offset, length);\r\n        }\r\n    }\r\n\r\n    return ctx.dst.seek_start(0);\r\n}\r\n\r\nclass Context {\r\n    src: Cursor;\r\n    dst: WritableCursor;\r\n    flags: number;\r\n    flag_bits_left: number;\r\n\r\n    constructor(cursor: Cursor) {\r\n        this.src = cursor;\r\n        this.dst = new WritableResizableBufferCursor(\r\n            new ResizableBuffer(Math.floor(1.5 * cursor.size)),\r\n            cursor.endianness\r\n        );\r\n        this.flags = 0;\r\n        this.flag_bits_left = 0;\r\n    }\r\n\r\n    read_flag_bit(): number {\r\n        // Fetch a new flag byte when the previous byte has been processed.\r\n        if (this.flag_bits_left === 0) {\r\n            this.flags = this.read_u8();\r\n            this.flag_bits_left = 8;\r\n        }\r\n\r\n        let bit = this.flags & 1;\r\n        this.flags >>>= 1;\r\n        this.flag_bits_left -= 1;\r\n        return bit;\r\n    }\r\n\r\n    copy_u8(): void {\r\n        this.dst.write_u8(this.read_u8());\r\n    }\r\n\r\n    read_u8(): number {\r\n        return this.src.u8();\r\n    }\r\n\r\n    read_u16(): number {\r\n        return this.src.u16();\r\n    }\r\n\r\n    offset_copy(offset: number, length: number): void {\r\n        if (offset < -8192 || offset > 0) {\r\n            logger.error(`offset was ${offset}, should be between -8192 and 0.`);\r\n        }\r\n\r\n        if (length < 1 || length > 256) {\r\n            logger.error(`length was ${length}, should be between 1 and 256.`);\r\n        }\r\n\r\n        // The length can be larger than -offset, in that case we copy -offset bytes size/-offset times.\r\n        const buf_size = Math.min(-offset, length);\r\n\r\n        this.dst.seek(offset);\r\n        const buf = this.dst.take(buf_size);\r\n        this.dst.seek(-offset - buf_size);\r\n\r\n        for (let i = 0; i < Math.floor(length / buf_size); ++i) {\r\n            this.dst.write_cursor(buf);\r\n            buf.seek_start(0);\r\n        }\r\n\r\n        this.dst.write_cursor(buf.take(length % buf_size));\r\n    }\r\n}\r\n","import Logger from \"js-logger\";\r\nimport { Cursor } from \"../../cursor/Cursor\";\r\n\r\nconst logger = Logger.get(\"data_formats/parsing/quest/bin\");\r\n\r\nexport interface BinFile {\r\n    quest_id: number;\r\n    language: number;\r\n    quest_name: string;\r\n    short_description: string;\r\n    long_description: string;\r\n    function_offsets: number[];\r\n    instructions: Instruction[];\r\n    data: ArrayBuffer;\r\n}\r\n\r\nexport function parse_bin(cursor: Cursor, lenient: boolean = false): BinFile {\r\n    const object_code_offset = cursor.u32();\r\n    const function_offset_table_offset = cursor.u32(); // Relative offsets\r\n    const size = cursor.u32();\r\n    cursor.seek(4); // Always seems to be 0xFFFFFFFF\r\n    const quest_id = cursor.u32();\r\n    const language = cursor.u32();\r\n    const quest_name = cursor.string_utf16(64, true, true);\r\n    const short_description = cursor.string_utf16(256, true, true);\r\n    const long_description = cursor.string_utf16(576, true, true);\r\n\r\n    if (size !== cursor.size) {\r\n        logger.warn(`Value ${size} in bin size field does not match actual size ${cursor.size}.`);\r\n    }\r\n\r\n    const function_offset_count = Math.floor((cursor.size - function_offset_table_offset) / 4);\r\n\r\n    cursor.seek_start(function_offset_table_offset);\r\n    const function_offsets = [];\r\n\r\n    for (let i = 0; i < function_offset_count; ++i) {\r\n        function_offsets.push(cursor.i32());\r\n    }\r\n\r\n    const instructions = parse_object_code(\r\n        cursor\r\n            .seek_start(object_code_offset)\r\n            .take(function_offset_table_offset - object_code_offset),\r\n        lenient\r\n    );\r\n\r\n    return {\r\n        quest_id,\r\n        language,\r\n        quest_name,\r\n        short_description,\r\n        long_description,\r\n        function_offsets,\r\n        instructions,\r\n        data: cursor.seek_start(0).array_buffer(),\r\n    };\r\n}\r\n\r\nexport function write_bin({ data }: { data: ArrayBuffer }): ArrayBuffer {\r\n    return data;\r\n}\r\n\r\nexport interface Instruction {\r\n    opcode: number;\r\n    mnemonic: string;\r\n    args: any[];\r\n    size: number;\r\n}\r\n\r\nfunction parse_object_code(cursor: Cursor, lenient: boolean): Instruction[] {\r\n    const instructions = [];\r\n\r\n    try {\r\n        while (cursor.bytes_left) {\r\n            const main_opcode = cursor.u8();\r\n            let opcode;\r\n            let opsize;\r\n            let list;\r\n\r\n            switch (main_opcode) {\r\n                case 0xf8:\r\n                    opcode = cursor.u8();\r\n                    opsize = 2;\r\n                    list = f8_opcode_list;\r\n                    break;\r\n                case 0xf9:\r\n                    opcode = cursor.u8();\r\n                    opsize = 2;\r\n                    list = f9_opcode_list;\r\n                    break;\r\n                default:\r\n                    opcode = main_opcode;\r\n                    opsize = 1;\r\n                    list = opcode_list;\r\n                    break;\r\n            }\r\n\r\n            let [, mnemonic, mask] = list[opcode];\r\n\r\n            if (mask == null) {\r\n                let full_opcode = main_opcode;\r\n\r\n                if (main_opcode === 0xf8 || main_opcode === 0xf9) {\r\n                    full_opcode = (full_opcode << 8) | opcode;\r\n                }\r\n\r\n                logger.warn(\r\n                    `Parameters unknown for opcode 0x${full_opcode\r\n                        .toString(16)\r\n                        .toUpperCase()}, assuming 0.`\r\n                );\r\n\r\n                instructions.push({\r\n                    opcode,\r\n                    mnemonic,\r\n                    args: [],\r\n                    size: opsize,\r\n                });\r\n            } else {\r\n                try {\r\n                    const opargs = parse_instruction_arguments(cursor, mask);\r\n\r\n                    instructions.push({\r\n                        opcode,\r\n                        mnemonic,\r\n                        args: opargs.args,\r\n                        size: opsize + opargs.size,\r\n                    });\r\n                } catch (e) {\r\n                    instructions.push({\r\n                        opcode,\r\n                        mnemonic,\r\n                        args: [],\r\n                        size: opsize,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    } catch (e) {\r\n        if (lenient) {\r\n            logger.error(\"Couldn't fully parse object code.\", e);\r\n        } else {\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    return instructions;\r\n}\r\n\r\nfunction parse_instruction_arguments(cursor: Cursor, mask: string): { args: any[]; size: number } {\r\n    const old_pos = cursor.position;\r\n    const args = [];\r\n    let args_size: number;\r\n\r\n    outer: for (let i = 0; i < mask.length; ++i) {\r\n        switch (mask.charAt(i)) {\r\n            // Pushes something on the stack\r\n            case \"p\":\r\n                break;\r\n            // Pops the stack (no increments)\r\n            case \"a\":\r\n                break outer;\r\n\r\n            // Unsigned integers\r\n            case \"B\":\r\n                args.push(cursor.u8());\r\n                break;\r\n            case \"W\":\r\n                args.push(cursor.u16());\r\n                break;\r\n            case \"L\":\r\n                args.push(cursor.u32());\r\n                break;\r\n\r\n            // Signed integers\r\n            case \"I\":\r\n                args.push(cursor.i32());\r\n                break;\r\n\r\n            // Floats\r\n            case \"f\":\r\n            case \"F\":\r\n                args.push(cursor.f32());\r\n                break;\r\n\r\n            // Registers?\r\n            case \"R\":\r\n            case \"r\":\r\n                cursor.seek(1);\r\n                break;\r\n\r\n            // Registers with unsigned integers?\r\n            case \"b\":\r\n                args.push(cursor.u8());\r\n                break;\r\n            case \"w\":\r\n                args.push(cursor.u16());\r\n                break;\r\n            case \"l\":\r\n                args.push(cursor.u32());\r\n                break;\r\n\r\n            // Registers with signed integers?\r\n            case \"i\":\r\n                args.push(cursor.i32());\r\n                break;\r\n\r\n            // Variably sized data?\r\n            case \"j\":\r\n            case \"J\":\r\n                args_size = 2 * cursor.u8();\r\n                cursor.seek(args_size);\r\n                break;\r\n            case \"t\":\r\n            case \"T\":\r\n                args_size = cursor.u8();\r\n                cursor.seek(args_size);\r\n                break;\r\n\r\n            // Strings\r\n            case \"s\":\r\n            case \"S\":\r\n                while (cursor.u16()) {\r\n                    // Eat up the entire string.\r\n                }\r\n                break;\r\n\r\n            default:\r\n                throw new Error(`Unknown mask part ${mask.charAt(i)}.`);\r\n        }\r\n    }\r\n\r\n    return { args, size: cursor.position - old_pos };\r\n}\r\n\r\nconst opcode_list: [number, string, string | null][] = [\r\n    [0x00, \"nop\", \"\"],\r\n    [0x01, \"ret\", \"\"],\r\n    [0x02, \"sync\", \"\"],\r\n    [0x03, \"exit\", \"aL\"],\r\n    [0x04, \"thread\", \"W\"],\r\n    [0x05, \"va_start\", \"\"],\r\n    [0x06, \"va_end\", \"\"],\r\n    [0x07, \"va_call\", \"W\"],\r\n    [0x08, \"let\", \"RR\"],\r\n    [0x09, \"leti\", \"RI\"],\r\n    [0x0a, \"unknown\", null],\r\n    [0x0b, \"unknown\", null],\r\n    [0x0c, \"unknown\", null],\r\n    [0x0d, \"unknown\", null],\r\n    [0x0e, \"unknown\", null],\r\n    [0x0f, \"unknown\", null],\r\n    [0x10, \"set\", \"R\"],\r\n    [0x11, \"clear\", \"R\"],\r\n    [0x12, \"rev\", \"R\"],\r\n    [0x13, \"gset\", \"w\"],\r\n    [0x14, \"gclear\", \"w\"],\r\n    [0x15, \"grev\", \"w\"],\r\n    [0x16, \"glet\", \"w\"],\r\n    [0x17, \"gget\", \"wR\"],\r\n    [0x18, \"add\", \"RR\"],\r\n    [0x19, \"addi\", \"RI\"],\r\n    [0x1a, \"sub\", \"RR\"],\r\n    [0x1b, \"subi\", \"RI\"],\r\n    [0x1c, \"mul\", \"RR\"],\r\n    [0x1d, \"muli\", \"RI\"],\r\n    [0x1e, \"div\", \"RR\"],\r\n    [0x1f, \"divi\", \"RI\"],\r\n    [0x20, \"and\", \"RR\"],\r\n    [0x21, \"andi\", \"RI\"],\r\n    [0x22, \"or\", \"RR\"],\r\n    [0x23, \"ori\", \"RI\"],\r\n    [0x24, \"xor\", \"RR\"],\r\n    [0x25, \"xori\", \"RI\"],\r\n    [0x26, \"mod\", \"RR\"],\r\n    [0x27, \"modi\", \"RI\"],\r\n    [0x28, \"jmp\", \"W\"],\r\n    [0x29, \"call\", \"W\"],\r\n    [0x2a, \"jmp_on\", \"Wt\"],\r\n    [0x2b, \"jmp_off\", \"Wt\"],\r\n    [0x2c, \"jmp_=\", \"RRW\"],\r\n    [0x2d, \"jmpi_=\", \"RIW\"],\r\n    [0x2e, \"jmp_!=\", \"RRW\"],\r\n    [0x2f, \"jmpi_!=\", \"RIW\"],\r\n    [0x30, \"ujmp_>\", \"RRW\"],\r\n    [0x31, \"ujmpi_>\", \"RLW\"],\r\n    [0x32, \"jmp_>\", \"RRW\"],\r\n    [0x33, \"jmpi_>\", \"RIW\"],\r\n    [0x34, \"ujmp_<\", \"RRW\"],\r\n    [0x35, \"ujmpi_<\", \"RLW\"],\r\n    [0x36, \"jmp_<\", \"RRW\"],\r\n    [0x37, \"jmpi_<\", \"RIW\"],\r\n    [0x38, \"ujmp_>=\", \"RRW\"],\r\n    [0x39, \"ujmpi_>=\", \"RLW\"],\r\n    [0x3a, \"jmp_>=\", \"RRW\"],\r\n    [0x3b, \"jmpi_>=\", \"RIW\"],\r\n    [0x3c, \"ujmp_<=\", \"RRW\"],\r\n    [0x3d, \"ujmpi_<=\", \"RLW\"],\r\n    [0x3e, \"jmp_<=\", \"RRW\"],\r\n    [0x3f, \"jmpi_<=\", \"RIW\"],\r\n    [0x40, \"switch_jmp\", \"Rj\"],\r\n    [0x41, \"switch_call\", \"Rj\"],\r\n    [0x42, \"stack_push\", \"R\"],\r\n    [0x43, \"stack_pop\", \"R\"],\r\n    [0x44, \"stack_pushm\", \"RL\"],\r\n    [0x45, \"stack_popm\", \"RL\"],\r\n    [0x46, \"unknown\", null],\r\n    [0x47, \"unknown\", null],\r\n    [0x48, \"arg_pushr\", \"pR\"],\r\n    [0x49, \"arg_pushl\", \"pI\"],\r\n    [0x4a, \"arg_pushb\", \"pB\"],\r\n    [0x4b, \"arg_pushw\", \"pW\"],\r\n    [0x4c, \"unknown\", null],\r\n    [0x4d, \"unknown\", null],\r\n    [0x4e, \"arg_pushs\", \"ps\"],\r\n    [0x4f, \"unknown4F\", \"RR\"],\r\n    [0x50, \"message\", \"aLs\"],\r\n    [0x51, \"list\", \"aRs\"],\r\n    [0x52, \"fadein\", \"\"],\r\n    [0x53, \"fadeout\", \"\"],\r\n    [0x54, \"se\", \"aL\"],\r\n    [0x55, \"bgm\", \"aL\"],\r\n    [0x56, \"unknown\", null],\r\n    [0x57, \"unknown\", null],\r\n    [0x58, \"enable\", \"aL\"],\r\n    [0x59, \"disable\", \"aL\"],\r\n    [0x5a, \"window_msg\", \"as\"],\r\n    [0x5b, \"add_msg\", \"as\"],\r\n    [0x5c, \"mesend\", \"\"],\r\n    [0x5d, \"gettime\", \"R\"],\r\n    [0x5e, \"winend\", \"\"],\r\n    [0x5f, \"unknown\", null],\r\n    //[ 0x60, 'npc_crt_V1', null ],\r\n    [0x60, \"npc_crt_V3\", \"R\"],\r\n    [0x61, \"npc_stop\", \"aR\"],\r\n    [0x62, \"npc_play\", \"aL\"],\r\n    [0x63, \"npc_kill\", \"aR\"],\r\n    [0x64, \"npc_nont\", \"\"],\r\n    [0x65, \"npc_talk\", \"\"],\r\n    //[ 0x66, 'npc_crp_V1', null ],\r\n    [0x66, \"npc_crp_V3\", \"R\"],\r\n    [0x67, \"unknown\", null],\r\n    [0x68, \"create_pipe\", \"aL\"],\r\n    //[ 0x69, 'p_hpstat_V1', null ],\r\n    [0x69, \"p_hpstat_V3\", \"aRL\"],\r\n    //[ 0x6A, 'p_dead_V1', null ],\r\n    [0x6a, \"p_dead_V3\", \"aRL\"],\r\n    [0x6b, \"p_disablewarp\", \"\"],\r\n    [0x6c, \"p_enablewarp\", \"\"],\r\n    //[ 0x6D, 'p_move_V1', null ],\r\n    [0x6d, \"p_move_V3\", \"R\"],\r\n    [0x6e, \"p_look\", \"aL\"],\r\n    [0x6f, \"unknown\", null],\r\n    [0x70, \"p_action_disable\", \"\"],\r\n    [0x71, \"p_action_enable\", \"\"],\r\n    [0x72, \"disable_movement1\", \"aR\"],\r\n    [0x73, \"enable_movement1\", \"aR\"],\r\n    [0x74, \"p_noncol\", \"\"],\r\n    [0x75, \"p_col\", \"\"],\r\n    [0x76, \"p_setpos\", \"aRR\"],\r\n    [0x77, \"p_return_guild\", \"\"],\r\n    [0x78, \"p_talk_guild\", \"aL\"],\r\n    //[ 0x79, 'npc_talk_pl_V1', null ],\r\n    [0x79, \"npc_talk_pl_V3\", \"R\"],\r\n    [0x7a, \"npc_talk_kill\", \"aL\"],\r\n    //[ 0x7B, 'npc_crtpk_V1', null ],\r\n    [0x7b, \"npc_crtpk_V3\", \"R\"],\r\n    //[ 0x7C, 'npc_crppk_V1', null ],\r\n    [0x7c, \"npc_crppk_V3\", \"R\"],\r\n    //[ 0x7D, 'npc_crptalk_v1', null ],\r\n    [0x7d, \"npc_crptalk_v3\", \"R\"],\r\n    [0x7e, \"p_look_at_V1\", \"aLL\"],\r\n    //[ 0x7F, 'npc_crp_id_V1', null ],\r\n    [0x7f, \"npc_crp_id_V3\", \"R\"],\r\n    [0x80, \"cam_quake\", \"\"],\r\n    [0x81, \"cam_adj\", \"\"],\r\n    [0x82, \"cam_zmin\", \"\"],\r\n    [0x83, \"cam_zmout\", \"\"],\r\n    //[ 0x84, 'cam_pan_V1', null ],\r\n    [0x84, \"cam_pan_V3\", \"R\"],\r\n    [0x85, \"game_lev_super\", \"\"],\r\n    [0x86, \"game_lev_reset\", \"\"],\r\n    //[ 0x87, 'pos_pipe_V1', null ],\r\n    [0x87, \"pos_pipe_V3\", \"R\"],\r\n    [0x88, \"if_zone_clear\", \"RR\"],\r\n    [0x89, \"chk_ene_num\", \"R\"],\r\n    [0x8a, \"unhide_obj\", \"R\"],\r\n    [0x8b, \"unhide_ene\", \"R\"],\r\n    [0x8c, \"at_coords_call\", \"R\"],\r\n    [0x8d, \"at_coords_talk\", \"R\"],\r\n    [0x8e, \"col_npcin\", \"R\"],\r\n    [0x8f, \"col_npcinr\", \"R\"],\r\n    [0x90, \"switch_on\", \"aL\"],\r\n    [0x91, \"switch_off\", \"aL\"],\r\n    [0x92, \"playbgm_epi\", \"aL\"],\r\n    [0x93, \"set_mainwarp\", \"aL\"],\r\n    [0x94, \"set_obj_param\", \"RR\"],\r\n    [0x95, \"set_floor_handler\", \"aLW\"],\r\n    [0x96, \"clr_floor_handler\", \"aL\"],\r\n    [0x97, \"col_plinaw\", \"R\"],\r\n    [0x98, \"hud_hide\", \"\"],\r\n    [0x99, \"hud_show\", \"\"],\r\n    [0x9a, \"cine_enable\", \"\"],\r\n    [0x9b, \"cine_disable\", \"\"],\r\n    [0x9c, \"unknown\", null],\r\n    [0x9d, \"unknown\", null],\r\n    [0x9e, \"unknown\", null],\r\n    [0x9f, \"unknown\", null],\r\n    [0xa0, \"unknown\", null],\r\n    [0xa1, \"set_qt_failure\", \"W\"],\r\n    [0xa2, \"set_qt_success\", \"W\"],\r\n    [0xa3, \"clr_qt_failure\", \"\"],\r\n    [0xa4, \"clr_qt_success\", \"\"],\r\n    [0xa5, \"set_qt_cancel\", \"W\"],\r\n    [0xa6, \"clr_qt_cancel\", \"\"],\r\n    [0xa7, \"unknown\", null],\r\n    //[ 0xA8, 'pl_walk_V1', null ],\r\n    [0xa8, \"pl_walk_V3\", \"R\"],\r\n    [0xa9, \"unknown\", null],\r\n    [0xaa, \"unknown\", null],\r\n    [0xab, \"unknown\", null],\r\n    [0xac, \"unknown\", null],\r\n    [0xad, \"unknown\", null],\r\n    [0xae, \"unknown\", null],\r\n    [0xaf, \"unknown\", null],\r\n    [0xb0, \"pl_add_meseta\", \"aLL\"],\r\n    [0xb1, \"thread_stg\", \"W\"],\r\n    [0xb2, \"del_obj_param\", \"R\"],\r\n    [0xb3, \"item_create\", \"RR\"],\r\n    [0xb4, \"item_create2\", \"RR\"],\r\n    [0xb5, \"item_delete\", \"RR\"],\r\n    [0xb6, \"item_delete2\", \"RR\"],\r\n    [0xb7, \"item_check\", \"RR\"],\r\n    [0xb8, \"setevt\", \"aL\"],\r\n    [0xb9, \"get_difflvl\", \"R\"],\r\n    [0xba, \"set_qt_exit\", \"W\"],\r\n    [0xbb, \"clr_qt_exit\", \"\"],\r\n    [0xbc, \"unknown\", null],\r\n    [0xbd, \"unknown\", null],\r\n    [0xbe, \"unknown\", null],\r\n    [0xbf, \"unknown\", null],\r\n    //[ 0xC0, 'particle_V1', null ],\r\n    [0xc0, \"particle_V3\", \"R\"],\r\n    [0xc1, \"npc_text\", \"aLs\"],\r\n    [0xc2, \"npc_chkwarp\", \"\"],\r\n    [0xc3, \"pl_pkoff\", \"\"],\r\n    [0xc4, \"map_designate\", \"R\"],\r\n    [0xc5, \"masterkey_on\", \"\"],\r\n    [0xc6, \"masterkey_off\", \"\"],\r\n    [0xc7, \"window_time\", \"\"],\r\n    [0xc8, \"winend_time\", \"\"],\r\n    [0xc9, \"winset_time\", \"R\"],\r\n    [0xca, \"getmtime\", \"R\"],\r\n    [0xcb, \"set_quest_board_handler\", \"aLWs\"],\r\n    [0xcc, \"clear_quest_board_handler\", \"aL\"],\r\n    //[ 0xCD, 'particle_id_V1', null ],\r\n    [0xcd, \"particle_id_V3\", \"R\"],\r\n    //[ 0xCE, 'npc_crptalk_id_V1', null ],\r\n    [0xce, \"npc_crptalk_id_V3\", \"R\"],\r\n    [0xcf, \"npc_lang_clean\", \"\"],\r\n    [0xd0, \"pl_pkon\", \"\"],\r\n    [0xd1, \"pl_chk_item2\", \"RR\"],\r\n    [0xd2, \"enable_mainmenu\", \"\"],\r\n    [0xd3, \"disable_mainmenu\", \"\"],\r\n    [0xd4, \"start_battlebgm\", \"\"],\r\n    [0xd5, \"end_battlebgm\", \"\"],\r\n    [0xd6, \"disp_msg_qb\", \"as\"],\r\n    [0xd7, \"close_msg_qb\", \"\"],\r\n    //[ 0xD8, 'set_eventflag_v1', null ],\r\n    [0xd8, \"set_eventflag_v3\", \"aLL\"],\r\n    [0xd9, \"sync_leti\", null],\r\n    [0xda, \"set_returnhunter\", \"\"],\r\n    [0xdb, \"set_returncity\", \"\"],\r\n    [0xdc, \"load_pvr\", \"\"],\r\n    [0xdd, \"load_midi\", \"\"],\r\n    [0xde, \"unknown\", null],\r\n    //[ 0xDF, 'npc_param_V1', null ],\r\n    [0xdf, \"npc_param_V3\", \"aRL\"],\r\n    [0xe0, \"pad_dragon\", \"\"],\r\n    [0xe1, \"clear_mainwarp\", \"aL\"],\r\n    //[ 0xE2, 'pcam_param_V1', null ],\r\n    [0xe2, \"pcam_param_V3\", \"R\"],\r\n    //[ 0xE3, 'start_setevt_v1', null ],\r\n    [0xe3, \"start_setevt_v3\", \"aRL\"],\r\n    [0xe4, \"warp_on\", \"\"],\r\n    [0xe5, \"warp_off\", \"\"],\r\n    [0xe6, \"get_slotnumber\", \"R\"],\r\n    [0xe7, \"get_servernumber\", \"R\"],\r\n    [0xe8, \"set_eventflag2\", \"aLR\"],\r\n    [0xe9, \"res\", \"RR\"],\r\n    [0xea, \"unknownEA\", \"RL\"],\r\n    [0xeb, \"enable_bgmctrl\", \"aL\"],\r\n    [0xec, \"sw_send\", \"R\"],\r\n    [0xed, \"create_bgmctrl\", \"\"],\r\n    [0xee, \"pl_add_meseta2\", \"aL\"],\r\n    //[ 0xEF, 'sync_let', null ],\r\n    [0xef, \"sync_register\", \"aRL\"],\r\n    [0xf0, \"send_regwork\", null],\r\n    //[ 0xF1, 'leti_fixed_camera_V1', null ],\r\n    [0xf1, \"leti_fixed_camera_V3\", \"R\"],\r\n    [0xf2, \"default_camera_pos1\", \"\"],\r\n    [0xf3, \"unknown\", null],\r\n    [0xf4, \"unknown\", null],\r\n    [0xf5, \"unknown\", null],\r\n    [0xf6, \"unknown\", null],\r\n    [0xf7, \"unknown\", null],\r\n    [0xf8, \"unknownF8\", \"R\"],\r\n    [0xf9, \"unknown\", null],\r\n    [0xfa, \"get_gc_number\", \"R\"],\r\n    [0xfb, \"unknownFB\", \"W\"],\r\n    [0xfc, \"unknown\", null],\r\n    [0xfd, \"unknown\", null],\r\n    [0xfe, \"unknown\", null],\r\n    [0xff, \"unknownFF\", \"\"],\r\n];\r\n\r\nconst f8_opcode_list: [number, string, string | null][] = [\r\n    [0x00, \"unknown\", null],\r\n    [0x01, \"set_chat_callback?\", \"aRs\"],\r\n    [0x02, \"unknown\", null],\r\n    [0x03, \"unknown\", null],\r\n    [0x04, \"unknown\", null],\r\n    [0x05, \"unknown\", null],\r\n    [0x06, \"unknown\", null],\r\n    [0x07, \"unknown\", null],\r\n    [0x08, \"get_difficulty_level2\", \"R\"],\r\n    [0x09, \"get_number_of_player1\", \"R\"],\r\n    [0x0a, \"get_coord_of_player\", \"RR\"],\r\n    [0x0b, \"unknownF80B\", \"\"],\r\n    [0x0c, \"unknownF80C\", \"\"],\r\n    [0x0d, \"map_designate_ex\", \"R\"],\r\n    [0x0e, \"unknownF80E\", \"aL\"],\r\n    [0x0f, \"unknownF80F\", \"aL\"],\r\n    [0x10, \"ba_initial_floor\", \"aL\"],\r\n    [0x11, \"set_ba_rules\", \"\"],\r\n    [0x12, \"unknownF812\", \"aL\"],\r\n    [0x13, \"unknownF813\", \"aL\"],\r\n    [0x14, \"unknownF814\", \"aL\"],\r\n    [0x15, \"unknownF815\", \"aL\"],\r\n    [0x16, \"unknownF816\", \"aL\"],\r\n    [0x17, \"unknownF817\", \"aL\"],\r\n    [0x18, \"unknownF818\", \"aL\"],\r\n    [0x19, \"unknownF819\", \"aL\"],\r\n    [0x1a, \"unknownF81A\", \"aL\"],\r\n    [0x1b, \"unknownF81B\", \"aL\"],\r\n    [0x1c, \"ba_disp_msg\", \"as\"],\r\n    [0x1d, \"death_lvl_up\", \"aL\"],\r\n    [0x1e, \"death_tech_lvl_up\", \"aL\"],\r\n    [0x1f, \"unknown\", null],\r\n    [0x20, \"cmode_stage\", \"aL\"],\r\n    [0x21, \"unknown\", null],\r\n    [0x22, \"unknown\", null],\r\n    [0x23, \"unknownF823\", \"aL\"],\r\n    [0x24, \"unknownF824\", \"aL\"],\r\n    [0x25, \"exp_multiplication\", \"R\"],\r\n    [0x26, \"exp_division?\", \"R\"],\r\n    [0x27, \"get_user_is_dead?\", \"R\"],\r\n    [0x28, \"go_floor\", \"RR\"],\r\n    [0x29, \"unknown\", null],\r\n    [0x2a, \"unknown\", null],\r\n    [0x2b, \"unlock_door2\", \"aLL\"],\r\n    [0x2c, \"lock_door2\", \"aLL\"],\r\n    [0x2d, \"if_switch_not_pressed\", \"R\"],\r\n    [0x2e, \"if_switch_pressed\", \"R\"],\r\n    [0x2f, \"unknownF82F\", \"aLL\"],\r\n    [0x30, \"control_dragon\", \"R\"],\r\n    [0x31, \"release_dragon\", \"\"],\r\n    [0x32, \"unknown\", null],\r\n    [0x33, \"unknown\", null],\r\n    [0x34, \"unknown\", null],\r\n    [0x35, \"unknown\", null],\r\n    [0x36, \"unknown\", null],\r\n    [0x37, \"unknown\", null],\r\n    [0x38, \"shrink\", \"R\"],\r\n    [0x39, \"unshrink\", \"R\"],\r\n    [0x3a, \"unknown\", null],\r\n    [0x3b, \"unknown\", null],\r\n    [0x3c, \"display_clock2?\", \"R\"],\r\n    [0x3d, \"unknownF83D\", \"aL\"],\r\n    [0x3e, \"delete_area_title?\", \"aL\"],\r\n    [0x3f, \"unknown\", null],\r\n    [0x40, \"load_npc_data\", \"\"],\r\n    [0x41, \"get_npc_data\", \"W\"],\r\n    [0x42, \"unknown\", null],\r\n    [0x43, \"unknown\", null],\r\n    [0x44, \"unknown\", null],\r\n    [0x45, \"unknown\", null],\r\n    [0x46, \"unknown\", null],\r\n    [0x47, \"unknown\", null],\r\n    [0x48, \"give_damage_score\", \"R\"],\r\n    [0x49, \"take_damage_score\", \"R\"],\r\n    [0x4a, \"unk_score_F84A\", \"R\"],\r\n    [0x4b, \"unk_score_F84B\", \"R\"],\r\n    [0x4c, \"kill_score\", \"R\"],\r\n    [0x4d, \"death_score\", \"R\"],\r\n    [0x4e, \"unk_score_F84E\", \"R\"],\r\n    [0x4f, \"enemy_death_score\", \"R\"],\r\n    [0x50, \"meseta_score\", \"R\"],\r\n    [0x51, \"unknownF851\", \"R\"],\r\n    [0x52, \"unknownF852\", \"aL\"],\r\n    [0x53, \"reverse_warps\", \"\"],\r\n    [0x54, \"unreverse_warps\", \"\"],\r\n    [0x55, \"set_ult_map\", \"\"],\r\n    [0x56, \"unset_ult_map\", \"\"],\r\n    [0x57, \"set_area_title\", \"as\"],\r\n    [0x58, \"unknownF858\", \"\"],\r\n    [0x59, \"unknown\", null],\r\n    [0x5a, \"equip_item\", \"R\"],\r\n    [0x5b, \"unequip_item\", \"aLL\"],\r\n    [0x5c, \"unknown\", null],\r\n    [0x5d, \"unknown\", null],\r\n    [0x5e, \"unknownF85E\", \"aL\"],\r\n    [0x5f, \"unknownF85F\", \"aL\"],\r\n    [0x60, \"unknownF860\", \"\"],\r\n    [0x61, \"unknownF861\", \"aL\"],\r\n    [0x62, \"unknown\", null],\r\n    [0x63, \"unknown\", null],\r\n    [0x64, \"cmode_rank\", \"aLs\"],\r\n    [0x65, \"award_item_name?\", \"\"],\r\n    [0x66, \"award_item_select?\", \"\"],\r\n    [0x67, \"award_item_give_to?\", \"R\"],\r\n    [0x68, \"unknownF868\", \"RR\"],\r\n    [0x69, \"unknownF869\", \"RR\"],\r\n    [0x6a, \"item_create_cmode\", \"RR\"],\r\n    [0x6b, \"unknownF86B\", \"R\"],\r\n    [0x6c, \"award_item_ok?\", \"R\"],\r\n    [0x6d, \"unknownF86D\", \"\"],\r\n    [0x6e, \"unknownF86E\", \"\"],\r\n    [0x6f, \"ba_set_lives\", \"aL\"],\r\n    [0x70, \"ba_set_tech_lvl\", \"aL\"],\r\n    [0x71, \"ba_set_lvl\", \"aL\"],\r\n    [0x72, \"ba_set_time_limit\", \"aL\"],\r\n    [0x73, \"boss_is_dead?\", \"R\"],\r\n    [0x74, \"unknown\", null],\r\n    [0x75, \"unknown\", null],\r\n    [0x76, \"unknown\", null],\r\n    [0x77, \"enable_techs\", \"R\"],\r\n    [0x78, \"disable_techs\", \"R\"],\r\n    [0x79, \"get_gender\", \"RR\"],\r\n    [0x7a, \"get_chara_class\", \"RR\"],\r\n    [0x7b, \"take_slot_meseta\", \"RR\"],\r\n    [0x7c, \"unknown\", null],\r\n    [0x7d, \"unknown\", null],\r\n    [0x7e, \"unknown\", null],\r\n    [0x7f, \"read_guildcard_flag\", \"RR\"],\r\n    [0x80, \"unknownF880\", \"R\"],\r\n    [0x81, \"get_pl_name?\", \"R\"],\r\n    [0x82, \"unknown\", null],\r\n    [0x83, \"unknownF883\", \"RR\"],\r\n    [0x84, \"unknown\", null],\r\n    [0x85, \"unknown\", null],\r\n    [0x86, \"unknown\", null],\r\n    [0x87, \"unknown\", null],\r\n    [0x88, \"ba_close_msg\", \"\"],\r\n    [0x89, \"unknown\", null],\r\n    [0x8a, \"get_player_status\", \"RR\"],\r\n    [0x8b, \"send_mail\", \"aRs\"],\r\n    [0x8c, \"online_check\", \"R\"],\r\n    [0x8d, \"chl_set_timerecord?\", \"R\"],\r\n    [0x8e, \"chl_get_timerecord?\", \"R\"],\r\n    [0x8f, \"unknownF88F\", \"R\"],\r\n    [0x90, \"unknownF890\", \"\"],\r\n    [0x91, \"load_enemy_data\", \"aL\"],\r\n    [0x92, \"get_physical_data\", \"W\"],\r\n    [0x93, \"get_attack_data\", \"W\"],\r\n    [0x94, \"get_resist_data\", \"W\"],\r\n    [0x95, \"get_movement_data\", \"W\"],\r\n    [0x96, \"unknown\", null],\r\n    [0x97, \"unknown\", null],\r\n    [0x98, \"shift_left\", \"RR\"],\r\n    [0x99, \"shift_right\", \"RR\"],\r\n    [0x9a, \"get_random\", \"RR\"],\r\n    [0x9b, \"reset_map\", \"\"],\r\n    [0x9c, \"disp_chl_retry_menu\", \"R\"],\r\n    [0x9d, \"chl_reverser?\", \"\"],\r\n    [0x9e, \"unknownF89E\", \"aL\"],\r\n    [0x9f, \"unknownF89F\", \"R\"],\r\n    [0xa0, \"unknownF8A0\", \"\"],\r\n    [0xa1, \"unknownF8A1\", \"\"],\r\n    [0xa2, \"unknown\", null],\r\n    [0xa3, \"unknown\", null],\r\n    [0xa4, \"unknown\", null],\r\n    [0xa5, \"unknown\", null],\r\n    [0xa6, \"unknown\", null],\r\n    [0xa7, \"unknown\", null],\r\n    [0xa8, \"unknownF8A8\", \"aL\"],\r\n    [0xa9, \"unknownF8A9\", \"R\"],\r\n    [0xaa, \"unknown\", null],\r\n    [0xab, \"unknown\", null],\r\n    [0xac, \"unknown\", null],\r\n    [0xad, \"get_number_of_player2\", \"R\"],\r\n    [0xae, \"unknown\", null],\r\n    [0xaf, \"unknown\", null],\r\n    [0xb0, \"unknown\", null],\r\n    [0xb1, \"unknown\", null],\r\n    [0xb2, \"unknown\", null],\r\n    [0xb3, \"unknown\", null],\r\n    [0xb4, \"unknown\", null],\r\n    [0xb5, \"unknown\", null],\r\n    [0xb6, \"unknown\", null],\r\n    [0xb7, \"unknown\", null],\r\n    [0xb8, \"unknownF8B8\", \"\"],\r\n    [0xb9, \"chl_recovery?\", \"\"],\r\n    [0xba, \"unknown\", null],\r\n    [0xbb, \"unknown\", null],\r\n    [0xbc, \"set_episode\", \"L\"],\r\n    [0xbd, \"unknown\", null],\r\n    [0xbe, \"unknown\", null],\r\n    [0xbf, \"unknown\", null],\r\n    [0xc0, \"file_dl_req\", \"aLs\"],\r\n    [0xc1, \"get_dl_status\", \"R\"],\r\n    [0xc2, \"gba_unknown4?\", \"\"],\r\n    [0xc3, \"get_gba_state?\", \"R\"],\r\n    [0xc4, \"unknownF8C4\", \"R\"],\r\n    [0xc5, \"unknownF8C5\", \"R\"],\r\n    [0xc6, \"QEXIT\", \"\"],\r\n    [0xc7, \"use_animation\", \"RR\"],\r\n    [0xc8, \"stop_animation\", \"R\"],\r\n    [0xc9, \"run_to_coord\", \"RR\"],\r\n    [0xca, \"set_slot_invincible\", \"RR\"],\r\n    [0xcb, \"unknownF8CB\", \"R\"],\r\n    [0xcc, \"set_slot_poison\", \"R\"],\r\n    [0xcd, \"set_slot_paralyze\", \"R\"],\r\n    [0xce, \"set_slot_shock\", \"R\"],\r\n    [0xcf, \"set_slot_freeze\", \"R\"],\r\n    [0xd0, \"set_slot_slow\", \"R\"],\r\n    [0xd1, \"set_slot_confuse\", \"R\"],\r\n    [0xd2, \"set_slot_shifta\", \"R\"],\r\n    [0xd3, \"set_slot_deband\", \"R\"],\r\n    [0xd4, \"set_slot_jellen\", \"R\"],\r\n    [0xd5, \"set_slot_zalure\", \"R\"],\r\n    [0xd6, \"fleti_fixed_camera\", \"aR\"],\r\n    [0xd7, \"fleti_locked_camera\", \"aLR\"],\r\n    [0xd8, \"default_camera_pos2\", \"\"],\r\n    [0xd9, \"set_motion_blur\", \"\"],\r\n    [0xda, \"set_screen_b&w\", \"\"],\r\n    [0xdb, \"unknownF8DB\", \"aLLLLRW\"],\r\n    [0xdc, \"NPC_action_string\", \"RRW\"],\r\n    [0xdd, \"get_pad_cond\", \"RR\"],\r\n    [0xde, \"get_button_cond\", \"RR\"],\r\n    [0xdf, \"freeze_enemies\", \"\"],\r\n    [0xe0, \"unfreeze_enemies\", \"\"],\r\n    [0xe1, \"freeze_everything\", \"\"],\r\n    [0xe2, \"unfreeze_everything\", \"\"],\r\n    [0xe3, \"restore_hp\", \"R\"],\r\n    [0xe4, \"restore_tp\", \"R\"],\r\n    [0xe5, \"close_chat_bubble\", \"R\"],\r\n    [0xe6, \"unknownF8E6\", \"RR\"],\r\n    [0xe7, \"unknownF8E7\", \"RR\"],\r\n    [0xe8, \"unknownF8E8\", \"RR\"],\r\n    [0xe9, \"unknownF8E9\", \"RR\"],\r\n    [0xea, \"unknownF8EA\", \"RR\"],\r\n    [0xeb, \"unknownF8EB\", \"RR\"],\r\n    [0xec, \"unknownF8EC\", \"RR\"],\r\n    [0xed, \"animation_check\", \"RR\"],\r\n    [0xee, \"call_image_data\", \"aLW\"],\r\n    [0xef, \"unknownF8EF\", \"\"],\r\n    [0xf0, \"turn_off_bgm_p2\", \"\"],\r\n    [0xf1, \"turn_on_bgm_p2\", \"\"],\r\n    [0xf2, \"load_unk_data\", \"aLLLLRW\"],\r\n    [0xf3, \"particle2\", \"aRLf\"],\r\n    [0xf4, \"unknown\", null],\r\n    [0xf5, \"unknown\", null],\r\n    [0xf6, \"unknown\", null],\r\n    [0xf7, \"unknown\", null],\r\n    [0xf8, \"unknown\", null],\r\n    [0xf9, \"unknown\", null],\r\n    [0xfa, \"unknown\", null],\r\n    [0xfb, \"unknown\", null],\r\n    [0xfc, \"unknown\", null],\r\n    [0xfd, \"unknown\", null],\r\n    [0xfe, \"unknown\", null],\r\n    [0xff, \"unknown\", null],\r\n];\r\n\r\nconst f9_opcode_list: [number, string, string | null][] = [\r\n    [0x00, \"unknown\", null],\r\n    [0x01, \"dec2float\", \"RR\"],\r\n    [0x02, \"float2dec\", \"RR\"],\r\n    [0x03, \"flet\", \"RR\"],\r\n    [0x04, \"fleti\", \"RF\"],\r\n    [0x05, \"unknown\", null],\r\n    [0x06, \"unknown\", null],\r\n    [0x07, \"unknown\", null],\r\n    [0x08, \"fadd\", \"RR\"],\r\n    [0x09, \"faddi\", \"RF\"],\r\n    [0x0a, \"fsub\", \"RR\"],\r\n    [0x0b, \"fsubi\", \"RF\"],\r\n    [0x0c, \"fmul\", \"RR\"],\r\n    [0x0d, \"fmuli\", \"RF\"],\r\n    [0x0e, \"fdiv\", \"RR\"],\r\n    [0x0f, \"fdivi\", \"RF\"],\r\n    [0x10, \"get_unknown_count?\", \"aLR\"],\r\n    [0x11, \"get_stackable_item_count\", \"RR\"],\r\n    [0x12, \"freeze_and_hide_equip\", \"\"],\r\n    [0x13, \"thaw_and_show_equip\", \"\"],\r\n    [0x14, \"set_paletteX_callback\", \"aRW\"],\r\n    [0x15, \"activate_paletteX\", \"aR\"],\r\n    [0x16, \"enable_paletteX\", \"aR\"],\r\n    [0x17, \"restore_paletteX\", \"aL\"],\r\n    [0x18, \"disable_paletteX\", \"aL\"],\r\n    [0x19, \"get_paletteX_activated\", \"aLR\"],\r\n    [0x1a, \"get_unknown_paletteX_status?\", \"aLR\"],\r\n    [0x1b, \"disable_movement2\", \"aR\"],\r\n    [0x1c, \"enable_movement2\", \"aR\"],\r\n    [0x1d, \"get_time_played\", \"R\"],\r\n    [0x1e, \"get_guildcard_total\", \"R\"],\r\n    [0x1f, \"get_slot_meseta\", \"R\"],\r\n    [0x20, \"get_player_level\", \"aLR\"],\r\n    [0x21, \"get_Section_ID\", \"aLR\"],\r\n    [0x22, \"get_player_hp\", \"aRR\"],\r\n    [0x23, \"get_floor_number\", \"aRR\"],\r\n    [0x24, \"get_coord_player_detect\", \"RR\"],\r\n    [0x25, \"read_global_flag\", \"abR\"],\r\n    [0x26, \"write_global_flag\", \"abR\"],\r\n    [0x27, \"unknownF927\", \"RR\"],\r\n    [0x28, \"floor_player_detect\", \"R\"],\r\n    [0x29, \"read_disk_file?\", \"as\"],\r\n    [0x2a, \"open_pack_select\", \"\"],\r\n    [0x2b, \"item_select\", \"R\"],\r\n    [0x2c, \"get_item_id\", \"R\"],\r\n    [0x2d, \"color_change\", \"aRRRRR\"],\r\n    [0x2e, \"send_statistic?\", \"aLLLLLLLL\"],\r\n    [0x2f, \"unknownF92F\", \"aLL\"],\r\n    [0x30, \"chat_box\", \"aLLLLLs\"],\r\n    [0x31, \"chat_bubble\", \"aLs\"],\r\n    [0x32, \"unknown\", null],\r\n    [0x33, \"unknownF933\", \"R\"],\r\n    [0x34, \"scroll_text\", \"aLLLLLfRs\"],\r\n    [0x35, \"gba_unknown1\", \"\"],\r\n    [0x36, \"gba_unknown2\", \"\"],\r\n    [0x37, \"gba_unknown3\", \"\"],\r\n    [0x38, \"add_damage_to?\", \"aLL\"],\r\n    [0x39, \"item_delete2\", \"aL\"],\r\n    [0x3a, \"get_item_info\", \"aLR\"],\r\n    [0x3b, \"item_packing1\", \"aL\"],\r\n    [0x3c, \"item_packing2\", \"aLL\"],\r\n    [0x3d, \"get_lang_setting?\", \"aR\"],\r\n    [0x3e, \"prepare_statistic?\", \"aLWW\"],\r\n    [0x3f, \"keyword_detect\", \"\"],\r\n    [0x40, \"Keyword\", \"aRLs\"],\r\n    [0x41, \"get_guildcard_num\", \"aLR\"],\r\n    [0x42, \"unknown\", null],\r\n    [0x43, \"unknown\", null],\r\n    [0x44, \"get_wrap_status\", \"aLR\"],\r\n    [0x45, \"initial_floor\", \"aL\"],\r\n    [0x46, \"sin\", \"aRL\"],\r\n    [0x47, \"cos\", \"aRL\"],\r\n    [0x48, \"unknown\", null],\r\n    [0x49, \"unknown\", null],\r\n    [0x4a, \"boss_is_dead2?\", \"R\"],\r\n    [0x4b, \"unknownF94B\", \"R\"],\r\n    [0x4c, \"unknownF94C\", \"R\"],\r\n    [0x4d, \"is_there_cardbattle\", \"R\"],\r\n    [0x4e, \"unknown\", null],\r\n    [0x4f, \"unknown\", null],\r\n    [0x50, \"BB_p2_menu\", \"aL\"],\r\n    [0x51, \"BB_Map_Designate\", \"BWBB\"],\r\n    [0x52, \"BB_get_number_in_pack\", \"R\"],\r\n    [0x53, \"BB_swap_item\", \"aLLLLLLWW\"],\r\n    [0x54, \"BB_check_wrap\", \"aRR\"],\r\n    [0x55, \"BB_exchange_PD_item\", \"aRRRWW\"],\r\n    [0x56, \"BB_exchange_PD_srank\", \"aRRRRRWW\"],\r\n    [0x57, \"BB_exchange_PD_special\", \"aRRRRRLWW\"],\r\n    [0x58, \"BB_exchange_PD_percent\", \"aRRRRRLWW\"],\r\n    [0x59, \"unknownF959\", \"aL\"],\r\n    [0x5a, \"unknown\", null],\r\n    [0x5b, \"unknown\", null],\r\n    [0x5c, \"BB_exchange_SLT\", \"aLRWW\"],\r\n    [0x5d, \"BB_exchange_PC\", \"\"],\r\n    [0x5e, \"BB_box_create_BP\", \"aLff\"],\r\n    [0x5f, \"BB_exchange_PT\", \"aRRLWW\"],\r\n    [0x60, \"unknownF960\", \"aL\"],\r\n    [0x61, \"unknownF961\", \"\"],\r\n    [0x62, \"unknown\", null],\r\n    [0x63, \"unknown\", null],\r\n    [0x64, \"unknown\", null],\r\n    [0x65, \"unknown\", null],\r\n    [0x66, \"unknown\", null],\r\n    [0x67, \"unknown\", null],\r\n    [0x68, \"unknown\", null],\r\n    [0x69, \"unknown\", null],\r\n    [0x6a, \"unknown\", null],\r\n    [0x6b, \"unknown\", null],\r\n    [0x6c, \"unknown\", null],\r\n    [0x6d, \"unknown\", null],\r\n    [0x6e, \"unknown\", null],\r\n    [0x6f, \"unknown\", null],\r\n    [0x70, \"unknown\", null],\r\n    [0x71, \"unknown\", null],\r\n    [0x72, \"unknown\", null],\r\n    [0x73, \"unknown\", null],\r\n    [0x74, \"unknown\", null],\r\n    [0x75, \"unknown\", null],\r\n    [0x76, \"unknown\", null],\r\n    [0x77, \"unknown\", null],\r\n    [0x78, \"unknown\", null],\r\n    [0x79, \"unknown\", null],\r\n    [0x7a, \"unknown\", null],\r\n    [0x7b, \"unknown\", null],\r\n    [0x7c, \"unknown\", null],\r\n    [0x7d, \"unknown\", null],\r\n    [0x7e, \"unknown\", null],\r\n    [0x7f, \"unknown\", null],\r\n    [0x80, \"unknown\", null],\r\n    [0x81, \"unknown\", null],\r\n    [0x82, \"unknown\", null],\r\n    [0x83, \"unknown\", null],\r\n    [0x84, \"unknown\", null],\r\n    [0x85, \"unknown\", null],\r\n    [0x86, \"unknown\", null],\r\n    [0x87, \"unknown\", null],\r\n    [0x88, \"unknown\", null],\r\n    [0x89, \"unknown\", null],\r\n    [0x8a, \"unknown\", null],\r\n    [0x8b, \"unknown\", null],\r\n    [0x8c, \"unknown\", null],\r\n    [0x8d, \"unknown\", null],\r\n    [0x8e, \"unknown\", null],\r\n    [0x8f, \"unknown\", null],\r\n    [0x90, \"unknown\", null],\r\n    [0x91, \"unknown\", null],\r\n    [0x92, \"unknown\", null],\r\n    [0x93, \"unknown\", null],\r\n    [0x94, \"unknown\", null],\r\n    [0x95, \"unknown\", null],\r\n    [0x96, \"unknown\", null],\r\n    [0x97, \"unknown\", null],\r\n    [0x98, \"unknown\", null],\r\n    [0x99, \"unknown\", null],\r\n    [0x9a, \"unknown\", null],\r\n    [0x9b, \"unknown\", null],\r\n    [0x9c, \"unknown\", null],\r\n    [0x9d, \"unknown\", null],\r\n    [0x9e, \"unknown\", null],\r\n    [0x9f, \"unknown\", null],\r\n    [0xa0, \"unknown\", null],\r\n    [0xa1, \"unknown\", null],\r\n    [0xa2, \"unknown\", null],\r\n    [0xa3, \"unknown\", null],\r\n    [0xa4, \"unknown\", null],\r\n    [0xa5, \"unknown\", null],\r\n    [0xa6, \"unknown\", null],\r\n    [0xa7, \"unknown\", null],\r\n    [0xa8, \"unknown\", null],\r\n    [0xa9, \"unknown\", null],\r\n    [0xaa, \"unknown\", null],\r\n    [0xab, \"unknown\", null],\r\n    [0xac, \"unknown\", null],\r\n    [0xad, \"unknown\", null],\r\n    [0xae, \"unknown\", null],\r\n    [0xaf, \"unknown\", null],\r\n    [0xb0, \"unknown\", null],\r\n    [0xb1, \"unknown\", null],\r\n    [0xb2, \"unknown\", null],\r\n    [0xb3, \"unknown\", null],\r\n    [0xb4, \"unknown\", null],\r\n    [0xb5, \"unknown\", null],\r\n    [0xb6, \"unknown\", null],\r\n    [0xb7, \"unknown\", null],\r\n    [0xb8, \"unknown\", null],\r\n    [0xb9, \"unknown\", null],\r\n    [0xba, \"unknown\", null],\r\n    [0xbb, \"unknown\", null],\r\n    [0xbc, \"unknown\", null],\r\n    [0xbd, \"unknown\", null],\r\n    [0xbe, \"unknown\", null],\r\n    [0xbf, \"unknown\", null],\r\n    [0xc0, \"unknown\", null],\r\n    [0xc1, \"unknown\", null],\r\n    [0xc2, \"unknown\", null],\r\n    [0xc3, \"unknown\", null],\r\n    [0xc4, \"unknown\", null],\r\n    [0xc5, \"unknown\", null],\r\n    [0xc6, \"unknown\", null],\r\n    [0xc7, \"unknown\", null],\r\n    [0xc8, \"unknown\", null],\r\n    [0xc9, \"unknown\", null],\r\n    [0xca, \"unknown\", null],\r\n    [0xcb, \"unknown\", null],\r\n    [0xcc, \"unknown\", null],\r\n    [0xcd, \"unknown\", null],\r\n    [0xce, \"unknown\", null],\r\n    [0xcf, \"unknown\", null],\r\n    [0xd0, \"unknown\", null],\r\n    [0xd1, \"unknown\", null],\r\n    [0xd2, \"unknown\", null],\r\n    [0xd3, \"unknown\", null],\r\n    [0xd4, \"unknown\", null],\r\n    [0xd5, \"unknown\", null],\r\n    [0xd6, \"unknown\", null],\r\n    [0xd7, \"unknown\", null],\r\n    [0xd8, \"unknown\", null],\r\n    [0xd9, \"unknown\", null],\r\n    [0xda, \"unknown\", null],\r\n    [0xdb, \"unknown\", null],\r\n    [0xdc, \"unknown\", null],\r\n    [0xdd, \"unknown\", null],\r\n    [0xde, \"unknown\", null],\r\n    [0xdf, \"unknown\", null],\r\n    [0xe0, \"unknown\", null],\r\n    [0xe1, \"unknown\", null],\r\n    [0xe2, \"unknown\", null],\r\n    [0xe3, \"unknown\", null],\r\n    [0xe4, \"unknown\", null],\r\n    [0xe5, \"unknown\", null],\r\n    [0xe6, \"unknown\", null],\r\n    [0xe7, \"unknown\", null],\r\n    [0xe8, \"unknown\", null],\r\n    [0xe9, \"unknown\", null],\r\n    [0xea, \"unknown\", null],\r\n    [0xeb, \"unknown\", null],\r\n    [0xec, \"unknown\", null],\r\n    [0xed, \"unknown\", null],\r\n    [0xee, \"unknown\", null],\r\n    [0xef, \"unknown\", null],\r\n    [0xf0, \"unknown\", null],\r\n    [0xf1, \"unknown\", null],\r\n    [0xf2, \"unknown\", null],\r\n    [0xf3, \"unknown\", null],\r\n    [0xf4, \"unknown\", null],\r\n    [0xf5, \"unknown\", null],\r\n    [0xf6, \"unknown\", null],\r\n    [0xf7, \"unknown\", null],\r\n    [0xf8, \"unknown\", null],\r\n    [0xf9, \"unknown\", null],\r\n    [0xfa, \"unknown\", null],\r\n    [0xfb, \"unknown\", null],\r\n    [0xfc, \"unknown\", null],\r\n    [0xfd, \"unknown\", null],\r\n    [0xfe, \"unknown\", null],\r\n    [0xff, \"unknown\", null],\r\n];\r\n","import Logger from \"js-logger\";\r\nimport { groupBy } from \"lodash\";\r\nimport { Endianness } from \"../..\";\r\nimport { Cursor } from \"../../cursor/Cursor\";\r\nimport { WritableResizableBufferCursor } from \"../../cursor/WritableResizableBufferCursor\";\r\nimport { ResizableBuffer } from \"../../ResizableBuffer\";\r\nimport { Vec3 } from \"../../vector\";\r\n\r\nconst logger = Logger.get(\"data_formats/parsing/quest/dat\");\r\n\r\nconst OBJECT_SIZE = 68;\r\nconst NPC_SIZE = 72;\r\n\r\nexport type DatFile = {\r\n    objs: DatObject[];\r\n    npcs: DatNpc[];\r\n    unknowns: DatUnknown[];\r\n};\r\n\r\nexport type DatEntity = {\r\n    type_id: number;\r\n    section_id: number;\r\n    position: Vec3;\r\n    rotation: Vec3;\r\n    area_id: number;\r\n    unknown: number[][];\r\n};\r\n\r\nexport type DatObject = DatEntity;\r\n\r\nexport type DatNpc = DatEntity & {\r\n    flags: number;\r\n    skin: number;\r\n};\r\n\r\nexport type DatUnknown = {\r\n    entity_type: number;\r\n    total_size: number;\r\n    area_id: number;\r\n    entities_size: number;\r\n    data: number[];\r\n};\r\n\r\nexport function parse_dat(cursor: Cursor): DatFile {\r\n    const objs: DatObject[] = [];\r\n    const npcs: DatNpc[] = [];\r\n    const unknowns: DatUnknown[] = [];\r\n\r\n    while (cursor.bytes_left) {\r\n        const entity_type = cursor.u32();\r\n        const total_size = cursor.u32();\r\n        const area_id = cursor.u32();\r\n        const entities_size = cursor.u32();\r\n\r\n        if (entity_type === 0) {\r\n            break;\r\n        } else {\r\n            if (entities_size !== total_size - 16) {\r\n                throw Error(\r\n                    `Malformed DAT file. Expected an entities size of ${total_size -\r\n                        16}, got ${entities_size}.`\r\n                );\r\n            }\r\n\r\n            if (entity_type === 1) {\r\n                // Objects\r\n                const object_count = Math.floor(entities_size / OBJECT_SIZE);\r\n                const start_position = cursor.position;\r\n\r\n                for (let i = 0; i < object_count; ++i) {\r\n                    const type_id = cursor.u16();\r\n                    const unknown1 = cursor.u8_array(10);\r\n                    const section_id = cursor.u16();\r\n                    const unknown2 = cursor.u8_array(2);\r\n                    const x = cursor.f32();\r\n                    const y = cursor.f32();\r\n                    const z = cursor.f32();\r\n                    const rotation_x = (cursor.i32() / 0xffff) * 2 * Math.PI;\r\n                    const rotation_y = (cursor.i32() / 0xffff) * 2 * Math.PI;\r\n                    const rotation_z = (cursor.i32() / 0xffff) * 2 * Math.PI;\r\n                    // The next 3 floats seem to be scale values.\r\n                    const unknown3 = cursor.u8_array(28);\r\n\r\n                    objs.push({\r\n                        type_id,\r\n                        section_id,\r\n                        position: new Vec3(x, y, z),\r\n                        rotation: new Vec3(rotation_x, rotation_y, rotation_z),\r\n                        area_id,\r\n                        unknown: [unknown1, unknown2, unknown3],\r\n                    });\r\n                }\r\n\r\n                const bytes_read = cursor.position - start_position;\r\n\r\n                if (bytes_read !== entities_size) {\r\n                    logger.warn(\r\n                        `Read ${bytes_read} bytes instead of expected ${entities_size} for entity type ${entity_type} (Object).`\r\n                    );\r\n                    cursor.seek(entities_size - bytes_read);\r\n                }\r\n            } else if (entity_type === 2) {\r\n                // NPCs\r\n                const npc_count = Math.floor(entities_size / NPC_SIZE);\r\n                const start_position = cursor.position;\r\n\r\n                for (let i = 0; i < npc_count; ++i) {\r\n                    const type_id = cursor.u16();\r\n                    const unknown1 = cursor.u8_array(10);\r\n                    const section_id = cursor.u16();\r\n                    const unknown2 = cursor.u8_array(6);\r\n                    const x = cursor.f32();\r\n                    const y = cursor.f32();\r\n                    const z = cursor.f32();\r\n                    const rotation_x = (cursor.i32() / 0xffff) * 2 * Math.PI;\r\n                    const rotation_y = (cursor.i32() / 0xffff) * 2 * Math.PI;\r\n                    const rotation_z = (cursor.i32() / 0xffff) * 2 * Math.PI;\r\n                    const unknown3 = cursor.u8_array(4);\r\n                    const flags = cursor.f32();\r\n                    const unknown4 = cursor.u8_array(12);\r\n                    const skin = cursor.u32();\r\n                    const unknown5 = cursor.u8_array(4);\r\n\r\n                    npcs.push({\r\n                        type_id,\r\n                        section_id,\r\n                        position: new Vec3(x, y, z),\r\n                        rotation: new Vec3(rotation_x, rotation_y, rotation_z),\r\n                        skin,\r\n                        area_id,\r\n                        flags,\r\n                        unknown: [unknown1, unknown2, unknown3, unknown4, unknown5],\r\n                    });\r\n                }\r\n\r\n                const bytes_read = cursor.position - start_position;\r\n\r\n                if (bytes_read !== entities_size) {\r\n                    logger.warn(\r\n                        `Read ${bytes_read} bytes instead of expected ${entities_size} for entity type ${entity_type} (NPC).`\r\n                    );\r\n                    cursor.seek(entities_size - bytes_read);\r\n                }\r\n            } else {\r\n                // There are also waves (type 3) and unknown entity types 4 and 5.\r\n                unknowns.push({\r\n                    entity_type,\r\n                    total_size,\r\n                    area_id,\r\n                    entities_size,\r\n                    data: cursor.u8_array(entities_size),\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return { objs, npcs, unknowns };\r\n}\r\n\r\nexport function write_dat({ objs, npcs, unknowns }: DatFile): ResizableBuffer {\r\n    const buffer = new ResizableBuffer(\r\n        objs.length * (16 + OBJECT_SIZE) +\r\n            npcs.length * (16 + NPC_SIZE) +\r\n            unknowns.reduce((a, b) => a + b.total_size, 0)\r\n    );\r\n    const cursor = new WritableResizableBufferCursor(buffer, Endianness.Little);\r\n\r\n    const grouped_objs = groupBy(objs, obj => obj.area_id);\r\n    const obj_area_ids = Object.keys(grouped_objs)\r\n        .map(key => parseInt(key, 10))\r\n        .sort((a, b) => a - b);\r\n\r\n    for (const area_id of obj_area_ids) {\r\n        const area_objs = grouped_objs[area_id];\r\n        const entities_size = area_objs.length * OBJECT_SIZE;\r\n        cursor.write_u32(1); // Entity type\r\n        cursor.write_u32(entities_size + 16);\r\n        cursor.write_u32(area_id);\r\n        cursor.write_u32(entities_size);\r\n\r\n        for (const obj of area_objs) {\r\n            cursor.write_u16(obj.type_id);\r\n            cursor.write_u8_array(obj.unknown[0]);\r\n            cursor.write_u16(obj.section_id);\r\n            cursor.write_u8_array(obj.unknown[1]);\r\n            cursor.write_f32(obj.position.x);\r\n            cursor.write_f32(obj.position.y);\r\n            cursor.write_f32(obj.position.z);\r\n            cursor.write_i32(Math.round((obj.rotation.x / (2 * Math.PI)) * 0xffff));\r\n            cursor.write_i32(Math.round((obj.rotation.y / (2 * Math.PI)) * 0xffff));\r\n            cursor.write_i32(Math.round((obj.rotation.z / (2 * Math.PI)) * 0xffff));\r\n            cursor.write_u8_array(obj.unknown[2]);\r\n        }\r\n    }\r\n\r\n    const grouped_npcs = groupBy(npcs, npc => npc.area_id);\r\n    const npc_area_ids = Object.keys(grouped_npcs)\r\n        .map(key => parseInt(key, 10))\r\n        .sort((a, b) => a - b);\r\n\r\n    for (const area_id of npc_area_ids) {\r\n        const area_npcs = grouped_npcs[area_id];\r\n        const entities_size = area_npcs.length * NPC_SIZE;\r\n        cursor.write_u32(2); // Entity type\r\n        cursor.write_u32(entities_size + 16);\r\n        cursor.write_u32(area_id);\r\n        cursor.write_u32(entities_size);\r\n\r\n        for (const npc of area_npcs) {\r\n            cursor.write_u16(npc.type_id);\r\n            cursor.write_u8_array(npc.unknown[0]);\r\n            cursor.write_u16(npc.section_id);\r\n            cursor.write_u8_array(npc.unknown[1]);\r\n            cursor.write_f32(npc.position.x);\r\n            cursor.write_f32(npc.position.y);\r\n            cursor.write_f32(npc.position.z);\r\n            cursor.write_i32(Math.round((npc.rotation.x / (2 * Math.PI)) * 0xffff));\r\n            cursor.write_i32(Math.round((npc.rotation.y / (2 * Math.PI)) * 0xffff));\r\n            cursor.write_i32(Math.round((npc.rotation.z / (2 * Math.PI)) * 0xffff));\r\n            cursor.write_u8_array(npc.unknown[2]);\r\n            cursor.write_f32(npc.flags);\r\n            cursor.write_u8_array(npc.unknown[3]);\r\n            cursor.write_u32(npc.skin);\r\n            cursor.write_u8_array(npc.unknown[4]);\r\n        }\r\n    }\r\n\r\n    for (const unknown of unknowns) {\r\n        cursor.write_u32(unknown.entity_type);\r\n        cursor.write_u32(unknown.total_size);\r\n        cursor.write_u32(unknown.area_id);\r\n        cursor.write_u32(unknown.entities_size);\r\n        cursor.write_u8_array(unknown.data);\r\n    }\r\n\r\n    // Final header.\r\n    cursor.write_u32(0);\r\n    cursor.write_u32(0);\r\n    cursor.write_u32(0);\r\n    cursor.write_u32(0);\r\n\r\n    return buffer;\r\n}\r\n","import { ArrayBufferCursor } from \"./ArrayBufferCursor\";\r\nimport { WritableCursor } from \"./WritableCursor\";\r\nimport { ASCII_ENCODER } from \".\";\r\nimport { Cursor } from \"./Cursor\";\r\n\r\n/**\r\n * A cursor for reading and writing from an array buffer or part of an array buffer.\r\n */\r\nexport class WritableArrayBufferCursor extends ArrayBufferCursor implements WritableCursor {\r\n    write_u8(value: number): this {\r\n        this.dv.setUint8(this._position++, value);\r\n        return this;\r\n    }\r\n\r\n    write_u16(value: number): this {\r\n        this.dv.setUint16(this.position, value, this.little_endian);\r\n        this._position += 2;\r\n        return this;\r\n    }\r\n\r\n    write_u32(value: number): this {\r\n        this.dv.setUint32(this.position, value, this.little_endian);\r\n        this._position += 4;\r\n        return this;\r\n    }\r\n\r\n    write_i32(value: number): this {\r\n        this.dv.setInt32(this.position, value, this.little_endian);\r\n        this._position += 4;\r\n        return this;\r\n    }\r\n\r\n    write_f32(value: number): this {\r\n        this.dv.setFloat32(this.position, value, this.little_endian);\r\n        this._position += 4;\r\n        return this;\r\n    }\r\n\r\n    write_u8_array(array: number[]): this {\r\n        new Uint8Array(this.buffer, this.offset + this.position).set(new Uint8Array(array));\r\n        this._position += array.length;\r\n        return this;\r\n    }\r\n\r\n    write_cursor(other: Cursor): this {\r\n        const size = other.size - other.position;\r\n        other.copy_to_uint8_array(\r\n            new Uint8Array(this.buffer, this.offset + this.position, size),\r\n            size\r\n        );\r\n        this._position += size;\r\n        return this;\r\n    }\r\n\r\n    write_string_ascii(str: string, byte_length: number): this {\r\n        let i = 0;\r\n\r\n        for (const byte of ASCII_ENCODER.encode(str)) {\r\n            if (i < byte_length) {\r\n                this.write_u8(byte);\r\n                ++i;\r\n            }\r\n        }\r\n\r\n        while (i < byte_length) {\r\n            this.write_u8(0);\r\n            ++i;\r\n        }\r\n\r\n        return this;\r\n    }\r\n}\r\n","import Logger from \"js-logger\";\r\nimport { Cursor } from \"../../cursor/Cursor\";\r\nimport { WritableArrayBufferCursor } from \"../../cursor/WritableArrayBufferCursor\";\r\nimport { Endianness } from \"../..\";\r\nimport { WritableCursor } from \"../../cursor/WritableCursor\";\r\nimport { WritableResizableBufferCursor } from \"../../cursor/WritableResizableBufferCursor\";\r\nimport { ResizableBuffer } from \"../../ResizableBuffer\";\r\nimport { ArrayBufferCursor } from \"../../cursor/ArrayBufferCursor\";\r\n\r\nconst logger = Logger.get(\"data_formats/parsing/quest/qst\");\r\n\r\nexport type QstContainedFile = {\r\n    id?: number;\r\n    name: string;\r\n    name_2?: string; // Unsure what this is\r\n    data: ArrayBuffer;\r\n};\r\n\r\nexport type ParseQstResult = {\r\n    version: string;\r\n    files: QstContainedFile[];\r\n};\r\n\r\n/**\r\n * Low level parsing function for .qst files.\r\n * Can only read the Blue Burst format.\r\n */\r\nexport function parse_qst(cursor: Cursor): ParseQstResult | undefined {\r\n    // A .qst file contains two 88-byte headers that describe the embedded .dat and .bin files.\r\n    let version = \"PC\";\r\n\r\n    // Detect version.\r\n    const version_a = cursor.u8();\r\n    cursor.seek(1);\r\n    const version_b = cursor.u8();\r\n\r\n    if (version_a === 0x44) {\r\n        version = \"Dreamcast/GameCube\";\r\n    } else if (version_a === 0x58) {\r\n        if (version_b === 0x44) {\r\n            version = \"Blue Burst\";\r\n        }\r\n    } else if (version_a === 0xa6) {\r\n        version = \"Dreamcast download\";\r\n    }\r\n\r\n    if (version === \"Blue Burst\") {\r\n        // Read headers and contained files.\r\n        cursor.seek_start(0);\r\n\r\n        const headers = parse_headers(cursor);\r\n\r\n        const files = parse_files(cursor, new Map(headers.map(h => [h.file_name, h.size])));\r\n\r\n        for (const file of files) {\r\n            const header = headers.find(h => h.file_name === file.name);\r\n\r\n            if (header) {\r\n                file.id = header.quest_id;\r\n                file.name_2 = header.file_name_2;\r\n            }\r\n        }\r\n\r\n        return {\r\n            version,\r\n            files,\r\n        };\r\n    } else {\r\n        logger.error(`Can't parse ${version} QST files.`);\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport type QstContainedFileParam = {\r\n    id?: number;\r\n    name: string;\r\n    name_2?: string;\r\n    data: ArrayBuffer;\r\n};\r\n\r\nexport type WriteQstParams = {\r\n    version?: string;\r\n    files: QstContainedFileParam[];\r\n};\r\n\r\n/**\r\n * Always uses Blue Burst format.\r\n */\r\nexport function write_qst(params: WriteQstParams): ArrayBuffer {\r\n    const files = params.files;\r\n    const total_size = files\r\n        .map(f => 88 + Math.ceil(f.data.byteLength / 1024) * 1056)\r\n        .reduce((a, b) => a + b);\r\n    const buffer = new ArrayBuffer(total_size);\r\n    const cursor = new WritableArrayBufferCursor(buffer, Endianness.Little);\r\n\r\n    write_file_headers(cursor, files);\r\n    write_file_chunks(cursor, files);\r\n\r\n    if (cursor.size !== total_size) {\r\n        throw new Error(`Expected a final file size of ${total_size}, but got ${cursor.size}.`);\r\n    }\r\n\r\n    return buffer;\r\n}\r\n\r\ntype QstHeader = {\r\n    quest_id: number;\r\n    file_name: string;\r\n    file_name_2: string;\r\n    size: number;\r\n};\r\n\r\n/**\r\n * TODO: Read all headers instead of just the first 2.\r\n */\r\nfunction parse_headers(cursor: Cursor): QstHeader[] {\r\n    const headers: QstHeader[] = [];\r\n\r\n    for (let i = 0; i < 2; ++i) {\r\n        cursor.seek(4);\r\n        const quest_id = cursor.u16();\r\n        cursor.seek(38);\r\n        const file_name = cursor.string_ascii(16, true, true);\r\n        const size = cursor.u32();\r\n        // Not sure what this is:\r\n        const file_name_2 = cursor.string_ascii(24, true, true);\r\n\r\n        headers.push({\r\n            quest_id,\r\n            file_name,\r\n            file_name_2,\r\n            size,\r\n        });\r\n    }\r\n\r\n    return headers;\r\n}\r\n\r\nfunction parse_files(cursor: Cursor, expected_sizes: Map<string, number>): QstContainedFile[] {\r\n    // Files are interleaved in 1056 byte chunks.\r\n    // Each chunk has a 24 byte header, 1024 byte data segment and an 8 byte trailer.\r\n    const files = new Map<\r\n        string,\r\n        {\r\n            name: string;\r\n            expected_size?: number;\r\n            cursor: WritableCursor;\r\n            chunk_nos: Set<number>;\r\n        }\r\n    >();\r\n\r\n    while (cursor.bytes_left >= 1056) {\r\n        const start_position = cursor.position;\r\n\r\n        // Read meta data.\r\n        const chunk_no = cursor.seek(4).u8();\r\n        const file_name = cursor.seek(3).string_ascii(16, true, true);\r\n\r\n        let file = files.get(file_name);\r\n\r\n        if (!file) {\r\n            const expected_size = expected_sizes.get(file_name);\r\n            files.set(\r\n                file_name,\r\n                (file = {\r\n                    name: file_name,\r\n                    expected_size,\r\n                    cursor: new WritableResizableBufferCursor(\r\n                        new ResizableBuffer(expected_size || 10 * 1024),\r\n                        Endianness.Little\r\n                    ),\r\n                    chunk_nos: new Set(),\r\n                })\r\n            );\r\n        }\r\n\r\n        if (file.chunk_nos.has(chunk_no)) {\r\n            logger.warn(\r\n                `File chunk number ${chunk_no} of file ${file_name} was already encountered, overwriting previous chunk.`\r\n            );\r\n        } else {\r\n            file.chunk_nos.add(chunk_no);\r\n        }\r\n\r\n        // Read file data.\r\n        let size = cursor.seek(1024).u32();\r\n        cursor.seek(-1028);\r\n\r\n        if (size > 1024) {\r\n            logger.warn(\r\n                `Data segment size of ${size} is larger than expected maximum size, reading just 1024 bytes.`\r\n            );\r\n            size = 1024;\r\n        }\r\n\r\n        const data = cursor.take(size);\r\n        const chunk_position = chunk_no * 1024;\r\n        file.cursor.size = Math.max(chunk_position + size, file.cursor.size);\r\n        file.cursor.seek_start(chunk_position).write_cursor(data);\r\n\r\n        // Skip the padding and the trailer.\r\n        cursor.seek(1032 - data.size);\r\n\r\n        if (cursor.position !== start_position + 1056) {\r\n            throw new Error(\r\n                `Read ${cursor.position -\r\n                    start_position} file chunk message bytes instead of expected 1056.`\r\n            );\r\n        }\r\n    }\r\n\r\n    if (cursor.bytes_left) {\r\n        logger.warn(`${cursor.bytes_left} Bytes left in file.`);\r\n    }\r\n\r\n    for (const file of files.values()) {\r\n        // Clean up file properties.\r\n        file.cursor.seek_start(0);\r\n        file.chunk_nos = new Set(Array.from(file.chunk_nos.values()).sort((a, b) => a - b));\r\n\r\n        // Check whether the expected size was correct.\r\n        if (file.expected_size != null && file.cursor.size !== file.expected_size) {\r\n            logger.warn(\r\n                `File ${file.name} has an actual size of ${file.cursor.size} instead of the expected size ${file.expected_size}.`\r\n            );\r\n        }\r\n\r\n        // Detect missing file chunks.\r\n        const actual_size = Math.max(file.cursor.size, file.expected_size || 0);\r\n\r\n        for (let chunk_no = 0; chunk_no < Math.ceil(actual_size / 1024); ++chunk_no) {\r\n            if (!file.chunk_nos.has(chunk_no)) {\r\n                logger.warn(`File ${file.name} is missing chunk ${chunk_no}.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    const contained_files: QstContainedFile[] = [];\r\n\r\n    for (const file of files.values()) {\r\n        contained_files.push({\r\n            name: file.name,\r\n            data: file.cursor.seek_start(0).array_buffer(),\r\n        });\r\n    }\r\n\r\n    return contained_files;\r\n}\r\n\r\nfunction write_file_headers(cursor: WritableCursor, files: QstContainedFileParam[]): void {\r\n    for (const file of files) {\r\n        if (file.name.length > 16) {\r\n            throw Error(`File ${file.name} has a name longer than 16 characters.`);\r\n        }\r\n\r\n        cursor.write_u16(88); // Header size.\r\n        cursor.write_u16(0x44); // Magic number.\r\n        cursor.write_u16(file.id || 0);\r\n\r\n        for (let i = 0; i < 38; ++i) {\r\n            cursor.write_u8(0);\r\n        }\r\n\r\n        cursor.write_string_ascii(file.name, 16);\r\n        cursor.write_u32(file.data.byteLength);\r\n\r\n        let file_name_2: string;\r\n\r\n        if (file.name_2 == null) {\r\n            // Not sure this makes sense.\r\n            const dot_pos = file.name.lastIndexOf(\".\");\r\n            file_name_2 =\r\n                dot_pos === -1\r\n                    ? file.name + \"_j\"\r\n                    : file.name.slice(0, dot_pos) + \"_j\" + file.name.slice(dot_pos);\r\n        } else {\r\n            file_name_2 = file.name_2;\r\n        }\r\n\r\n        if (file_name_2.length > 24) {\r\n            throw Error(\r\n                `File ${file.name} has a file_name_2 length (${file_name_2}) longer than 24 characters.`\r\n            );\r\n        }\r\n\r\n        cursor.write_string_ascii(file_name_2, 24);\r\n    }\r\n}\r\n\r\nfunction write_file_chunks(cursor: WritableCursor, files: QstContainedFileParam[]): void {\r\n    // Files are interleaved in 1056 byte chunks.\r\n    // Each chunk has a 24 byte header, 1024 byte data segment and an 8 byte trailer.\r\n    const chunks = files.map(file => ({\r\n        no: 0,\r\n        data: new ArrayBufferCursor(file.data, Endianness.Little),\r\n        name: file.name,\r\n    }));\r\n\r\n    while (chunks.length) {\r\n        let i = 0;\r\n\r\n        while (i < chunks.length) {\r\n            if (!write_file_chunk(cursor, chunks[i].data, chunks[i].no++, chunks[i].name)) {\r\n                // Remove if there are no more chunks to write.\r\n                chunks.splice(i, 1);\r\n            } else {\r\n                ++i;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @returns true if there are bytes left to write in data, false otherwise.\r\n */\r\nfunction write_file_chunk(\r\n    cursor: WritableCursor,\r\n    data: Cursor,\r\n    chunk_no: number,\r\n    name: string\r\n): boolean {\r\n    cursor.write_u8_array([28, 4, 19, 0]);\r\n    cursor.write_u8(chunk_no);\r\n    cursor.write_u8_array([0, 0, 0]);\r\n    cursor.write_string_ascii(name, 16);\r\n\r\n    const size = Math.min(1024, data.bytes_left);\r\n    cursor.write_cursor(data.take(size));\r\n\r\n    // Padding.\r\n    for (let i = size; i < 1024; ++i) {\r\n        cursor.write_u8(0);\r\n    }\r\n\r\n    cursor.write_u32(size);\r\n    cursor.write_u32(0);\r\n\r\n    return data.bytes_left > 0;\r\n}\r\n","import Logger from \"js-logger\";\r\nimport { Endianness } from \"../..\";\r\nimport { AreaVariant, NpcType, ObjectType, Quest, QuestNpc, QuestObject } from \"../../../domain\";\r\nimport { area_store } from \"../../../stores/AreaStore\";\r\nimport * as prs from \"../../compression/prs\";\r\nimport { ArrayBufferCursor } from \"../../cursor/ArrayBufferCursor\";\r\nimport { Cursor } from \"../../cursor/Cursor\";\r\nimport { ResizableBufferCursor } from \"../../cursor/ResizableBufferCursor\";\r\nimport { Vec3 } from \"../../vector\";\r\nimport { Instruction, parse_bin, write_bin } from \"./bin\";\r\nimport { DatFile, DatNpc, DatObject, parse_dat, write_dat } from \"./dat\";\r\nimport { parse_qst, QstContainedFile, write_qst } from \"./qst\";\r\n\r\nconst logger = Logger.get(\"data_formats/parsing/quest\");\r\n\r\n/**\r\n * High level parsing function that delegates to lower level parsing functions.\r\n *\r\n * Always delegates to parseQst at the moment.\r\n */\r\nexport function parse_quest(cursor: Cursor, lenient: boolean = false): Quest | undefined {\r\n    const qst = parse_qst(cursor);\r\n\r\n    if (!qst) {\r\n        return;\r\n    }\r\n\r\n    let dat_file: QstContainedFile | undefined;\r\n    let bin_file: QstContainedFile | undefined;\r\n\r\n    for (const file of qst.files) {\r\n        const file_name = file.name.trim().toLowerCase();\r\n\r\n        if (file_name.endsWith(\".dat\")) {\r\n            dat_file = file;\r\n        } else if (file_name.endsWith(\".bin\")) {\r\n            bin_file = file;\r\n        }\r\n    }\r\n\r\n    // TODO: deal with missing/multiple DAT or BIN file.\r\n\r\n    if (!dat_file) {\r\n        logger.error(\"File contains no DAT file.\");\r\n        return;\r\n    }\r\n\r\n    if (!bin_file) {\r\n        logger.error(\"File contains no BIN file.\");\r\n        return;\r\n    }\r\n\r\n    const dat = parse_dat(prs.decompress(new ArrayBufferCursor(dat_file.data, Endianness.Little)));\r\n    const bin = parse_bin(\r\n        prs.decompress(new ArrayBufferCursor(bin_file.data, Endianness.Little)),\r\n        lenient\r\n    );\r\n    let episode = 1;\r\n    let area_variants: AreaVariant[] = [];\r\n\r\n    if (bin.function_offsets.length) {\r\n        const func_0_ops = get_func_operations(bin.instructions, bin.function_offsets[0]);\r\n\r\n        if (func_0_ops) {\r\n            episode = get_episode(func_0_ops);\r\n            area_variants = get_area_variants(dat, episode, func_0_ops, lenient);\r\n        } else {\r\n            logger.warn(`Function 0 offset ${bin.function_offsets[0]} is invalid.`);\r\n        }\r\n    } else {\r\n        logger.warn(\"File contains no functions.\");\r\n    }\r\n\r\n    return new Quest(\r\n        dat_file.id,\r\n        bin.quest_name,\r\n        bin.short_description,\r\n        bin.long_description,\r\n        episode,\r\n        area_variants,\r\n        parse_obj_data(dat.objs),\r\n        parse_npc_data(episode, dat.npcs),\r\n        dat.unknowns,\r\n        bin.data\r\n    );\r\n}\r\n\r\nexport function write_quest_qst(quest: Quest, file_name: string): ArrayBuffer {\r\n    const dat = write_dat({\r\n        objs: objects_to_dat_data(quest.objects),\r\n        npcs: npcsToDatData(quest.npcs),\r\n        unknowns: quest.dat_unknowns,\r\n    });\r\n    const bin = write_bin({ data: quest.bin_data });\r\n    const ext_start = file_name.lastIndexOf(\".\");\r\n    const base_file_name = ext_start === -1 ? file_name : file_name.slice(0, ext_start);\r\n\r\n    return write_qst({\r\n        files: [\r\n            {\r\n                name: base_file_name + \".dat\",\r\n                id: quest.id,\r\n                data: prs\r\n                    .compress(new ResizableBufferCursor(dat, Endianness.Little))\r\n                    .array_buffer(),\r\n            },\r\n            {\r\n                name: base_file_name + \".bin\",\r\n                id: quest.id,\r\n                data: prs.compress(new ArrayBufferCursor(bin, Endianness.Little)).array_buffer(),\r\n            },\r\n        ],\r\n    });\r\n}\r\n\r\n/**\r\n * Defaults to episode I.\r\n */\r\nfunction get_episode(func_0_ops: Instruction[]): number {\r\n    const set_episode = func_0_ops.find(op => op.mnemonic === \"set_episode\");\r\n\r\n    if (set_episode) {\r\n        switch (set_episode.args[0]) {\r\n            default:\r\n            case 0:\r\n                return 1;\r\n            case 1:\r\n                return 2;\r\n            case 2:\r\n                return 4;\r\n        }\r\n    } else {\r\n        logger.debug(\"Function 0 has no set_episode instruction.\");\r\n        return 1;\r\n    }\r\n}\r\n\r\nfunction get_area_variants(\r\n    dat: DatFile,\r\n    episode: number,\r\n    func_0_ops: Instruction[],\r\n    lenient: boolean\r\n): AreaVariant[] {\r\n    // Add area variants that have npcs or objects even if there are no BB_Map_Designate instructions for them.\r\n    const area_variants = new Map();\r\n\r\n    for (const npc of dat.npcs) {\r\n        area_variants.set(npc.area_id, 0);\r\n    }\r\n\r\n    for (const obj of dat.objs) {\r\n        area_variants.set(obj.area_id, 0);\r\n    }\r\n\r\n    const bb_maps = func_0_ops.filter(op => op.mnemonic === \"BB_Map_Designate\");\r\n\r\n    for (const bb_map of bb_maps) {\r\n        const area_id = bb_map.args[0];\r\n        const variant_id = bb_map.args[2];\r\n        area_variants.set(area_id, variant_id);\r\n    }\r\n\r\n    const area_variants_array = new Array<AreaVariant>();\r\n\r\n    for (const [area_id, variant_id] of area_variants.entries()) {\r\n        try {\r\n            area_variants_array.push(area_store.get_variant(episode, area_id, variant_id));\r\n        } catch (e) {\r\n            if (lenient) {\r\n                logger.error(`Unknown area variant.`, e);\r\n            } else {\r\n                throw e;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Sort by area order and then variant id.\r\n    return area_variants_array.sort((a, b) => a.area.order - b.area.order || a.id - b.id);\r\n}\r\n\r\nfunction get_func_operations(\r\n    operations: Instruction[],\r\n    func_offset: number\r\n): Instruction[] | undefined {\r\n    let position = 0;\r\n    let func_found = false;\r\n    const func_ops: Instruction[] = [];\r\n\r\n    for (const operation of operations) {\r\n        if (position === func_offset) {\r\n            func_found = true;\r\n        }\r\n\r\n        if (func_found) {\r\n            func_ops.push(operation);\r\n\r\n            // Break when ret is encountered.\r\n            if (operation.opcode === 1) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        position += operation.size;\r\n    }\r\n\r\n    return func_found ? func_ops : undefined;\r\n}\r\n\r\nfunction parse_obj_data(objs: DatObject[]): QuestObject[] {\r\n    return objs.map(obj_data => {\r\n        const { x, y, z } = obj_data.position;\r\n        const rot = obj_data.rotation;\r\n        return new QuestObject(\r\n            obj_data.area_id,\r\n            obj_data.section_id,\r\n            new Vec3(x, y, z),\r\n            new Vec3(rot.x, rot.y, rot.z),\r\n            ObjectType.from_pso_id(obj_data.type_id),\r\n            obj_data\r\n        );\r\n    });\r\n}\r\n\r\nfunction parse_npc_data(episode: number, npcs: DatNpc[]): QuestNpc[] {\r\n    return npcs.map(npc_data => {\r\n        const { x, y, z } = npc_data.position;\r\n        const rot = npc_data.rotation;\r\n        return new QuestNpc(\r\n            npc_data.area_id,\r\n            npc_data.section_id,\r\n            new Vec3(x, y, z),\r\n            new Vec3(rot.x, rot.y, rot.z),\r\n            get_npc_type(episode, npc_data),\r\n            npc_data\r\n        );\r\n    });\r\n}\r\n\r\n// TODO: detect Mothmant, St. Rappy, Hallo Rappy, Egg Rappy, Death Gunner, Bulk and Recon.\r\nfunction get_npc_type(episode: number, { type_id, flags, skin, area_id }: DatNpc): NpcType {\r\n    const regular = Math.abs(flags - 1) > 0.00001;\r\n\r\n    switch (`${type_id}, ${skin % 3}, ${episode}`) {\r\n        case `${0x044}, 0, 1`:\r\n            return NpcType.Booma;\r\n        case `${0x044}, 1, 1`:\r\n            return NpcType.Gobooma;\r\n        case `${0x044}, 2, 1`:\r\n            return NpcType.Gigobooma;\r\n\r\n        case `${0x063}, 0, 1`:\r\n            return NpcType.EvilShark;\r\n        case `${0x063}, 1, 1`:\r\n            return NpcType.PalShark;\r\n        case `${0x063}, 2, 1`:\r\n            return NpcType.GuilShark;\r\n\r\n        case `${0x0a6}, 0, 1`:\r\n            return NpcType.Dimenian;\r\n        case `${0x0a6}, 0, 2`:\r\n            return NpcType.Dimenian2;\r\n        case `${0x0a6}, 1, 1`:\r\n            return NpcType.LaDimenian;\r\n        case `${0x0a6}, 1, 2`:\r\n            return NpcType.LaDimenian2;\r\n        case `${0x0a6}, 2, 1`:\r\n            return NpcType.SoDimenian;\r\n        case `${0x0a6}, 2, 2`:\r\n            return NpcType.SoDimenian2;\r\n\r\n        case `${0x0d6}, 0, 2`:\r\n            return NpcType.Mericarol;\r\n        case `${0x0d6}, 1, 2`:\r\n            return NpcType.Mericus;\r\n        case `${0x0d6}, 2, 2`:\r\n            return NpcType.Merikle;\r\n\r\n        case `${0x115}, 0, 4`:\r\n            return NpcType.Boota;\r\n        case `${0x115}, 1, 4`:\r\n            return NpcType.ZeBoota;\r\n        case `${0x115}, 2, 4`:\r\n            return NpcType.BaBoota;\r\n        case `${0x117}, 0, 4`:\r\n            return NpcType.Goran;\r\n        case `${0x117}, 1, 4`:\r\n            return NpcType.PyroGoran;\r\n        case `${0x117}, 2, 4`:\r\n            return NpcType.GoranDetonator;\r\n    }\r\n\r\n    switch (`${type_id}, ${skin % 2}, ${episode}`) {\r\n        case `${0x040}, 0, 1`:\r\n            return NpcType.Hildebear;\r\n        case `${0x040}, 0, 2`:\r\n            return NpcType.Hildebear2;\r\n        case `${0x040}, 1, 1`:\r\n            return NpcType.Hildeblue;\r\n        case `${0x040}, 1, 2`:\r\n            return NpcType.Hildeblue2;\r\n        case `${0x041}, 0, 1`:\r\n            return NpcType.RagRappy;\r\n        case `${0x041}, 0, 2`:\r\n            return NpcType.RagRappy2;\r\n        case `${0x041}, 0, 4`:\r\n            return NpcType.SandRappy;\r\n        case `${0x041}, 1, 1`:\r\n            return NpcType.AlRappy;\r\n        case `${0x041}, 1, 2`:\r\n            return NpcType.LoveRappy;\r\n        case `${0x041}, 1, 4`:\r\n            return NpcType.DelRappy;\r\n\r\n        case `${0x080}, 0, 1`:\r\n            return NpcType.Dubchic;\r\n        case `${0x080}, 0, 2`:\r\n            return NpcType.Dubchic2;\r\n        case `${0x080}, 1, 1`:\r\n            return NpcType.Gilchic;\r\n        case `${0x080}, 1, 2`:\r\n            return NpcType.Gilchic2;\r\n\r\n        case `${0x0d4}, 0, 2`:\r\n            return NpcType.SinowBerill;\r\n        case `${0x0d4}, 1, 2`:\r\n            return NpcType.SinowSpigell;\r\n        case `${0x0d5}, 0, 2`:\r\n            return NpcType.Merillia;\r\n        case `${0x0d5}, 1, 2`:\r\n            return NpcType.Meriltas;\r\n        case `${0x0d7}, 0, 2`:\r\n            return NpcType.UlGibbon;\r\n        case `${0x0d7}, 1, 2`:\r\n            return NpcType.ZolGibbon;\r\n\r\n        case `${0x0dd}, 0, 2`:\r\n            return NpcType.Dolmolm;\r\n        case `${0x0dd}, 1, 2`:\r\n            return NpcType.Dolmdarl;\r\n        case `${0x0e0}, 0, 2`:\r\n            return area_id > 15 ? NpcType.Epsilon : NpcType.SinowZoa;\r\n        case `${0x0e0}, 1, 2`:\r\n            return area_id > 15 ? NpcType.Epsilon : NpcType.SinowZele;\r\n\r\n        case `${0x112}, 0, 4`:\r\n            return NpcType.MerissaA;\r\n        case `${0x112}, 1, 4`:\r\n            return NpcType.MerissaAA;\r\n        case `${0x114}, 0, 4`:\r\n            return NpcType.Zu;\r\n        case `${0x114}, 1, 4`:\r\n            return NpcType.Pazuzu;\r\n        case `${0x116}, 0, 4`:\r\n            return NpcType.Dorphon;\r\n        case `${0x116}, 1, 4`:\r\n            return NpcType.DorphonEclair;\r\n        case `${0x119}, 0, 4`:\r\n            return regular ? NpcType.SaintMilion : NpcType.Kondrieu;\r\n        case `${0x119}, 1, 4`:\r\n            return regular ? NpcType.Shambertin : NpcType.Kondrieu;\r\n    }\r\n\r\n    switch (`${type_id}, ${episode}`) {\r\n        case `${0x042}, 1`:\r\n            return NpcType.Monest;\r\n        case `${0x042}, 2`:\r\n            return NpcType.Monest2;\r\n        case `${0x043}, 1`:\r\n            return regular ? NpcType.SavageWolf : NpcType.BarbarousWolf;\r\n        case `${0x043}, 2`:\r\n            return regular ? NpcType.SavageWolf2 : NpcType.BarbarousWolf2;\r\n\r\n        case `${0x060}, 1`:\r\n            return NpcType.GrassAssassin;\r\n        case `${0x060}, 2`:\r\n            return NpcType.GrassAssassin2;\r\n        case `${0x061}, 1`:\r\n            return area_id > 15 ? NpcType.DelLily : regular ? NpcType.PoisonLily : NpcType.NarLily;\r\n        case `${0x061}, 2`:\r\n            return area_id > 15\r\n                ? NpcType.DelLily\r\n                : regular\r\n                ? NpcType.PoisonLily2\r\n                : NpcType.NarLily2;\r\n        case `${0x062}, 1`:\r\n            return NpcType.NanoDragon;\r\n        case `${0x064}, 1`:\r\n            return regular ? NpcType.PofuillySlime : NpcType.PouillySlime;\r\n        case `${0x065}, 1`:\r\n            return NpcType.PanArms;\r\n        case `${0x065}, 2`:\r\n            return NpcType.PanArms2;\r\n\r\n        case `${0x081}, 1`:\r\n            return NpcType.Garanz;\r\n        case `${0x081}, 2`:\r\n            return NpcType.Garanz2;\r\n        case `${0x082}, 1`:\r\n            return regular ? NpcType.SinowBeat : NpcType.SinowGold;\r\n        case `${0x083}, 1`:\r\n            return NpcType.Canadine;\r\n        case `${0x084}, 1`:\r\n            return NpcType.Canane;\r\n        case `${0x085}, 1`:\r\n            return NpcType.Dubswitch;\r\n        case `${0x085}, 2`:\r\n            return NpcType.Dubswitch2;\r\n\r\n        case `${0x0a0}, 1`:\r\n            return NpcType.Delsaber;\r\n        case `${0x0a0}, 2`:\r\n            return NpcType.Delsaber2;\r\n        case `${0x0a1}, 1`:\r\n            return NpcType.ChaosSorcerer;\r\n        case `${0x0a1}, 2`:\r\n            return NpcType.ChaosSorcerer2;\r\n        case `${0x0a2}, 1`:\r\n            return NpcType.DarkGunner;\r\n        case `${0x0a4}, 1`:\r\n            return NpcType.ChaosBringer;\r\n        case `${0x0a5}, 1`:\r\n            return NpcType.DarkBelra;\r\n        case `${0x0a5}, 2`:\r\n            return NpcType.DarkBelra2;\r\n        case `${0x0a7}, 1`:\r\n            return NpcType.Bulclaw;\r\n        case `${0x0a8}, 1`:\r\n            return NpcType.Claw;\r\n\r\n        case `${0x0c0}, 1`:\r\n            return NpcType.Dragon;\r\n        case `${0x0c0}, 2`:\r\n            return NpcType.GalGryphon;\r\n        case `${0x0c1}, 1`:\r\n            return NpcType.DeRolLe;\r\n        // TODO:\r\n        // case `${0x0C2}, 1`: return NpcType.VolOptPart1;\r\n        case `${0x0c5}, 1`:\r\n            return NpcType.VolOpt;\r\n        case `${0x0c8}, 1`:\r\n            return NpcType.DarkFalz;\r\n        case `${0x0ca}, 2`:\r\n            return NpcType.OlgaFlow;\r\n        case `${0x0cb}, 2`:\r\n            return NpcType.BarbaRay;\r\n        case `${0x0cc}, 2`:\r\n            return NpcType.GolDragon;\r\n\r\n        case `${0x0d8}, 2`:\r\n            return NpcType.Gibbles;\r\n        case `${0x0d9}, 2`:\r\n            return NpcType.Gee;\r\n        case `${0x0da}, 2`:\r\n            return NpcType.GiGue;\r\n\r\n        case `${0x0db}, 2`:\r\n            return NpcType.Deldepth;\r\n        case `${0x0dc}, 2`:\r\n            return NpcType.Delbiter;\r\n        case `${0x0de}, 2`:\r\n            return NpcType.Morfos;\r\n        case `${0x0df}, 2`:\r\n            return NpcType.Recobox;\r\n        case `${0x0e1}, 2`:\r\n            return NpcType.IllGill;\r\n\r\n        case `${0x110}, 4`:\r\n            return NpcType.Astark;\r\n        case `${0x111}, 4`:\r\n            return regular ? NpcType.SatelliteLizard : NpcType.Yowie;\r\n        case `${0x113}, 4`:\r\n            return NpcType.Girtablulu;\r\n    }\r\n\r\n    switch (type_id) {\r\n        case 0x004:\r\n            return NpcType.FemaleFat;\r\n        case 0x005:\r\n            return NpcType.FemaleMacho;\r\n        case 0x007:\r\n            return NpcType.FemaleTall;\r\n        case 0x00a:\r\n            return NpcType.MaleDwarf;\r\n        case 0x00b:\r\n            return NpcType.MaleFat;\r\n        case 0x00c:\r\n            return NpcType.MaleMacho;\r\n        case 0x00d:\r\n            return NpcType.MaleOld;\r\n        case 0x019:\r\n            return NpcType.BlueSoldier;\r\n        case 0x01a:\r\n            return NpcType.RedSoldier;\r\n        case 0x01b:\r\n            return NpcType.Principal;\r\n        case 0x01c:\r\n            return NpcType.Tekker;\r\n        case 0x01d:\r\n            return NpcType.GuildLady;\r\n        case 0x01e:\r\n            return NpcType.Scientist;\r\n        case 0x01f:\r\n            return NpcType.Nurse;\r\n        case 0x020:\r\n            return NpcType.Irene;\r\n        case 0x0f1:\r\n            return NpcType.ItemShop;\r\n        case 0x0fe:\r\n            return NpcType.Nurse2;\r\n    }\r\n\r\n    return NpcType.Unknown;\r\n}\r\n\r\nfunction objects_to_dat_data(objects: QuestObject[]): DatObject[] {\r\n    return objects.map(object => ({\r\n        type_id: object.type.pso_id!,\r\n        section_id: object.section_id,\r\n        position: object.section_position,\r\n        rotation: object.rotation,\r\n        area_id: object.area_id,\r\n        unknown: object.dat.unknown,\r\n    }));\r\n}\r\n\r\nfunction npcsToDatData(npcs: QuestNpc[]): DatNpc[] {\r\n    return npcs.map(npc => {\r\n        // If the type is unknown, typeData will be undefined and we use the raw data from the DAT file.\r\n        const type_data = npc_type_to_dat_data(npc.type);\r\n        let flags = npc.dat.flags;\r\n\r\n        if (type_data) {\r\n            flags = (npc.dat.flags & ~0x800000) | (type_data.regular ? 0 : 0x800000);\r\n        }\r\n\r\n        return {\r\n            type_id: type_data ? type_data.type_id : npc.dat.type_id,\r\n            section_id: npc.section_id,\r\n            position: npc.section_position,\r\n            rotation: npc.rotation,\r\n            flags,\r\n            skin: type_data ? type_data.skin : npc.dat.skin,\r\n            area_id: npc.area_id,\r\n            unknown: npc.dat.unknown,\r\n        };\r\n    });\r\n}\r\n\r\nfunction npc_type_to_dat_data(\r\n    type: NpcType\r\n): { type_id: number; skin: number; regular: boolean } | undefined {\r\n    switch (type) {\r\n        default:\r\n            throw new Error(`Unexpected type ${type.code}.`);\r\n\r\n        case NpcType.Unknown:\r\n            return undefined;\r\n\r\n        case NpcType.FemaleFat:\r\n            return { type_id: 0x004, skin: 0, regular: true };\r\n        case NpcType.FemaleMacho:\r\n            return { type_id: 0x005, skin: 0, regular: true };\r\n        case NpcType.FemaleTall:\r\n            return { type_id: 0x007, skin: 0, regular: true };\r\n        case NpcType.MaleDwarf:\r\n            return { type_id: 0x00a, skin: 0, regular: true };\r\n        case NpcType.MaleFat:\r\n            return { type_id: 0x00b, skin: 0, regular: true };\r\n        case NpcType.MaleMacho:\r\n            return { type_id: 0x00c, skin: 0, regular: true };\r\n        case NpcType.MaleOld:\r\n            return { type_id: 0x00d, skin: 0, regular: true };\r\n        case NpcType.BlueSoldier:\r\n            return { type_id: 0x019, skin: 0, regular: true };\r\n        case NpcType.RedSoldier:\r\n            return { type_id: 0x01a, skin: 0, regular: true };\r\n        case NpcType.Principal:\r\n            return { type_id: 0x01b, skin: 0, regular: true };\r\n        case NpcType.Tekker:\r\n            return { type_id: 0x01c, skin: 0, regular: true };\r\n        case NpcType.GuildLady:\r\n            return { type_id: 0x01d, skin: 0, regular: true };\r\n        case NpcType.Scientist:\r\n            return { type_id: 0x01e, skin: 0, regular: true };\r\n        case NpcType.Nurse:\r\n            return { type_id: 0x01f, skin: 0, regular: true };\r\n        case NpcType.Irene:\r\n            return { type_id: 0x020, skin: 0, regular: true };\r\n        case NpcType.ItemShop:\r\n            return { type_id: 0x0f1, skin: 0, regular: true };\r\n        case NpcType.Nurse2:\r\n            return { type_id: 0x0fe, skin: 0, regular: true };\r\n\r\n        case NpcType.Hildebear:\r\n            return { type_id: 0x040, skin: 0, regular: true };\r\n        case NpcType.Hildeblue:\r\n            return { type_id: 0x040, skin: 1, regular: true };\r\n        case NpcType.RagRappy:\r\n            return { type_id: 0x041, skin: 0, regular: true };\r\n        case NpcType.AlRappy:\r\n            return { type_id: 0x041, skin: 1, regular: true };\r\n        case NpcType.Monest:\r\n            return { type_id: 0x042, skin: 0, regular: true };\r\n        case NpcType.SavageWolf:\r\n            return { type_id: 0x043, skin: 0, regular: true };\r\n        case NpcType.BarbarousWolf:\r\n            return { type_id: 0x043, skin: 0, regular: false };\r\n        case NpcType.Booma:\r\n            return { type_id: 0x044, skin: 0, regular: true };\r\n        case NpcType.Gobooma:\r\n            return { type_id: 0x044, skin: 1, regular: true };\r\n        case NpcType.Gigobooma:\r\n            return { type_id: 0x044, skin: 2, regular: true };\r\n        case NpcType.Dragon:\r\n            return { type_id: 0x0c0, skin: 0, regular: true };\r\n\r\n        case NpcType.GrassAssassin:\r\n            return { type_id: 0x060, skin: 0, regular: true };\r\n        case NpcType.PoisonLily:\r\n            return { type_id: 0x061, skin: 0, regular: true };\r\n        case NpcType.NarLily:\r\n            return { type_id: 0x061, skin: 1, regular: true };\r\n        case NpcType.NanoDragon:\r\n            return { type_id: 0x062, skin: 0, regular: true };\r\n        case NpcType.EvilShark:\r\n            return { type_id: 0x063, skin: 0, regular: true };\r\n        case NpcType.PalShark:\r\n            return { type_id: 0x063, skin: 1, regular: true };\r\n        case NpcType.GuilShark:\r\n            return { type_id: 0x063, skin: 2, regular: true };\r\n        case NpcType.PofuillySlime:\r\n            return { type_id: 0x064, skin: 0, regular: true };\r\n        case NpcType.PouillySlime:\r\n            return { type_id: 0x064, skin: 0, regular: false };\r\n        case NpcType.PanArms:\r\n            return { type_id: 0x065, skin: 0, regular: true };\r\n        case NpcType.DeRolLe:\r\n            return { type_id: 0x0c1, skin: 0, regular: true };\r\n\r\n        case NpcType.Dubchic:\r\n            return { type_id: 0x080, skin: 0, regular: true };\r\n        case NpcType.Gilchic:\r\n            return { type_id: 0x080, skin: 1, regular: true };\r\n        case NpcType.Garanz:\r\n            return { type_id: 0x081, skin: 0, regular: true };\r\n        case NpcType.SinowBeat:\r\n            return { type_id: 0x082, skin: 0, regular: true };\r\n        case NpcType.SinowGold:\r\n            return { type_id: 0x082, skin: 0, regular: false };\r\n        case NpcType.Canadine:\r\n            return { type_id: 0x083, skin: 0, regular: true };\r\n        case NpcType.Canane:\r\n            return { type_id: 0x084, skin: 0, regular: true };\r\n        case NpcType.Dubswitch:\r\n            return { type_id: 0x085, skin: 0, regular: true };\r\n        case NpcType.VolOpt:\r\n            return { type_id: 0x0c5, skin: 0, regular: true };\r\n\r\n        case NpcType.Delsaber:\r\n            return { type_id: 0x0a0, skin: 0, regular: true };\r\n        case NpcType.ChaosSorcerer:\r\n            return { type_id: 0x0a1, skin: 0, regular: true };\r\n        case NpcType.DarkGunner:\r\n            return { type_id: 0x0a2, skin: 0, regular: true };\r\n        case NpcType.ChaosBringer:\r\n            return { type_id: 0x0a4, skin: 0, regular: true };\r\n        case NpcType.DarkBelra:\r\n            return { type_id: 0x0a5, skin: 0, regular: true };\r\n        case NpcType.Dimenian:\r\n            return { type_id: 0x0a6, skin: 0, regular: true };\r\n        case NpcType.LaDimenian:\r\n            return { type_id: 0x0a6, skin: 1, regular: true };\r\n        case NpcType.SoDimenian:\r\n            return { type_id: 0x0a6, skin: 2, regular: true };\r\n        case NpcType.Bulclaw:\r\n            return { type_id: 0x0a7, skin: 0, regular: true };\r\n        case NpcType.Claw:\r\n            return { type_id: 0x0a8, skin: 0, regular: true };\r\n        case NpcType.DarkFalz:\r\n            return { type_id: 0x0c8, skin: 0, regular: true };\r\n\r\n        case NpcType.Hildebear2:\r\n            return { type_id: 0x040, skin: 0, regular: true };\r\n        case NpcType.Hildeblue2:\r\n            return { type_id: 0x040, skin: 1, regular: true };\r\n        case NpcType.RagRappy2:\r\n            return { type_id: 0x041, skin: 0, regular: true };\r\n        case NpcType.LoveRappy:\r\n            return { type_id: 0x041, skin: 1, regular: true };\r\n        case NpcType.Monest2:\r\n            return { type_id: 0x042, skin: 0, regular: true };\r\n        case NpcType.PoisonLily2:\r\n            return { type_id: 0x061, skin: 0, regular: true };\r\n        case NpcType.NarLily2:\r\n            return { type_id: 0x061, skin: 1, regular: true };\r\n        case NpcType.GrassAssassin2:\r\n            return { type_id: 0x060, skin: 0, regular: true };\r\n        case NpcType.Dimenian2:\r\n            return { type_id: 0x0a6, skin: 0, regular: true };\r\n        case NpcType.LaDimenian2:\r\n            return { type_id: 0x0a6, skin: 1, regular: true };\r\n        case NpcType.SoDimenian2:\r\n            return { type_id: 0x0a6, skin: 2, regular: true };\r\n        case NpcType.DarkBelra2:\r\n            return { type_id: 0x0a5, skin: 0, regular: true };\r\n        case NpcType.BarbaRay:\r\n            return { type_id: 0x0cb, skin: 0, regular: true };\r\n\r\n        case NpcType.SavageWolf2:\r\n            return { type_id: 0x043, skin: 0, regular: true };\r\n        case NpcType.BarbarousWolf2:\r\n            return { type_id: 0x043, skin: 0, regular: false };\r\n        case NpcType.PanArms2:\r\n            return { type_id: 0x065, skin: 0, regular: true };\r\n        case NpcType.Dubchic2:\r\n            return { type_id: 0x080, skin: 0, regular: true };\r\n        case NpcType.Gilchic2:\r\n            return { type_id: 0x080, skin: 1, regular: true };\r\n        case NpcType.Garanz2:\r\n            return { type_id: 0x081, skin: 0, regular: true };\r\n        case NpcType.Dubswitch2:\r\n            return { type_id: 0x085, skin: 0, regular: true };\r\n        case NpcType.Delsaber2:\r\n            return { type_id: 0x0a0, skin: 0, regular: true };\r\n        case NpcType.ChaosSorcerer2:\r\n            return { type_id: 0x0a1, skin: 0, regular: true };\r\n        case NpcType.GolDragon:\r\n            return { type_id: 0x0cc, skin: 0, regular: true };\r\n\r\n        case NpcType.SinowBerill:\r\n            return { type_id: 0x0d4, skin: 0, regular: true };\r\n        case NpcType.SinowSpigell:\r\n            return { type_id: 0x0d4, skin: 1, regular: true };\r\n        case NpcType.Merillia:\r\n            return { type_id: 0x0d5, skin: 0, regular: true };\r\n        case NpcType.Meriltas:\r\n            return { type_id: 0x0d5, skin: 1, regular: true };\r\n        case NpcType.Mericarol:\r\n            return { type_id: 0x0d6, skin: 0, regular: true };\r\n        case NpcType.Mericus:\r\n            return { type_id: 0x0d6, skin: 1, regular: true };\r\n        case NpcType.Merikle:\r\n            return { type_id: 0x0d6, skin: 2, regular: true };\r\n        case NpcType.UlGibbon:\r\n            return { type_id: 0x0d7, skin: 0, regular: true };\r\n        case NpcType.ZolGibbon:\r\n            return { type_id: 0x0d7, skin: 1, regular: true };\r\n        case NpcType.Gibbles:\r\n            return { type_id: 0x0d8, skin: 0, regular: true };\r\n        case NpcType.Gee:\r\n            return { type_id: 0x0d9, skin: 0, regular: true };\r\n        case NpcType.GiGue:\r\n            return { type_id: 0x0da, skin: 0, regular: true };\r\n        case NpcType.GalGryphon:\r\n            return { type_id: 0x0c0, skin: 0, regular: true };\r\n\r\n        case NpcType.Deldepth:\r\n            return { type_id: 0x0db, skin: 0, regular: true };\r\n        case NpcType.Delbiter:\r\n            return { type_id: 0x0dc, skin: 0, regular: true };\r\n        case NpcType.Dolmolm:\r\n            return { type_id: 0x0dd, skin: 0, regular: true };\r\n        case NpcType.Dolmdarl:\r\n            return { type_id: 0x0dd, skin: 1, regular: true };\r\n        case NpcType.Morfos:\r\n            return { type_id: 0x0de, skin: 0, regular: true };\r\n        case NpcType.Recobox:\r\n            return { type_id: 0x0df, skin: 0, regular: true };\r\n        case NpcType.Epsilon:\r\n            return { type_id: 0x0e0, skin: 0, regular: true };\r\n        case NpcType.SinowZoa:\r\n            return { type_id: 0x0e0, skin: 0, regular: true };\r\n        case NpcType.SinowZele:\r\n            return { type_id: 0x0e0, skin: 1, regular: true };\r\n        case NpcType.IllGill:\r\n            return { type_id: 0x0e1, skin: 0, regular: true };\r\n        case NpcType.DelLily:\r\n            return { type_id: 0x061, skin: 0, regular: true };\r\n        case NpcType.OlgaFlow:\r\n            return { type_id: 0x0ca, skin: 0, regular: true };\r\n\r\n        case NpcType.SandRappy:\r\n            return { type_id: 0x041, skin: 0, regular: true };\r\n        case NpcType.DelRappy:\r\n            return { type_id: 0x041, skin: 1, regular: true };\r\n        case NpcType.Astark:\r\n            return { type_id: 0x110, skin: 0, regular: true };\r\n        case NpcType.SatelliteLizard:\r\n            return { type_id: 0x111, skin: 0, regular: true };\r\n        case NpcType.Yowie:\r\n            return { type_id: 0x111, skin: 0, regular: false };\r\n        case NpcType.MerissaA:\r\n            return { type_id: 0x112, skin: 0, regular: true };\r\n        case NpcType.MerissaAA:\r\n            return { type_id: 0x112, skin: 1, regular: true };\r\n        case NpcType.Girtablulu:\r\n            return { type_id: 0x113, skin: 0, regular: true };\r\n        case NpcType.Zu:\r\n            return { type_id: 0x114, skin: 0, regular: true };\r\n        case NpcType.Pazuzu:\r\n            return { type_id: 0x114, skin: 1, regular: true };\r\n        case NpcType.Boota:\r\n            return { type_id: 0x115, skin: 0, regular: true };\r\n        case NpcType.ZeBoota:\r\n            return { type_id: 0x115, skin: 1, regular: true };\r\n        case NpcType.BaBoota:\r\n            return { type_id: 0x115, skin: 2, regular: true };\r\n        case NpcType.Dorphon:\r\n            return { type_id: 0x116, skin: 0, regular: true };\r\n        case NpcType.DorphonEclair:\r\n            return { type_id: 0x116, skin: 1, regular: true };\r\n        case NpcType.Goran:\r\n            return { type_id: 0x117, skin: 0, regular: true };\r\n        case NpcType.PyroGoran:\r\n            return { type_id: 0x117, skin: 1, regular: true };\r\n        case NpcType.GoranDetonator:\r\n            return { type_id: 0x117, skin: 2, regular: true };\r\n        case NpcType.SaintMilion:\r\n            return { type_id: 0x119, skin: 0, regular: true };\r\n        case NpcType.Shambertin:\r\n            return { type_id: 0x119, skin: 1, regular: true };\r\n        case NpcType.Kondrieu:\r\n            return { type_id: 0x119, skin: 0, regular: false };\r\n    }\r\n}\r\n","export async function read_file(file: File): Promise<ArrayBuffer> {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.addEventListener(\"loadend\", () => {\r\n            if (reader.result instanceof ArrayBuffer) {\r\n                resolve(reader.result);\r\n            } else {\r\n                reject(new Error(\"Couldn't read file.\"));\r\n            }\r\n        });\r\n\r\n        reader.readAsArrayBuffer(file);\r\n    });\r\n}\r\n","import { computed, observable } from \"mobx\";\r\n\r\nexport class Action {\r\n    constructor(\r\n        readonly description: string,\r\n        readonly undo: () => void,\r\n        readonly redo: () => void\r\n    ) {}\r\n}\r\n\r\nexport class UndoStack {\r\n    @observable.ref private stack: Action[] = [];\r\n    /**\r\n     * The index where new actions are inserted.\r\n     */\r\n    @observable private index = 0;\r\n\r\n    @computed get can_undo(): boolean {\r\n        return this.index > 0;\r\n    }\r\n\r\n    @computed get can_redo(): boolean {\r\n        return this.index < this.stack.length;\r\n    }\r\n\r\n    /**\r\n     * The first action that will be undone when calling undo().\r\n     */\r\n    @computed get first_undo(): Action | undefined {\r\n        return this.stack[this.index - 1];\r\n    }\r\n\r\n    /**\r\n     * The first action that will be redone when calling redo().\r\n     */\r\n    @computed get first_redo(): Action | undefined {\r\n        return this.stack[this.index];\r\n    }\r\n\r\n    push_action(description: string, undo: () => void, redo: () => void): void {\r\n        this.push(new Action(description, undo, redo));\r\n    }\r\n\r\n    push(action: Action): void {\r\n        this.stack.splice(this.index, this.stack.length - this.index, action);\r\n        this.index++;\r\n    }\r\n\r\n    undo(): boolean {\r\n        if (this.can_undo) {\r\n            this.stack[--this.index].undo();\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    redo(): boolean {\r\n        if (this.can_redo) {\r\n            this.stack[this.index++].redo();\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    clear(): void {\r\n        this.stack = [];\r\n        this.index = 0;\r\n    }\r\n}\r\n","import Logger from \"js-logger\";\r\nimport { action, observable, runInAction } from \"mobx\";\r\nimport { Endianness } from \"../data_formats\";\r\nimport { ArrayBufferCursor } from \"../data_formats/cursor/ArrayBufferCursor\";\r\nimport { parse_quest, write_quest_qst } from \"../data_formats/parsing/quest\";\r\nimport { Vec3 } from \"../data_formats/vector\";\r\nimport { Area, Quest, QuestEntity, Section } from \"../domain\";\r\nimport { read_file } from \"../read_file\";\r\nimport { area_store } from \"./AreaStore\";\r\nimport { UndoStack } from \"../undo\";\r\n\r\nconst logger = Logger.get(\"stores/QuestEditorStore\");\r\n\r\nclass QuestEditorStore {\r\n    readonly undo_stack = new UndoStack();\r\n    @observable current_quest?: Quest;\r\n    @observable current_area?: Area;\r\n    @observable selected_entity?: QuestEntity;\r\n\r\n    @action\r\n    set_quest = (quest?: Quest) => {\r\n        this.undo_stack.clear();\r\n        this.selected_entity = undefined;\r\n        this.current_quest = quest;\r\n\r\n        if (quest && quest.area_variants.length) {\r\n            this.current_area = quest.area_variants[0].area;\r\n        } else {\r\n            this.current_area = undefined;\r\n        }\r\n    };\r\n\r\n    @action\r\n    set_selected_entity = (entity?: QuestEntity) => {\r\n        if (entity) {\r\n            this.set_current_area_id(entity.area_id);\r\n        }\r\n\r\n        this.selected_entity = entity;\r\n    };\r\n\r\n    @action\r\n    set_current_area_id = (area_id?: number) => {\r\n        this.selected_entity = undefined;\r\n\r\n        if (area_id == null) {\r\n            this.current_area = undefined;\r\n        } else if (this.current_quest) {\r\n            const area_variant = this.current_quest.area_variants.find(\r\n                variant => variant.area.id === area_id\r\n            );\r\n            this.current_area = area_variant && area_variant.area;\r\n        }\r\n    };\r\n\r\n    // TODO: notify user of problems.\r\n    load_file = async (file: File) => {\r\n        try {\r\n            const buffer = await read_file(file);\r\n            const quest = parse_quest(new ArrayBufferCursor(buffer, Endianness.Little));\r\n            this.set_quest(quest);\r\n\r\n            if (quest) {\r\n                // Load section data.\r\n                for (const variant of quest.area_variants) {\r\n                    const sections = await area_store.get_area_sections(\r\n                        quest.episode,\r\n                        variant.area.id,\r\n                        variant.id\r\n                    );\r\n                    variant.sections = sections;\r\n\r\n                    for (const object of quest.objects.filter(o => o.area_id === variant.area.id)) {\r\n                        try {\r\n                            this.set_section_on_visible_quest_entity(object, sections);\r\n                        } catch (e) {\r\n                            logger.error(e);\r\n                        }\r\n                    }\r\n\r\n                    for (const npc of quest.npcs.filter(npc => npc.area_id === variant.area.id)) {\r\n                        try {\r\n                            this.set_section_on_visible_quest_entity(npc, sections);\r\n                        } catch (e) {\r\n                            logger.error(e);\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                logger.error(\"Couldn't parse quest file.\");\r\n            }\r\n        } catch (e) {\r\n            logger.error(\"Couldn't read file.\", e);\r\n        }\r\n    };\r\n\r\n    private set_section_on_visible_quest_entity = async (\r\n        entity: QuestEntity,\r\n        sections: Section[]\r\n    ) => {\r\n        let { x, y, z } = entity.position;\r\n\r\n        const section = sections.find(s => s.id === entity.section_id);\r\n\r\n        if (section) {\r\n            const { x: sec_x, y: sec_y, z: sec_z } = section.position;\r\n            const rot_x = section.cos_y_axis_rotation * x + section.sin_y_axis_rotation * z;\r\n            const rot_z = -section.sin_y_axis_rotation * x + section.cos_y_axis_rotation * z;\r\n            x = rot_x + sec_x;\r\n            y += sec_y;\r\n            z = rot_z + sec_z;\r\n        } else {\r\n            logger.warn(`Section ${entity.section_id} not found.`);\r\n        }\r\n\r\n        runInAction(() => {\r\n            entity.section = section;\r\n            entity.position = new Vec3(x, y, z);\r\n        });\r\n    };\r\n\r\n    save_current_quest_to_file = (file_name: string) => {\r\n        if (this.current_quest) {\r\n            const buffer = write_quest_qst(this.current_quest, file_name);\r\n\r\n            if (!file_name.endsWith(\".qst\")) {\r\n                file_name += \".qst\";\r\n            }\r\n\r\n            const a = document.createElement(\"a\");\r\n            a.href = URL.createObjectURL(new Blob([buffer], { type: \"application/octet-stream\" }));\r\n            a.download = file_name;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            URL.revokeObjectURL(a.href);\r\n            document.body.removeChild(a);\r\n        }\r\n    };\r\n}\r\n\r\nexport const quest_editor_store = new QuestEditorStore();\r\n","import { InputNumber } from \"antd\";\r\nimport { autorun, IReactionDisposer } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { Component, PureComponent, ReactNode } from \"react\";\r\nimport { QuestEntity, QuestNpc, QuestObject } from \"../../domain\";\r\nimport \"./EntityInfoComponent.css\";\r\n\r\nexport type Props = {\r\n    entity?: QuestEntity;\r\n};\r\n\r\n@observer\r\nexport class EntityInfoComponent extends Component<Props> {\r\n    render(): ReactNode {\r\n        const entity = this.props.entity;\r\n\r\n        if (entity) {\r\n            const section_id = entity.section ? entity.section.id : entity.section_id;\r\n            let name = null;\r\n\r\n            if (entity instanceof QuestObject) {\r\n                name = (\r\n                    <tr>\r\n                        <td>Object: </td>\r\n                        <td colSpan={2}>{entity.type.name}</td>\r\n                    </tr>\r\n                );\r\n            } else if (entity instanceof QuestNpc) {\r\n                name = (\r\n                    <tr>\r\n                        <td>NPC: </td>\r\n                        <td>{entity.type.name}</td>\r\n                    </tr>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div className=\"EntityInfoComponent-container\">\r\n                    <table className=\"EntityInfoComponent-table\">\r\n                        <tbody>\r\n                            {name}\r\n                            <tr>\r\n                                <td>Section: </td>\r\n                                <td>{section_id}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td colSpan={2}>World position: </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td colSpan={2}>\r\n                                    <table>\r\n                                        <tbody>\r\n                                            <CoordRow\r\n                                                entity={entity}\r\n                                                position_type=\"position\"\r\n                                                coord=\"x\"\r\n                                            />\r\n                                            <CoordRow\r\n                                                entity={entity}\r\n                                                position_type=\"position\"\r\n                                                coord=\"y\"\r\n                                            />\r\n                                            <CoordRow\r\n                                                entity={entity}\r\n                                                position_type=\"position\"\r\n                                                coord=\"z\"\r\n                                            />\r\n                                        </tbody>\r\n                                    </table>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td colSpan={2}>Section position: </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td colSpan={2}>\r\n                                    <table>\r\n                                        <tbody>\r\n                                            <CoordRow\r\n                                                entity={entity}\r\n                                                position_type=\"section_position\"\r\n                                                coord=\"x\"\r\n                                            />\r\n                                            <CoordRow\r\n                                                entity={entity}\r\n                                                position_type=\"section_position\"\r\n                                                coord=\"y\"\r\n                                            />\r\n                                            <CoordRow\r\n                                                entity={entity}\r\n                                                position_type=\"section_position\"\r\n                                                coord=\"z\"\r\n                                            />\r\n                                        </tbody>\r\n                                    </table>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            );\r\n        } else {\r\n            return <div className=\"EntityInfoComponent-container\" />;\r\n        }\r\n    }\r\n}\r\n\r\ntype CoordProps = {\r\n    entity: QuestEntity;\r\n    position_type: \"position\" | \"section_position\";\r\n    coord: \"x\" | \"y\" | \"z\";\r\n};\r\n\r\nclass CoordRow extends PureComponent<CoordProps> {\r\n    render(): ReactNode {\r\n        return (\r\n            <tr>\r\n                <td>{this.props.coord.toUpperCase()}: </td>\r\n                <td>\r\n                    <CoordInput {...this.props} />\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nclass CoordInput extends Component<CoordProps, { value: number }> {\r\n    private disposer?: IReactionDisposer;\r\n\r\n    state = { value: 0 };\r\n\r\n    componentDidMount(): void {\r\n        this.start_observing();\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        if (this.disposer) this.disposer();\r\n    }\r\n\r\n    componentDidUpdate(prev_props: CoordProps): void {\r\n        if (this.props.entity !== prev_props.entity) {\r\n            this.start_observing();\r\n        }\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return (\r\n            <InputNumber\r\n                value={this.state.value}\r\n                size=\"small\"\r\n                precision={3}\r\n                className=\"EntityInfoComponent-coord\"\r\n                onChange={this.changed}\r\n            />\r\n        );\r\n    }\r\n\r\n    private start_observing(): void {\r\n        if (this.disposer) this.disposer();\r\n\r\n        this.disposer = autorun(\r\n            () => {\r\n                this.setState({\r\n                    value: this.props.entity[this.props.position_type][this.props.coord],\r\n                });\r\n            },\r\n            {\r\n                name: `${this.props.entity.type.code}.${this.props.position_type}.${this.props.coord} changed`,\r\n                delay: 50,\r\n            }\r\n        );\r\n    }\r\n\r\n    private changed = (value?: number) => {\r\n        if (value != null) {\r\n            const entity = this.props.entity;\r\n            const pos_type = this.props.position_type;\r\n            const pos = entity[pos_type].clone();\r\n            pos[this.props.coord] = value;\r\n            entity[pos_type] = pos;\r\n        }\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport { NpcType, Quest } from \"../../domain\";\r\nimport \"./QuestInfoComponent.css\";\r\n\r\nexport function QuestInfoComponent({ quest }: { quest?: Quest }): JSX.Element {\r\n    if (quest) {\r\n        const episode = quest.episode === 4 ? \"IV\" : quest.episode === 2 ? \"II\" : \"I\";\r\n        const npc_counts = new Map<NpcType, number>();\r\n\r\n        for (const npc of quest.npcs) {\r\n            const val = npc_counts.get(npc.type) || 0;\r\n            npc_counts.set(npc.type, val + 1);\r\n        }\r\n\r\n        const extra_canadines = (npc_counts.get(NpcType.Canane) || 0) * 8;\r\n\r\n        // Sort by type ID.\r\n        const sorted_npc_counts = [...npc_counts].sort((a, b) => a[0].id - b[0].id);\r\n\r\n        const npc_count_rows = sorted_npc_counts.map(([npc_type, count]) => {\r\n            const extra = npc_type === NpcType.Canadine ? extra_canadines : 0;\r\n            return (\r\n                <tr key={npc_type.id}>\r\n                    <td>{npc_type.name}:</td>\r\n                    <td>{count + extra}</td>\r\n                </tr>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"qe-QuestInfoComponent\">\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Name:</th>\r\n                            <td>{quest.name}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Episode:</th>\r\n                            <td>{episode}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan={2}>\r\n                                <pre>{quest.short_description}</pre>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan={2}>\r\n                                <pre>{quest.long_description}</pre>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"qe-QuestInfoComponent-npc-counts-container\">\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th colSpan={2}>NPC Counts</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>{npc_count_rows}</tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return <div className=\"qe-QuestInfoComponent\" />;\r\n    }\r\n}\r\n","import { BufferGeometry, DoubleSide, Mesh, MeshLambertMaterial, Texture } from \"three\";\r\nimport { QuestEntity, QuestNpc, QuestObject } from \"../../domain\";\r\nimport { create_mesh } from \"./create_mesh\";\r\n\r\nexport enum ColorType {\r\n    Normal,\r\n    Hovered,\r\n    Selected,\r\n}\r\n\r\nexport const OBJECT_COLORS: number[] = [];\r\nOBJECT_COLORS[ColorType.Normal] = 0xffff00;\r\nOBJECT_COLORS[ColorType.Hovered] = 0xffdf3f;\r\nOBJECT_COLORS[ColorType.Selected] = 0xffaa00;\r\n\r\nexport const NPC_COLORS: number[] = [];\r\nNPC_COLORS[ColorType.Normal] = 0xff0000;\r\nNPC_COLORS[ColorType.Hovered] = 0xff3f5f;\r\nNPC_COLORS[ColorType.Selected] = 0xff0054;\r\n\r\nexport type EntityUserData = {\r\n    entity: QuestEntity;\r\n};\r\n\r\nexport function create_object_mesh(\r\n    object: QuestObject,\r\n    geometry: BufferGeometry,\r\n    textures: Texture[]\r\n): Mesh {\r\n    return create(object, geometry, textures, OBJECT_COLORS[ColorType.Normal], object.type.name);\r\n}\r\n\r\nexport function create_npc_mesh(\r\n    npc: QuestNpc,\r\n    geometry: BufferGeometry,\r\n    textures: Texture[]\r\n): Mesh {\r\n    return create(npc, geometry, textures, NPC_COLORS[ColorType.Normal], npc.type.code);\r\n}\r\n\r\nfunction create(\r\n    entity: QuestEntity,\r\n    geometry: BufferGeometry,\r\n    textures: Texture[],\r\n    color: number,\r\n    name: string\r\n): Mesh {\r\n    const default_material = new MeshLambertMaterial({\r\n        color,\r\n        side: DoubleSide,\r\n    });\r\n\r\n    const mesh = create_mesh(\r\n        geometry,\r\n        textures.length\r\n            ? textures.map(\r\n                  tex =>\r\n                      new MeshLambertMaterial({\r\n                          map: tex,\r\n                          side: DoubleSide,\r\n                          alphaTest: 0.5,\r\n                      })\r\n              )\r\n            : default_material,\r\n        default_material\r\n    );\r\n\r\n    mesh.name = name;\r\n    (mesh.userData as EntityUserData).entity = entity;\r\n\r\n    const { x, y, z } = entity.position;\r\n    mesh.position.set(x, y, z);\r\n    const rot = entity.rotation;\r\n    mesh.rotation.set(rot.x, rot.y, rot.z);\r\n\r\n    return mesh;\r\n}\r\n","import React, { Component, ReactNode } from \"react\";\r\nimport { Renderer } from \"../rendering/Renderer\";\r\nimport \"./RendererComponent.less\";\r\nimport { Camera } from \"three\";\r\n\r\ntype Props = {\r\n    renderer: Renderer<Camera>;\r\n    debug?: boolean;\r\n    className?: string;\r\n    on_will_unmount?: () => void;\r\n};\r\n\r\nexport class RendererComponent extends Component<Props> {\r\n    render(): ReactNode {\r\n        let className = \"RendererComponent\";\r\n        if (this.props.className) className += \" \" + this.props.className;\r\n\r\n        return <div className={className} ref={this.modifyDom} />;\r\n    }\r\n\r\n    componentWillReceiveProps(props: Props): void {\r\n        this.props.renderer.debug = !!props.debug;\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        window.addEventListener(\"resize\", this.onResize);\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        window.removeEventListener(\"resize\", this.onResize);\r\n        this.props.on_will_unmount && this.props.on_will_unmount();\r\n    }\r\n\r\n    shouldComponentUpdate(): boolean {\r\n        return false;\r\n    }\r\n\r\n    private modifyDom = (div: HTMLDivElement | null) => {\r\n        if (div) {\r\n            this.props.renderer.set_size(div.clientWidth, div.clientHeight);\r\n            div.appendChild(this.props.renderer.dom_element);\r\n        }\r\n    };\r\n\r\n    private onResize = () => {\r\n        const wrapper_div = this.props.renderer.dom_element.parentNode as HTMLDivElement;\r\n        this.props.renderer.set_size(wrapper_div.clientWidth, wrapper_div.clientHeight);\r\n    };\r\n}\r\n","import {\r\n    BufferGeometry,\r\n    DoubleSide,\r\n    Material,\r\n    Mesh,\r\n    MeshLambertMaterial,\r\n    Skeleton,\r\n    SkinnedMesh,\r\n} from \"three\";\r\nimport { BuilderData } from \"./GeometryBuilder\";\r\n\r\nconst DUMMY_MATERIAL = new MeshLambertMaterial({\r\n    color: 0x00ff00,\r\n    side: DoubleSide,\r\n});\r\nconst DEFAULT_MATERIAL = new MeshLambertMaterial({\r\n    color: 0xff00ff,\r\n    side: DoubleSide,\r\n});\r\nconst DEFAULT_SKINNED_MATERIAL = new MeshLambertMaterial({\r\n    skinning: true,\r\n    color: 0xff00ff,\r\n    side: DoubleSide,\r\n});\r\n\r\nexport function create_mesh(\r\n    geometry: BufferGeometry,\r\n    material?: Material | Material[],\r\n    default_material: Material = DEFAULT_MATERIAL\r\n): Mesh {\r\n    return create(geometry, material, default_material, Mesh);\r\n}\r\n\r\nexport function create_skinned_mesh(\r\n    geometry: BufferGeometry,\r\n    material?: Material | Material[],\r\n    default_material: Material = DEFAULT_SKINNED_MATERIAL\r\n): SkinnedMesh {\r\n    return create(geometry, material, default_material, SkinnedMesh);\r\n}\r\n\r\nfunction create<M extends Mesh>(\r\n    geometry: BufferGeometry,\r\n    material: Material | Material[] | undefined,\r\n    default_material: Material,\r\n    mesh_constructor: new (geometry: BufferGeometry, material: Material | Material[]) => M\r\n): M {\r\n    const {\r\n        created_by_geometry_builder,\r\n        normalized_material_indices: mat_idxs,\r\n        bones,\r\n    } = geometry.userData as BuilderData;\r\n\r\n    let mat: Material | Material[];\r\n\r\n    if (Array.isArray(material)) {\r\n        if (created_by_geometry_builder) {\r\n            mat = [DUMMY_MATERIAL];\r\n\r\n            for (const [idx, normalized_idx] of mat_idxs.entries()) {\r\n                if (normalized_idx > 0) {\r\n                    mat[normalized_idx] = material[idx] || default_material;\r\n                }\r\n            }\r\n        } else {\r\n            mat = material;\r\n        }\r\n    } else if (material) {\r\n        mat = material;\r\n    } else {\r\n        mat = default_material;\r\n    }\r\n\r\n    const mesh = new mesh_constructor(geometry, mat);\r\n\r\n    if (created_by_geometry_builder && bones.length && mesh instanceof SkinnedMesh) {\r\n        mesh.add(bones[0]);\r\n        mesh.bind(new Skeleton(bones));\r\n    }\r\n\r\n    return mesh;\r\n}\r\n","import { autorun } from \"mobx\";\r\nimport { Intersection, Mesh, MeshLambertMaterial, Plane, Raycaster, Vector2, Vector3 } from \"three\";\r\nimport { Vec3 } from \"../data_formats/vector\";\r\nimport { QuestEntity, QuestNpc, QuestObject, Section } from \"../domain\";\r\nimport { quest_editor_store } from \"../stores/QuestEditorStore\";\r\nimport { AreaUserData } from \"./conversion/areas\";\r\nimport { ColorType, EntityUserData, NPC_COLORS, OBJECT_COLORS } from \"./conversion/entities\";\r\nimport { QuestRenderer } from \"./QuestRenderer\";\r\n\r\nconst DOWN_VECTOR = new Vector3(0, -1, 0);\r\n\r\ntype Highlighted = {\r\n    entity: QuestEntity;\r\n    mesh: Mesh;\r\n};\r\n\r\ntype Pick = {\r\n    initial_position: Vec3;\r\n    grab_offset: Vector3;\r\n    drag_adjust: Vector3;\r\n    drag_y: number;\r\n};\r\n\r\ntype PickResult = Pick & {\r\n    entity: QuestEntity;\r\n    mesh: Mesh;\r\n};\r\n\r\nexport class QuestEntityControls {\r\n    private raycaster = new Raycaster();\r\n    private selected?: Highlighted;\r\n    private hovered?: Highlighted;\r\n    /**\r\n     * Iff defined, the user is transforming the selected entity.\r\n     */\r\n    private pick?: Pick;\r\n    private last_pointer_position = new Vector2(0, 0);\r\n    private moved_since_last_mouse_down = false;\r\n\r\n    constructor(private renderer: QuestRenderer) {\r\n        autorun(() => {\r\n            const entity = quest_editor_store.selected_entity;\r\n\r\n            if (!this.selected || this.selected.entity !== entity) {\r\n                this.stop_transforming();\r\n\r\n                if (entity) {\r\n                    // Mesh might not be loaded yet.\r\n                    this.try_highlight_selected();\r\n                } else {\r\n                    this.deselect();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Highlights the selected entity if its mesh has been loaded.\r\n     */\r\n    try_highlight_selected = () => {\r\n        const entity = quest_editor_store.selected_entity!;\r\n        const mesh = this.renderer.get_entity_mesh(entity);\r\n\r\n        if (mesh) {\r\n            this.select({ entity, mesh });\r\n        }\r\n    };\r\n\r\n    on_mouse_down = (e: MouseEvent) => {\r\n        this.process_event(e);\r\n        this.stop_transforming();\r\n\r\n        const new_pick = this.pick_entity(this.renderer.pointer_pos_to_device_coords(e));\r\n\r\n        if (new_pick) {\r\n            // Disable camera controls while the user is transforming an entity.\r\n            this.renderer.controls.enabled = false;\r\n            this.pick = new_pick;\r\n            this.select(new_pick);\r\n        } else {\r\n            this.renderer.controls.enabled = true;\r\n            this.pick = undefined;\r\n        }\r\n\r\n        this.renderer.schedule_render();\r\n    };\r\n\r\n    on_mouse_up = (e: MouseEvent) => {\r\n        this.process_event(e);\r\n\r\n        if (!this.moved_since_last_mouse_down && !this.pick) {\r\n            // If the user clicks on nothing, deselect the currently selected entity.\r\n            this.deselect();\r\n        }\r\n\r\n        this.stop_transforming();\r\n        // Enable camera controls again after transforming an entity.\r\n        this.renderer.controls.enabled = true;\r\n\r\n        this.renderer.schedule_render();\r\n    };\r\n\r\n    on_mouse_move = (e: MouseEvent) => {\r\n        this.process_event(e);\r\n\r\n        const pointer_device_pos = this.renderer.pointer_pos_to_device_coords(e);\r\n\r\n        if (this.selected && this.pick) {\r\n            if (this.moved_since_last_mouse_down) {\r\n                if (e.buttons === 1) {\r\n                    // User is tranforming selected entity.\r\n                    // User is dragging selected entity.\r\n                    if (e.shiftKey) {\r\n                        // Vertical movement.\r\n                        this.translate_vertically(this.selected, this.pick, pointer_device_pos);\r\n                    } else {\r\n                        // Horizontal movement accross terrain.\r\n                        this.translate_horizontally(this.selected, this.pick, pointer_device_pos);\r\n                    }\r\n                }\r\n\r\n                this.renderer.schedule_render();\r\n            }\r\n        } else {\r\n            // User is hovering.\r\n            const new_pick = this.pick_entity(pointer_device_pos);\r\n\r\n            if (this.mark_hovered(new_pick)) {\r\n                this.renderer.schedule_render();\r\n            }\r\n        }\r\n    };\r\n\r\n    private process_event(e: MouseEvent): void {\r\n        if (e.type === \"mousedown\") {\r\n            this.moved_since_last_mouse_down = false;\r\n        } else {\r\n            if (\r\n                e.offsetX !== this.last_pointer_position.x ||\r\n                e.offsetY !== this.last_pointer_position.y\r\n            ) {\r\n                this.moved_since_last_mouse_down = true;\r\n            }\r\n        }\r\n\r\n        this.last_pointer_position.set(e.offsetX, e.offsetY);\r\n    }\r\n\r\n    /**\r\n     * @returns true if a render is required.\r\n     */\r\n    private mark_hovered(selection?: Highlighted): boolean {\r\n        let render_required = false;\r\n\r\n        if (!this.selected || !selection_equals(selection, this.selected)) {\r\n            if (!selection_equals(selection, this.hovered)) {\r\n                if (this.hovered) {\r\n                    set_color(this.hovered, ColorType.Normal);\r\n                    this.hovered = undefined;\r\n                }\r\n\r\n                if (selection) {\r\n                    set_color(selection, ColorType.Hovered);\r\n                }\r\n\r\n                render_required = true;\r\n            }\r\n\r\n            this.hovered = selection;\r\n        }\r\n\r\n        return render_required;\r\n    }\r\n\r\n    private select(selection: Highlighted): void {\r\n        if (selection_equals(selection, this.hovered)) {\r\n            this.hovered = undefined;\r\n        }\r\n\r\n        if (!selection_equals(selection, this.selected)) {\r\n            if (this.selected) {\r\n                set_color(this.selected, ColorType.Normal);\r\n            }\r\n\r\n            set_color(selection, ColorType.Selected);\r\n\r\n            this.selected = selection;\r\n            quest_editor_store.set_selected_entity(selection.entity);\r\n        } else {\r\n            this.selected = selection;\r\n        }\r\n    }\r\n\r\n    private deselect(): void {\r\n        if (this.selected) {\r\n            set_color(this.selected, ColorType.Normal);\r\n        }\r\n\r\n        this.selected = undefined;\r\n        quest_editor_store.set_selected_entity(undefined);\r\n    }\r\n\r\n    private translate_vertically(\r\n        selection: Highlighted,\r\n        pick: Pick,\r\n        pointer_position: Vector2\r\n    ): void {\r\n        // We intersect with a plane that's oriented toward the camera and that's coplanar with the point where the entity was grabbed.\r\n        this.raycaster.setFromCamera(pointer_position, this.renderer.camera);\r\n        const ray = this.raycaster.ray;\r\n\r\n        const negative_world_dir = this.renderer.camera.getWorldDirection(new Vector3()).negate();\r\n        const plane = new Plane().setFromNormalAndCoplanarPoint(\r\n            new Vector3(negative_world_dir.x, 0, negative_world_dir.z).normalize(),\r\n            selection.mesh.position.sub(pick.grab_offset)\r\n        );\r\n\r\n        const intersection_point = new Vector3();\r\n\r\n        if (ray.intersectPlane(plane, intersection_point)) {\r\n            const y = intersection_point.y + pick.grab_offset.y;\r\n            const y_delta = y - selection.entity.position.y;\r\n            pick.drag_y += y_delta;\r\n            pick.drag_adjust.y -= y_delta;\r\n            selection.entity.position = new Vec3(\r\n                selection.entity.position.x,\r\n                y,\r\n                selection.entity.position.z\r\n            );\r\n        }\r\n    }\r\n\r\n    private translate_horizontally(\r\n        selection: Highlighted,\r\n        pick: Pick,\r\n        pointer_position: Vector2\r\n    ): void {\r\n        // Cast ray adjusted for dragging entities.\r\n        const { intersection, section } = this.pick_terrain(pointer_position, pick);\r\n\r\n        if (intersection) {\r\n            selection.entity.set_position_and_section(\r\n                new Vec3(\r\n                    intersection.point.x,\r\n                    intersection.point.y + pick.drag_y,\r\n                    intersection.point.z\r\n                ),\r\n                section\r\n            );\r\n        } else {\r\n            // If the cursor is not over any terrain, we translate the entity accross the horizontal plane in which the entity's origin lies.\r\n            this.raycaster.setFromCamera(pointer_position, this.renderer.camera);\r\n            const ray = this.raycaster.ray;\r\n            // ray.origin.add(data.dragAdjust);\r\n            const plane = new Plane(\r\n                new Vector3(0, 1, 0),\r\n                -selection.entity.position.y + pick.grab_offset.y\r\n            );\r\n            const intersection_point = new Vector3();\r\n\r\n            if (ray.intersectPlane(plane, intersection_point)) {\r\n                selection.entity.position = new Vec3(\r\n                    intersection_point.x + pick.grab_offset.x,\r\n                    selection.entity.position.y,\r\n                    intersection_point.z + pick.grab_offset.z\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    private stop_transforming = () => {\r\n        if (this.moved_since_last_mouse_down && this.selected && this.pick) {\r\n            const entity = this.selected.entity;\r\n            const initial_position = this.pick.initial_position;\r\n            const new_position = entity.position;\r\n            const entity_type =\r\n                entity instanceof QuestNpc ? entity.type.name : (entity as QuestObject).type.name;\r\n\r\n            quest_editor_store.undo_stack.push_action(\r\n                `Move ${entity_type}`,\r\n                () => {\r\n                    entity.position = initial_position;\r\n                    quest_editor_store.set_selected_entity(entity);\r\n                },\r\n                () => {\r\n                    entity.position = new_position;\r\n                    quest_editor_store.set_selected_entity(entity);\r\n                }\r\n            );\r\n        }\r\n\r\n        this.pick = undefined;\r\n    };\r\n\r\n    /**\r\n     * @param pointer_position pointer coordinates in normalized device space\r\n     */\r\n    private pick_entity(pointer_position: Vector2): PickResult | undefined {\r\n        // Find the nearest object and NPC under the pointer.\r\n        this.raycaster.setFromCamera(pointer_position, this.renderer.camera);\r\n        const [intersection] = this.raycaster.intersectObjects(\r\n            this.renderer.entity_models.children\r\n        );\r\n\r\n        if (!intersection) {\r\n            return undefined;\r\n        }\r\n\r\n        const entity = (intersection.object.userData as EntityUserData).entity;\r\n        // Vector that points from the grabbing point to the model's origin.\r\n        const grab_offset = intersection.object.position.clone().sub(intersection.point);\r\n        // Vector that points from the grabbing point to the terrain point directly under the model's origin.\r\n        const drag_adjust = grab_offset.clone();\r\n        // Distance to terrain.\r\n        let drag_y = 0;\r\n\r\n        // Find vertical distance to terrain.\r\n        this.raycaster.set(intersection.object.position, DOWN_VECTOR);\r\n        const [collision_geom_intersection] = this.raycaster.intersectObjects(\r\n            this.renderer.collision_geometry.children,\r\n            true\r\n        );\r\n\r\n        if (collision_geom_intersection) {\r\n            drag_adjust.y -= collision_geom_intersection.distance;\r\n            drag_y += collision_geom_intersection.distance;\r\n        }\r\n\r\n        return {\r\n            mesh: intersection.object as Mesh,\r\n            entity,\r\n            initial_position: entity.position,\r\n            grab_offset,\r\n            drag_adjust,\r\n            drag_y,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @param pointer_pos - pointer coordinates in normalized device space\r\n     */\r\n    private pick_terrain(\r\n        pointer_pos: Vector2,\r\n        data: Pick\r\n    ): {\r\n        intersection?: Intersection;\r\n        section?: Section;\r\n    } {\r\n        this.raycaster.setFromCamera(pointer_pos, this.renderer.camera);\r\n        this.raycaster.ray.origin.add(data.drag_adjust);\r\n        const intersections = this.raycaster.intersectObjects(\r\n            this.renderer.collision_geometry.children,\r\n            true\r\n        );\r\n\r\n        // Don't allow entities to be placed on very steep terrain.\r\n        // E.g. walls.\r\n        // TODO: make use of the flags field in the collision data.\r\n        for (const intersection of intersections) {\r\n            if (intersection.face!.normal.y > 0.75) {\r\n                return {\r\n                    intersection,\r\n                    section: (intersection.object.userData as AreaUserData).section,\r\n                };\r\n            }\r\n        }\r\n\r\n        return {};\r\n    }\r\n}\r\n\r\nfunction set_color({ entity, mesh }: Highlighted, type: ColorType): void {\r\n    const color = entity instanceof QuestNpc ? NPC_COLORS[type] : OBJECT_COLORS[type];\r\n\r\n    if (mesh) {\r\n        if (Array.isArray(mesh.material)) {\r\n            for (const mat of mesh.material as MeshLambertMaterial[]) {\r\n                if (type === ColorType.Normal && mat.map) {\r\n                    mat.color.set(0xffffff);\r\n                } else {\r\n                    mat.color.set(color);\r\n                }\r\n            }\r\n        } else {\r\n            (mesh.material as MeshLambertMaterial).color.set(color);\r\n        }\r\n    }\r\n}\r\n\r\nfunction selection_equals(a?: Highlighted, b?: Highlighted): boolean {\r\n    return a && b ? a.entity === b.entity : a === b;\r\n}\r\n","import Logger from \"js-logger\";\r\nimport { Cursor } from \"../../cursor/Cursor\";\r\nimport { parse_iff } from \"../iff\";\r\n\r\nconst logger = Logger.get(\"data_formats/parsing/ninja/texture\");\r\n\r\nexport type Xvm = {\r\n    textures: XvmTexture[];\r\n};\r\n\r\nexport type XvmTexture = {\r\n    id: number;\r\n    format: [number, number];\r\n    width: number;\r\n    height: number;\r\n    size: number;\r\n    data: ArrayBuffer;\r\n};\r\n\r\ntype Header = {\r\n    texture_count: number;\r\n};\r\n\r\nconst XVMH = 0x484d5658;\r\nconst XVRT = 0x54525658;\r\n\r\nexport function parse_xvm(cursor: Cursor): Xvm {\r\n    const chunks = parse_iff(cursor);\r\n    const header_chunk = chunks.find(chunk => chunk.type === XVMH);\r\n    const header = header_chunk && parse_header(header_chunk.data);\r\n\r\n    const textures = chunks\r\n        .filter(chunk => chunk.type === XVRT)\r\n        .map(chunk => parse_texture(chunk.data));\r\n\r\n    if (!header) {\r\n        logger.warn(\"No header found.\");\r\n    } else if (header.texture_count !== textures.length) {\r\n        logger.warn(\r\n            `Found ${textures.length} textures instead of ${header.texture_count} as defined in the header.`\r\n        );\r\n    }\r\n\r\n    return { textures };\r\n}\r\n\r\nfunction parse_header(cursor: Cursor): Header {\r\n    const texture_count = cursor.u16();\r\n    return {\r\n        texture_count,\r\n    };\r\n}\r\n\r\nfunction parse_texture(cursor: Cursor): XvmTexture {\r\n    const format_1 = cursor.u32();\r\n    const format_2 = cursor.u32();\r\n    const id = cursor.u32();\r\n    const width = cursor.u16();\r\n    const height = cursor.u16();\r\n    const size = cursor.u32();\r\n    cursor.seek(36);\r\n    const data = cursor.array_buffer(size);\r\n    return {\r\n        id,\r\n        format: [format_1, format_2],\r\n        width,\r\n        height,\r\n        size,\r\n        data,\r\n    };\r\n}\r\n","import {\r\n    CompressedTexture,\r\n    LinearFilter,\r\n    MirroredRepeatWrapping,\r\n    RGBA_S3TC_DXT1_Format,\r\n    RGBA_S3TC_DXT3_Format,\r\n    Texture,\r\n    CompressedPixelFormat,\r\n} from \"three\";\r\nimport { Xvm, XvmTexture } from \"../../data_formats/parsing/ninja/texture\";\r\n\r\nexport function xvm_to_textures(xvm: Xvm): Texture[] {\r\n    return xvm.textures.map(xvm_texture_to_texture);\r\n}\r\n\r\nexport function xvm_texture_to_texture(tex: XvmTexture): Texture {\r\n    let format: CompressedPixelFormat;\r\n    let data_size: number;\r\n\r\n    // Ignore mipmaps.\r\n    switch (tex.format[1]) {\r\n        case 6:\r\n            format = RGBA_S3TC_DXT1_Format;\r\n            data_size = (tex.width * tex.height) / 2;\r\n            break;\r\n        case 7:\r\n            format = RGBA_S3TC_DXT3_Format;\r\n            data_size = tex.width * tex.height;\r\n            break;\r\n        default:\r\n            throw new Error(`Format ${tex.format.join(\", \")} not supported.`);\r\n    }\r\n\r\n    const texture_3js = new CompressedTexture(\r\n        [\r\n            {\r\n                data: new Uint8Array(tex.data, 0, data_size) as any,\r\n                width: tex.width,\r\n                height: tex.height,\r\n            },\r\n        ],\r\n        tex.width,\r\n        tex.height,\r\n        format\r\n    );\r\n\r\n    texture_3js.minFilter = LinearFilter;\r\n    texture_3js.wrapS = MirroredRepeatWrapping;\r\n    texture_3js.wrapT = MirroredRepeatWrapping;\r\n    texture_3js.needsUpdate = true;\r\n\r\n    return texture_3js;\r\n}\r\n","import { Texture, CylinderBufferGeometry, BufferGeometry } from \"three\";\r\nimport { ObjectType, NpcType } from \"../domain\";\r\nimport Logger from \"js-logger\";\r\nimport { LoadingCache } from \"./LoadingCache\";\r\nimport { Endianness } from \"../data_formats\";\r\nimport { ArrayBufferCursor } from \"../data_formats/cursor/ArrayBufferCursor\";\r\nimport { ninja_object_to_buffer_geometry } from \"../rendering/conversion/ninja_geometry\";\r\nimport { parse_nj, parse_xj } from \"../data_formats/parsing/ninja\";\r\nimport { parse_xvm } from \"../data_formats/parsing/ninja/texture\";\r\nimport { xvm_to_textures } from \"../rendering/conversion/ninja_textures\";\r\nimport { load_array_buffer } from \"./load_array_buffer\";\r\n\r\nconst logger = Logger.get(\"loading/entities\");\r\n\r\nconst DEFAULT_ENTITY = new CylinderBufferGeometry(3, 3, 20);\r\nDEFAULT_ENTITY.translate(0, 10, 0);\r\n\r\nconst DEFAULT_ENTITY_PROMISE: Promise<BufferGeometry> = new Promise(resolve =>\r\n    resolve(DEFAULT_ENTITY)\r\n);\r\n\r\nconst DEFAULT_ENTITY_TEX: Texture[] = [];\r\n\r\nconst DEFAULT_ENTITY_TEX_PROMISE: Promise<Texture[]> = new Promise(resolve =>\r\n    resolve(DEFAULT_ENTITY_TEX)\r\n);\r\n\r\nconst npc_cache = new LoadingCache<NpcType, Promise<BufferGeometry>>();\r\nnpc_cache.set(NpcType.Unknown, DEFAULT_ENTITY_PROMISE);\r\n\r\nconst npc_tex_cache = new LoadingCache<NpcType, Promise<Texture[]>>();\r\nnpc_tex_cache.set(NpcType.Unknown, DEFAULT_ENTITY_TEX_PROMISE);\r\n\r\nconst object_cache = new LoadingCache<ObjectType, Promise<BufferGeometry>>();\r\nconst object_tex_cache = new LoadingCache<ObjectType, Promise<Texture[]>>();\r\n\r\nfor (const type of [\r\n    ObjectType.Unknown,\r\n    ObjectType.PlayerSet,\r\n    ObjectType.FogCollision,\r\n    ObjectType.EventCollision,\r\n    ObjectType.ObjRoomID,\r\n    ObjectType.ScriptCollision,\r\n    ObjectType.ItemLight,\r\n    ObjectType.FogCollisionSW,\r\n    ObjectType.MenuActivation,\r\n    ObjectType.BoxDetectObject,\r\n    ObjectType.SymbolChatObject,\r\n    ObjectType.TouchPlateObject,\r\n    ObjectType.TargetableObject,\r\n    ObjectType.EffectObject,\r\n    ObjectType.CountDownObject,\r\n    ObjectType.TelepipeLocation,\r\n    ObjectType.Pioneer2InvisibleTouchplate,\r\n    ObjectType.TempleMapDetect,\r\n    ObjectType.LabInvisibleObject,\r\n]) {\r\n    object_cache.set(type, DEFAULT_ENTITY_PROMISE);\r\n    object_tex_cache.set(type, DEFAULT_ENTITY_TEX_PROMISE);\r\n}\r\n\r\nexport async function load_npc_geometry(npc_type: NpcType): Promise<BufferGeometry> {\r\n    return npc_cache.get_or_set(npc_type, async () => {\r\n        try {\r\n            const { url, data } = await load_npc_data(npc_type, AssetType.Geometry);\r\n            const cursor = new ArrayBufferCursor(data, Endianness.Little);\r\n            const nj_objects = url.endsWith(\".nj\") ? parse_nj(cursor) : parse_xj(cursor);\r\n\r\n            if (nj_objects.length) {\r\n                return ninja_object_to_buffer_geometry(nj_objects[0]);\r\n            } else {\r\n                logger.warn(`Couldn't parse ${url} for ${npc_type.code}.`);\r\n                return DEFAULT_ENTITY;\r\n            }\r\n        } catch (e) {\r\n            logger.warn(`Couldn't load geometry file for ${npc_type.code}.`, e);\r\n            return DEFAULT_ENTITY;\r\n        }\r\n    });\r\n}\r\n\r\nexport async function load_npc_tex(npc_type: NpcType): Promise<Texture[]> {\r\n    return npc_tex_cache.get_or_set(npc_type, async () => {\r\n        try {\r\n            const { data } = await load_npc_data(npc_type, AssetType.Texture);\r\n            const cursor = new ArrayBufferCursor(data, Endianness.Little);\r\n            const xvm = parse_xvm(cursor);\r\n            return xvm_to_textures(xvm);\r\n        } catch (e) {\r\n            logger.warn(`Couldn't load texture file for ${npc_type.code}.`, e);\r\n            return DEFAULT_ENTITY_TEX;\r\n        }\r\n    });\r\n}\r\n\r\nexport async function load_object_geometry(object_type: ObjectType): Promise<BufferGeometry> {\r\n    return object_cache.get_or_set(object_type, async () => {\r\n        try {\r\n            const { url, data } = await load_object_data(object_type, AssetType.Geometry);\r\n            const cursor = new ArrayBufferCursor(data, Endianness.Little);\r\n            const nj_objects = url.endsWith(\".nj\") ? parse_nj(cursor) : parse_xj(cursor);\r\n\r\n            if (nj_objects.length) {\r\n                return ninja_object_to_buffer_geometry(nj_objects[0]);\r\n            } else {\r\n                logger.warn(`Couldn't parse ${url} for ${object_type.name}.`);\r\n                return DEFAULT_ENTITY;\r\n            }\r\n        } catch (e) {\r\n            logger.warn(`Couldn't load geometry file for ${object_type.name}.`, e);\r\n            return DEFAULT_ENTITY;\r\n        }\r\n    });\r\n}\r\n\r\nexport async function load_object_tex(object_type: ObjectType): Promise<Texture[]> {\r\n    return object_tex_cache.get_or_set(object_type, async () => {\r\n        try {\r\n            const { data } = await load_object_data(object_type, AssetType.Texture);\r\n            const cursor = new ArrayBufferCursor(data, Endianness.Little);\r\n            const xvm = parse_xvm(cursor);\r\n            return xvm_to_textures(xvm);\r\n        } catch (e) {\r\n            logger.warn(`Couldn't load texture file for ${object_type.name}.`, e);\r\n            return DEFAULT_ENTITY_TEX;\r\n        }\r\n    });\r\n}\r\n\r\nexport async function load_npc_data(\r\n    npc_type: NpcType,\r\n    type: AssetType\r\n): Promise<{ url: string; data: ArrayBuffer }> {\r\n    const url = npc_type_to_url(npc_type, type);\r\n    const data = await load_array_buffer(url);\r\n    return { url, data };\r\n}\r\n\r\nexport async function load_object_data(\r\n    object_type: ObjectType,\r\n    type: AssetType\r\n): Promise<{ url: string; data: ArrayBuffer }> {\r\n    const url = object_type_to_url(object_type, type);\r\n    const data = await load_array_buffer(url);\r\n    return { url, data };\r\n}\r\n\r\nenum AssetType {\r\n    Geometry,\r\n    Texture,\r\n}\r\n\r\nfunction npc_type_to_url(npc_type: NpcType, type: AssetType): string {\r\n    switch (npc_type) {\r\n        // The dubswitch model is in XJ format.\r\n        case NpcType.Dubswitch:\r\n            return `/npcs/${npc_type.code}.${type === AssetType.Geometry ? \"xj\" : \"xvm\"}`;\r\n\r\n        // Episode II VR Temple\r\n\r\n        case NpcType.Hildebear2:\r\n            return npc_type_to_url(NpcType.Hildebear, type);\r\n        case NpcType.Hildeblue2:\r\n            return npc_type_to_url(NpcType.Hildeblue, type);\r\n        case NpcType.RagRappy2:\r\n            return npc_type_to_url(NpcType.RagRappy, type);\r\n        case NpcType.Monest2:\r\n            return npc_type_to_url(NpcType.Monest, type);\r\n        case NpcType.PoisonLily2:\r\n            return npc_type_to_url(NpcType.PoisonLily, type);\r\n        case NpcType.NarLily2:\r\n            return npc_type_to_url(NpcType.NarLily, type);\r\n        case NpcType.GrassAssassin2:\r\n            return npc_type_to_url(NpcType.GrassAssassin, type);\r\n        case NpcType.Dimenian2:\r\n            return npc_type_to_url(NpcType.Dimenian, type);\r\n        case NpcType.LaDimenian2:\r\n            return npc_type_to_url(NpcType.LaDimenian, type);\r\n        case NpcType.SoDimenian2:\r\n            return npc_type_to_url(NpcType.SoDimenian, type);\r\n        case NpcType.DarkBelra2:\r\n            return npc_type_to_url(NpcType.DarkBelra, type);\r\n\r\n        // Episode II VR Spaceship\r\n\r\n        case NpcType.SavageWolf2:\r\n            return npc_type_to_url(NpcType.SavageWolf, type);\r\n        case NpcType.BarbarousWolf2:\r\n            return npc_type_to_url(NpcType.BarbarousWolf, type);\r\n        case NpcType.PanArms2:\r\n            return npc_type_to_url(NpcType.PanArms, type);\r\n        case NpcType.Dubchic2:\r\n            return npc_type_to_url(NpcType.Dubchic, type);\r\n        case NpcType.Gilchic2:\r\n            return npc_type_to_url(NpcType.Gilchic, type);\r\n        case NpcType.Garanz2:\r\n            return npc_type_to_url(NpcType.Garanz, type);\r\n        case NpcType.Dubswitch2:\r\n            return npc_type_to_url(NpcType.Dubswitch, type);\r\n        case NpcType.Delsaber2:\r\n            return npc_type_to_url(NpcType.Delsaber, type);\r\n        case NpcType.ChaosSorcerer2:\r\n            return npc_type_to_url(NpcType.ChaosSorcerer, type);\r\n\r\n        default:\r\n            return `/npcs/${npc_type.code}.${type === AssetType.Geometry ? \"nj\" : \"xvm\"}`;\r\n    }\r\n}\r\n\r\nfunction object_type_to_url(object_type: ObjectType, type: AssetType): string {\r\n    if (type === AssetType.Geometry) {\r\n        switch (object_type) {\r\n            case ObjectType.EasterEgg:\r\n            case ObjectType.ChristmasTree:\r\n            case ObjectType.ChristmasWreath:\r\n            case ObjectType.TwentyFirstCentury:\r\n            case ObjectType.Sonic:\r\n            case ObjectType.WelcomeBoard:\r\n            case ObjectType.FloatingJelifish:\r\n            case ObjectType.RuinsSeal:\r\n            case ObjectType.Dolphin:\r\n            case ObjectType.Cacti:\r\n            case ObjectType.BigBrownRock:\r\n            case ObjectType.PoisonPlant:\r\n            case ObjectType.BigBlackRocks:\r\n            case ObjectType.FallingRock:\r\n            case ObjectType.DesertFixedTypeBoxBreakableCrystals:\r\n            case ObjectType.BeeHive:\r\n                return `/objects/${object_type.pso_id}.nj`;\r\n\r\n            default:\r\n                return `/objects/${object_type.pso_id}.xj`;\r\n        }\r\n    } else {\r\n        return `/objects/${object_type.pso_id}.xvm`;\r\n    }\r\n}\r\n","import Logger from \"js-logger\";\r\nimport { autorun, IReactionDisposer } from \"mobx\";\r\nimport { Mesh, Object3D, Vector3, Raycaster, Intersection } from \"three\";\r\nimport { Area, Quest, QuestEntity } from \"../domain\";\r\nimport { load_area_collision_geometry, load_area_render_geometry } from \"../loading/areas\";\r\nimport {\r\n    load_npc_geometry,\r\n    load_npc_tex as load_npc_textures,\r\n    load_object_geometry,\r\n    load_object_tex as load_object_textures,\r\n} from \"../loading/entities\";\r\nimport { create_npc_mesh, create_object_mesh } from \"./conversion/entities\";\r\nimport { QuestRenderer } from \"./QuestRenderer\";\r\nimport { AreaUserData } from \"./conversion/areas\";\r\n\r\nconst logger = Logger.get(\"rendering/QuestModelManager\");\r\n\r\nconst CAMERA_POSITION = new Vector3(0, 800, 700);\r\nconst CAMERA_LOOKAT = new Vector3(0, 0, 0);\r\nconst DUMMY_OBJECT = new Object3D();\r\n\r\nexport class QuestModelManager {\r\n    private quest?: Quest;\r\n    private area?: Area;\r\n    private entity_reaction_disposers: IReactionDisposer[] = [];\r\n\r\n    constructor(private renderer: QuestRenderer) {}\r\n\r\n    async load_models(quest?: Quest, area?: Area): Promise<void> {\r\n        if (this.quest === quest && this.area === area) {\r\n            return;\r\n        }\r\n\r\n        this.quest = quest;\r\n        this.area = area;\r\n\r\n        this.dispose_entity_reactions();\r\n\r\n        if (quest && area) {\r\n            try {\r\n                // Load necessary area geometry.\r\n                const episode = quest.episode;\r\n                const area_id = area.id;\r\n                const variant = quest.area_variants.find(v => v.area.id === area_id);\r\n                const variant_id = (variant && variant.id) || 0;\r\n\r\n                const collision_geometry = await load_area_collision_geometry(\r\n                    episode,\r\n                    area_id,\r\n                    variant_id\r\n                );\r\n\r\n                const render_geometry = await load_area_render_geometry(\r\n                    episode,\r\n                    area_id,\r\n                    variant_id\r\n                );\r\n\r\n                this.add_sections_to_collision_geometry(collision_geometry, render_geometry);\r\n\r\n                if (this.quest !== quest || this.area !== area) return;\r\n\r\n                this.renderer.collision_geometry = collision_geometry;\r\n                this.renderer.render_geometry = render_geometry;\r\n\r\n                this.renderer.reset_camera(CAMERA_POSITION, CAMERA_LOOKAT);\r\n\r\n                // Load entity models.\r\n                this.renderer.reset_entity_models();\r\n\r\n                for (const npc of quest.npcs) {\r\n                    if (npc.area_id === area.id) {\r\n                        const npc_geom = await load_npc_geometry(npc.type);\r\n                        const npc_tex = await load_npc_textures(npc.type);\r\n\r\n                        if (this.quest !== quest || this.area !== area) return;\r\n\r\n                        const model = create_npc_mesh(npc, npc_geom, npc_tex);\r\n                        this.update_entity_geometry(npc, model);\r\n                    }\r\n                }\r\n\r\n                for (const object of quest.objects) {\r\n                    if (object.area_id === area.id) {\r\n                        const object_geom = await load_object_geometry(object.type);\r\n                        const object_tex = await load_object_textures(object.type);\r\n\r\n                        if (this.quest !== quest || this.area !== area) return;\r\n\r\n                        const model = create_object_mesh(object, object_geom, object_tex);\r\n                        this.update_entity_geometry(object, model);\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                logger.error(`Couldn't load models for quest ${quest.id}, ${area.name}.`, e);\r\n                this.renderer.collision_geometry = DUMMY_OBJECT;\r\n                this.renderer.render_geometry = DUMMY_OBJECT;\r\n                this.renderer.reset_entity_models();\r\n            }\r\n        } else {\r\n            this.renderer.collision_geometry = DUMMY_OBJECT;\r\n            this.renderer.render_geometry = DUMMY_OBJECT;\r\n            this.renderer.reset_entity_models();\r\n        }\r\n    }\r\n\r\n    private add_sections_to_collision_geometry(\r\n        collision_geom: Object3D,\r\n        render_geom: Object3D\r\n    ): void {\r\n        const raycaster = new Raycaster();\r\n        const origin = new Vector3();\r\n        const down = new Vector3(0, -1, 0);\r\n        const up = new Vector3(0, 1, 0);\r\n\r\n        for (const collision_area of collision_geom.children) {\r\n            (collision_area as Mesh).geometry.boundingBox.getCenter(origin);\r\n\r\n            raycaster.set(origin, down);\r\n            const intersection1 = raycaster\r\n                .intersectObject(render_geom, true)\r\n                .find(i => (i.object.userData as AreaUserData).section != null);\r\n\r\n            raycaster.set(origin, up);\r\n            const intersection2 = raycaster\r\n                .intersectObject(render_geom, true)\r\n                .find(i => (i.object.userData as AreaUserData).section != null);\r\n\r\n            let intersection: Intersection | undefined;\r\n\r\n            if (intersection1 && intersection2) {\r\n                intersection =\r\n                    intersection1.distance <= intersection2.distance\r\n                        ? intersection1\r\n                        : intersection2;\r\n            } else {\r\n                intersection = intersection1 || intersection2;\r\n            }\r\n\r\n            if (intersection) {\r\n                const cud = collision_area.userData as AreaUserData;\r\n                const rud = intersection.object.userData as AreaUserData;\r\n                cud.section = rud.section;\r\n            }\r\n        }\r\n    }\r\n\r\n    private update_entity_geometry(entity: QuestEntity, model: Mesh): void {\r\n        this.renderer.add_entity_model(model);\r\n\r\n        this.entity_reaction_disposers.push(\r\n            autorun(() => {\r\n                const { x, y, z } = entity.position;\r\n                model.position.set(x, y, z);\r\n                const rot = entity.rotation;\r\n                model.rotation.set(rot.x, rot.y, rot.z);\r\n                this.renderer.schedule_render();\r\n            })\r\n        );\r\n    }\r\n\r\n    private dispose_entity_reactions(): void {\r\n        for (const disposer of this.entity_reaction_disposers) {\r\n            disposer();\r\n        }\r\n    }\r\n}\r\n","import { autorun } from \"mobx\";\r\nimport { Mesh, Object3D, PerspectiveCamera, Group } from \"three\";\r\nimport { QuestEntity } from \"../domain\";\r\nimport { quest_editor_store } from \"../stores/QuestEditorStore\";\r\nimport { QuestEntityControls } from \"./QuestEntityControls\";\r\nimport { QuestModelManager } from \"./QuestModelManager\";\r\nimport { Renderer } from \"./Renderer\";\r\nimport { EntityUserData } from \"./conversion/entities\";\r\n\r\nlet renderer: QuestRenderer | undefined;\r\n\r\nexport function get_quest_renderer(): QuestRenderer {\r\n    if (!renderer) renderer = new QuestRenderer();\r\n    return renderer;\r\n}\r\n\r\nexport class QuestRenderer extends Renderer<PerspectiveCamera> {\r\n    get debug(): boolean {\r\n        return this._debug;\r\n    }\r\n\r\n    set debug(debug: boolean) {\r\n        if (this._debug !== debug) {\r\n            this._debug = debug;\r\n            this._render_geometry.visible = debug;\r\n            this.schedule_render();\r\n        }\r\n    }\r\n\r\n    private _collision_geometry = new Object3D();\r\n\r\n    get collision_geometry(): Object3D {\r\n        return this._collision_geometry;\r\n    }\r\n\r\n    set collision_geometry(collision_geometry: Object3D) {\r\n        this.scene.remove(this.collision_geometry);\r\n        this._collision_geometry = collision_geometry;\r\n        this.scene.add(collision_geometry);\r\n    }\r\n\r\n    private _render_geometry = new Object3D();\r\n\r\n    get render_geometry(): Object3D {\r\n        return this._render_geometry;\r\n    }\r\n\r\n    set render_geometry(render_geometry: Object3D) {\r\n        this.scene.remove(this._render_geometry);\r\n        this._render_geometry = render_geometry;\r\n        render_geometry.visible = this.debug;\r\n        this.scene.add(render_geometry);\r\n    }\r\n\r\n    private _entity_models = new Object3D();\r\n\r\n    get entity_models(): Object3D {\r\n        return this._entity_models;\r\n    }\r\n\r\n    private entity_to_mesh = new Map<QuestEntity, Mesh>();\r\n    private entity_controls: QuestEntityControls;\r\n\r\n    constructor() {\r\n        super(new PerspectiveCamera(60, 1, 10, 10000));\r\n\r\n        const model_manager = new QuestModelManager(this);\r\n\r\n        autorun(() => {\r\n            model_manager.load_models(\r\n                quest_editor_store.current_quest,\r\n                quest_editor_store.current_area\r\n            );\r\n        });\r\n\r\n        this.entity_controls = new QuestEntityControls(this);\r\n\r\n        this.dom_element.addEventListener(\"mousedown\", this.entity_controls.on_mouse_down);\r\n        this.dom_element.addEventListener(\"mouseup\", this.entity_controls.on_mouse_up);\r\n        this.dom_element.addEventListener(\"mousemove\", this.entity_controls.on_mouse_move);\r\n    }\r\n\r\n    set_size(width: number, height: number): void {\r\n        this.camera.aspect = width / height;\r\n        this.camera.updateProjectionMatrix();\r\n        super.set_size(width, height);\r\n    }\r\n\r\n    reset_entity_models(): void {\r\n        this.scene.remove(this._entity_models);\r\n        this._entity_models = new Group();\r\n        this.scene.add(this._entity_models);\r\n        this.entity_to_mesh.clear();\r\n    }\r\n\r\n    add_entity_model(model: Mesh): void {\r\n        const entity = (model.userData as EntityUserData).entity;\r\n        this._entity_models.add(model);\r\n        this.entity_to_mesh.set(entity, model);\r\n\r\n        if (entity === quest_editor_store.selected_entity) {\r\n            this.entity_controls.try_highlight_selected();\r\n        }\r\n    }\r\n\r\n    get_entity_mesh(entity: QuestEntity): Mesh | undefined {\r\n        return this.entity_to_mesh.get(entity);\r\n    }\r\n}\r\n","import * as THREE from \"three\";\r\nimport {\r\n    Camera,\r\n    Color,\r\n    Group,\r\n    HemisphereLight,\r\n    MOUSE,\r\n    Scene,\r\n    Vector2,\r\n    Vector3,\r\n    WebGLRenderer,\r\n} from \"three\";\r\nimport OrbitControlsCreator from \"three-orbit-controls\";\r\n\r\nconst OrbitControls = OrbitControlsCreator(THREE);\r\n\r\nexport class Renderer<C extends Camera> {\r\n    protected _debug = false;\r\n\r\n    get debug(): boolean {\r\n        return this._debug;\r\n    }\r\n\r\n    set debug(debug: boolean) {\r\n        this._debug = debug;\r\n    }\r\n\r\n    readonly camera: C;\r\n    readonly controls: any;\r\n    readonly scene = new Scene();\r\n    readonly light_holder = new Group();\r\n\r\n    private renderer = new WebGLRenderer({ antialias: true });\r\n    private render_scheduled = false;\r\n    private light = new HemisphereLight(0xffffff, 0x505050, 1.2);\r\n\r\n    constructor(camera: C) {\r\n        this.camera = camera;\r\n\r\n        this.controls = new OrbitControls(camera, this.dom_element);\r\n        this.controls.mouseButtons.ORBIT = MOUSE.RIGHT;\r\n        this.controls.mouseButtons.PAN = MOUSE.LEFT;\r\n        this.controls.addEventListener(\"change\", this.schedule_render);\r\n\r\n        this.scene.background = new Color(0x151c21);\r\n        this.light_holder.add(this.light);\r\n        this.scene.add(this.light_holder);\r\n\r\n        this.renderer.setPixelRatio(window.devicePixelRatio);\r\n    }\r\n\r\n    get dom_element(): HTMLElement {\r\n        return this.renderer.domElement;\r\n    }\r\n\r\n    set_size(width: number, height: number): void {\r\n        this.renderer.setSize(width, height);\r\n        this.schedule_render();\r\n    }\r\n\r\n    pointer_pos_to_device_coords(e: MouseEvent): Vector2 {\r\n        const coords = this.renderer.getSize(new Vector2());\r\n        coords.width = (e.offsetX / coords.width) * 2 - 1;\r\n        coords.height = (e.offsetY / coords.height) * -2 + 1;\r\n        return coords;\r\n    }\r\n\r\n    schedule_render = () => {\r\n        if (!this.render_scheduled) {\r\n            this.render_scheduled = true;\r\n            requestAnimationFrame(this.call_render);\r\n        }\r\n    };\r\n\r\n    reset_camera(position: Vector3, look_at: Vector3): void {\r\n        this.controls.reset();\r\n        this.camera.position.copy(position);\r\n        this.camera.lookAt(look_at);\r\n    }\r\n\r\n    protected render(): void {\r\n        this.renderer.render(this.scene, this.camera);\r\n    }\r\n\r\n    private call_render = () => {\r\n        this.render_scheduled = false;\r\n        this.render();\r\n    };\r\n}\r\n","import { ANGLE_TO_RAD } from \".\";\r\nimport { Cursor } from \"../../cursor/Cursor\";\r\nimport { Vec3 } from \"../../vector\";\r\n\r\nconst NMDM = 0x4d444d4e;\r\n\r\nexport type NjMotion = {\r\n    motion_data: NjMotionData[];\r\n    frame_count: number;\r\n    type: number;\r\n    interpolation: NjInterpolation;\r\n    element_count: number;\r\n};\r\n\r\nexport enum NjInterpolation {\r\n    Linear,\r\n    Spline,\r\n    UserFunction,\r\n}\r\n\r\nexport type NjMotionData = {\r\n    tracks: NjKeyframeTrack[];\r\n};\r\n\r\nexport enum NjKeyframeTrackType {\r\n    Position,\r\n    Rotation,\r\n    Scale,\r\n}\r\n\r\nexport type NjKeyframeTrack =\r\n    | NjKeyframeTrackPosition\r\n    | NjKeyframeTrackRotation\r\n    | NjKeyframeTrackScale;\r\n\r\nexport type NjKeyframeTrackPosition = {\r\n    type: NjKeyframeTrackType.Position;\r\n    keyframes: NjKeyframeF[];\r\n};\r\n\r\nexport type NjKeyframeTrackRotation = {\r\n    type: NjKeyframeTrackType.Rotation;\r\n    keyframes: NjKeyframeA[];\r\n};\r\n\r\nexport type NjKeyframeTrackScale = {\r\n    type: NjKeyframeTrackType.Scale;\r\n    keyframes: NjKeyframeF[];\r\n};\r\n\r\nexport type NjKeyframe = NjKeyframeF | NjKeyframeA;\r\n\r\n/**\r\n * Used for parallel motion (POS), scale (SCL) and vector (VEC).\r\n */\r\nexport type NjKeyframeF = {\r\n    frame: number;\r\n    value: Vec3;\r\n};\r\n\r\n/**\r\n * Used for rotation (ANG).\r\n */\r\nexport type NjKeyframeA = {\r\n    frame: number;\r\n    value: Vec3; // Euler angles in radians.\r\n};\r\n\r\nexport function parse_njm(cursor: Cursor, bone_count: number): NjMotion {\r\n    if (cursor.u32() === NMDM) {\r\n        return parse_njm_v2(cursor, bone_count);\r\n    } else {\r\n        cursor.seek_start(0);\r\n        return parse_njm_bb(cursor, bone_count);\r\n    }\r\n}\r\n\r\n/**\r\n * Format used by PSO v2 and for the enemies in PSO:BB.\r\n */\r\nfunction parse_njm_v2(cursor: Cursor, bone_count: number): NjMotion {\r\n    const chunk_size = cursor.u32();\r\n    return parse_motion(cursor.take(chunk_size), bone_count);\r\n}\r\n\r\n/**\r\n * Format used by PSO:BB plymotiondata.rlc.\r\n */\r\nfunction parse_njm_bb(cursor: Cursor, bone_count: number): NjMotion {\r\n    cursor.seek_end(16);\r\n    const offset1 = cursor.u32();\r\n    cursor.seek_start(offset1);\r\n    const action_offset = cursor.u32();\r\n    cursor.seek_start(action_offset);\r\n    return parse_action(cursor, bone_count);\r\n}\r\n\r\nfunction parse_action(cursor: Cursor, bone_count: number): NjMotion {\r\n    cursor.seek(4); // Object pointer placeholder.\r\n    const motion_offset = cursor.u32();\r\n    cursor.seek_start(motion_offset);\r\n    return parse_motion(cursor, bone_count);\r\n}\r\n\r\nfunction parse_motion(cursor: Cursor, bone_count: number): NjMotion {\r\n    // Points to an array the size of bone_count.\r\n    let mdata_offset = cursor.u32();\r\n    const frame_count = cursor.u32();\r\n    const type = cursor.u16();\r\n    const inp_fn = cursor.u16();\r\n    // Linear, spline or user function.\r\n    const interpolation: NjInterpolation = (inp_fn & 0b11000000) >> 6;\r\n    const element_count = inp_fn & 0b1111;\r\n    const motion_data_list = [];\r\n\r\n    for (let i = 0; i < bone_count; i++) {\r\n        cursor.seek_start(mdata_offset);\r\n        mdata_offset = mdata_offset += 8 * element_count;\r\n\r\n        let motion_data: NjMotionData = {\r\n            tracks: [],\r\n        };\r\n        motion_data_list.push(motion_data);\r\n\r\n        const keyframe_offsets: number[] = [];\r\n        const keyframe_counts: number[] = [];\r\n\r\n        for (let j = 0; j < element_count; j++) {\r\n            keyframe_offsets.push(cursor.u32());\r\n        }\r\n\r\n        for (let j = 0; j < element_count; j++) {\r\n            const count = cursor.u32();\r\n            keyframe_counts.push(count);\r\n        }\r\n\r\n        // NJD_MTYPE_POS_0\r\n        if (type & (1 << 0)) {\r\n            cursor.seek_start(keyframe_offsets.shift()!);\r\n            const count = keyframe_counts.shift();\r\n\r\n            if (count) {\r\n                motion_data.tracks.push({\r\n                    type: NjKeyframeTrackType.Position,\r\n                    keyframes: parse_motion_data_f(cursor, count),\r\n                });\r\n            }\r\n        }\r\n\r\n        // NJD_MTYPE_ANG_1\r\n        if (type & (1 << 1)) {\r\n            cursor.seek_start(keyframe_offsets.shift()!);\r\n            const count = keyframe_counts.shift();\r\n\r\n            if (count) {\r\n                motion_data.tracks.push({\r\n                    type: NjKeyframeTrackType.Rotation,\r\n                    keyframes: parse_motion_data_a(cursor, count, frame_count),\r\n                });\r\n            }\r\n        }\r\n\r\n        // NJD_MTYPE_SCL_2\r\n        if (type & (1 << 2)) {\r\n            cursor.seek_start(keyframe_offsets.shift()!);\r\n            const count = keyframe_counts.shift();\r\n\r\n            if (count) {\r\n                motion_data.tracks.push({\r\n                    type: NjKeyframeTrackType.Scale,\r\n                    keyframes: parse_motion_data_f(cursor, count),\r\n                });\r\n            }\r\n        }\r\n\r\n        // TODO: all NJD_MTYPE's\r\n    }\r\n\r\n    return {\r\n        motion_data: motion_data_list,\r\n        frame_count,\r\n        type,\r\n        interpolation,\r\n        element_count,\r\n    };\r\n}\r\n\r\nfunction parse_motion_data_f(cursor: Cursor, count: number): NjKeyframeF[] {\r\n    const frames: NjKeyframeF[] = [];\r\n\r\n    for (let i = 0; i < count; ++i) {\r\n        frames.push({\r\n            frame: cursor.u32(),\r\n            value: new Vec3(cursor.f32(), cursor.f32(), cursor.f32()),\r\n        });\r\n    }\r\n\r\n    return frames;\r\n}\r\n\r\nfunction parse_motion_data_a(\r\n    cursor: Cursor,\r\n    keyframe_count: number,\r\n    frame_count: number\r\n): NjKeyframeA[] {\r\n    const frames: NjKeyframeA[] = [];\r\n    const start_pos = cursor.position;\r\n\r\n    for (let i = 0; i < keyframe_count; ++i) {\r\n        frames.push({\r\n            frame: cursor.u16(),\r\n            value: new Vec3(\r\n                cursor.u16() * ANGLE_TO_RAD,\r\n                cursor.u16() * ANGLE_TO_RAD,\r\n                cursor.u16() * ANGLE_TO_RAD\r\n            ),\r\n        });\r\n    }\r\n\r\n    let prev = -1;\r\n\r\n    for (const { frame } of frames) {\r\n        if (frame < prev || frame >= frame_count) {\r\n            cursor.seek_start(start_pos);\r\n            return parse_motion_data_a_wide(cursor, keyframe_count);\r\n        }\r\n\r\n        prev = frame;\r\n    }\r\n\r\n    return frames;\r\n}\r\n\r\nfunction parse_motion_data_a_wide(cursor: Cursor, keyframe_count: number): NjKeyframeA[] {\r\n    const frames: NjKeyframeA[] = [];\r\n\r\n    for (let i = 0; i < keyframe_count; ++i) {\r\n        frames.push({\r\n            frame: cursor.u32(),\r\n            value: new Vec3(\r\n                cursor.i32() * ANGLE_TO_RAD,\r\n                cursor.i32() * ANGLE_TO_RAD,\r\n                cursor.i32() * ANGLE_TO_RAD\r\n            ),\r\n        });\r\n    }\r\n\r\n    return frames;\r\n}\r\n","import { Button, Form, Icon, Input, Modal, Select, Upload } from \"antd\";\r\nimport { UploadChangeParam } from \"antd/lib/upload\";\r\nimport { UploadFile } from \"antd/lib/upload/interface\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { ChangeEvent, ReactNode, Component } from \"react\";\r\nimport { quest_editor_store } from \"../../stores/QuestEditorStore\";\r\nimport { EntityInfoComponent } from \"./EntityInfoComponent\";\r\nimport \"./QuestEditorComponent.css\";\r\nimport { QuestInfoComponent } from \"./QuestInfoComponent\";\r\nimport { RendererComponent } from \"../RendererComponent\";\r\nimport { get_quest_renderer } from \"../../rendering/QuestRenderer\";\r\nimport { application_store } from \"../../stores/ApplicationStore\";\r\n\r\n@observer\r\nexport class QuestEditorComponent extends Component<\r\n    {},\r\n    {\r\n        debug: boolean;\r\n        filename?: string;\r\n        save_dialog_open: boolean;\r\n        save_dialog_filename: string;\r\n    }\r\n> {\r\n    state = {\r\n        debug: false,\r\n        save_dialog_open: false,\r\n        save_dialog_filename: \"Untitled\",\r\n    };\r\n\r\n    componentDidMount(): void {\r\n        application_store.on_global_keyup(\"quest_editor\", this.keyup);\r\n    }\r\n\r\n    render(): ReactNode {\r\n        const quest = quest_editor_store.current_quest;\r\n\r\n        return (\r\n            <div className=\"qe-QuestEditorComponent\">\r\n                <Toolbar on_save_as_clicked={this.save_as_clicked} />\r\n                <div className=\"qe-QuestEditorComponent-main\">\r\n                    <QuestInfoComponent quest={quest} />\r\n                    <RendererComponent renderer={get_quest_renderer()} debug={this.state.debug} />\r\n                    <EntityInfoComponent entity={quest_editor_store.selected_entity} />\r\n                </div>\r\n                <SaveAsForm\r\n                    is_open={this.state.save_dialog_open}\r\n                    filename={this.state.save_dialog_filename}\r\n                    on_filename_change={this.save_dialog_filename_changed}\r\n                    on_ok={this.save_dialog_affirmed}\r\n                    on_cancel={this.save_dialog_cancelled}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private save_as_clicked = (filename?: string) => {\r\n        const name = filename\r\n            ? filename.endsWith(\".qst\")\r\n                ? filename.slice(0, -4)\r\n                : filename\r\n            : this.state.save_dialog_filename;\r\n\r\n        this.setState({\r\n            save_dialog_open: true,\r\n            save_dialog_filename: name,\r\n        });\r\n    };\r\n\r\n    private save_dialog_filename_changed = (filename: string) => {\r\n        this.setState({ save_dialog_filename: filename });\r\n    };\r\n\r\n    private save_dialog_affirmed = () => {\r\n        quest_editor_store.save_current_quest_to_file(this.state.save_dialog_filename);\r\n        this.setState({ save_dialog_open: false });\r\n    };\r\n\r\n    private save_dialog_cancelled = () => {\r\n        this.setState({ save_dialog_open: false });\r\n    };\r\n\r\n    private keyup = (e: KeyboardEvent) => {\r\n        if (e.ctrlKey && e.key === \"z\" && !e.altKey) {\r\n            quest_editor_store.undo_stack.undo();\r\n        } else if (e.ctrlKey && e.key === \"Z\" && !e.altKey) {\r\n            quest_editor_store.undo_stack.redo();\r\n        } else if (e.ctrlKey && e.altKey && e.key === \"d\") {\r\n            this.setState(state => ({ debug: !state.debug }));\r\n        }\r\n    };\r\n}\r\n\r\n@observer\r\nclass Toolbar extends Component<{ on_save_as_clicked: (filename?: string) => void }> {\r\n    state = {\r\n        filename: undefined,\r\n    };\r\n\r\n    render(): ReactNode {\r\n        const undo = quest_editor_store.undo_stack;\r\n        const quest = quest_editor_store.current_quest;\r\n        const areas = quest ? Array.from(quest.area_variants).map(a => a.area) : [];\r\n        const area = quest_editor_store.current_area;\r\n        const area_id = area && area.id;\r\n\r\n        return (\r\n            <div className=\"qe-QuestEditorComponent-toolbar\">\r\n                <Upload\r\n                    accept=\".qst\"\r\n                    showUploadList={false}\r\n                    onChange={this.set_filename}\r\n                    // Make sure it doesn't do a POST:\r\n                    customRequest={() => false}\r\n                >\r\n                    <Button icon=\"file\">{this.state.filename || \"Open file...\"}</Button>\r\n                </Upload>\r\n                <Select\r\n                    onChange={quest_editor_store.set_current_area_id}\r\n                    value={area_id}\r\n                    style={{ width: 200 }}\r\n                    disabled={!quest}\r\n                >\r\n                    {areas.map(area => (\r\n                        <Select.Option key={area.id} value={area.id}>\r\n                            {area.name}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>\r\n                <Button icon=\"save\" onClick={this.save_as} disabled={!quest}>\r\n                    Save as...\r\n                </Button>\r\n                <Button\r\n                    icon=\"undo\"\r\n                    onClick={this.undo}\r\n                    title={\"Undo\" + (undo.first_undo ? ` \"${undo.first_undo.description}\"` : \"\")}\r\n                    disabled={!undo.can_undo}\r\n                />\r\n                <Button\r\n                    icon=\"redo\"\r\n                    onClick={this.redo}\r\n                    title={\"Redo\" + (undo.first_redo ? ` \"${undo.first_redo.description}\"` : \"\")}\r\n                    disabled={!quest_editor_store.undo_stack.can_redo}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private set_filename = (info: UploadChangeParam<UploadFile>) => {\r\n        if (info.file.originFileObj) {\r\n            this.setState({ filename: info.file.name });\r\n            quest_editor_store.load_file(info.file.originFileObj as File);\r\n        }\r\n    };\r\n\r\n    private save_as = () => {\r\n        this.props.on_save_as_clicked(this.state.filename);\r\n    };\r\n\r\n    private undo = () => {\r\n        quest_editor_store.undo_stack.undo();\r\n    };\r\n\r\n    private redo = () => {\r\n        quest_editor_store.undo_stack.redo();\r\n    };\r\n}\r\n\r\nclass SaveAsForm extends React.Component<{\r\n    is_open: boolean;\r\n    filename: string;\r\n    on_filename_change: (name: string) => void;\r\n    on_ok: () => void;\r\n    on_cancel: () => void;\r\n}> {\r\n    render(): ReactNode {\r\n        return (\r\n            <Modal\r\n                title={\r\n                    <>\r\n                        <Icon type=\"save\" /> Save as...\r\n                    </>\r\n                }\r\n                visible={this.props.is_open}\r\n                onOk={this.props.on_ok}\r\n                onCancel={this.props.on_cancel}\r\n            >\r\n                <Form layout=\"vertical\">\r\n                    <Form.Item label=\"Name\">\r\n                        <Input\r\n                            autoFocus={true}\r\n                            maxLength={12}\r\n                            value={this.props.filename}\r\n                            onChange={this.name_changed}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    private name_changed = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.props.on_filename_change(e.currentTarget.value);\r\n    };\r\n}\r\n","import { load_array_buffer } from \"./load_array_buffer\";\r\n\r\nexport async function get_player_data(\r\n    player_class: string,\r\n    body_part: string,\r\n    no?: number\r\n): Promise<ArrayBuffer> {\r\n    return await load_array_buffer(player_class_to_url(player_class, body_part, no));\r\n}\r\n\r\nexport async function get_player_animation_data(animation_id: number): Promise<ArrayBuffer> {\r\n    return await load_array_buffer(\r\n        `/player/animation/animation_${animation_id.toString().padStart(3, \"0\")}.njm`\r\n    );\r\n}\r\n\r\nfunction player_class_to_url(player_class: string, body_part: string, no?: number): string {\r\n    return `/player/${player_class}${body_part}${no == null ? \"\" : no}.nj`;\r\n}\r\n","import {\r\n    AnimationClip,\r\n    Euler,\r\n    InterpolateLinear,\r\n    InterpolateSmooth,\r\n    KeyframeTrack,\r\n    Quaternion,\r\n    QuaternionKeyframeTrack,\r\n    VectorKeyframeTrack,\r\n} from \"three\";\r\nimport { NjModel, NjObject } from \"../../data_formats/parsing/ninja\";\r\nimport {\r\n    NjInterpolation,\r\n    NjKeyframeTrackType,\r\n    NjMotion,\r\n} from \"../../data_formats/parsing/ninja/motion\";\r\n\r\nexport const PSO_FRAME_RATE = 30;\r\n\r\nexport function create_animation_clip(\r\n    nj_object: NjObject<NjModel>,\r\n    nj_motion: NjMotion\r\n): AnimationClip {\r\n    const interpolation =\r\n        nj_motion.interpolation === NjInterpolation.Spline ? InterpolateSmooth : InterpolateLinear;\r\n\r\n    const tracks: KeyframeTrack[] = [];\r\n\r\n    nj_motion.motion_data.forEach((motion_data, bone_id) => {\r\n        const bone = nj_object.get_bone(bone_id);\r\n        if (!bone) return;\r\n\r\n        motion_data.tracks.forEach(({ type, keyframes }) => {\r\n            const times: number[] = [];\r\n            const values: number[] = [];\r\n\r\n            for (const keyframe of keyframes) {\r\n                times.push(keyframe.frame / PSO_FRAME_RATE);\r\n\r\n                if (type === NjKeyframeTrackType.Rotation) {\r\n                    const order = bone.evaluation_flags.zxy_rotation_order ? \"ZXY\" : \"ZYX\";\r\n                    const quat = new Quaternion().setFromEuler(\r\n                        new Euler(keyframe.value.x, keyframe.value.y, keyframe.value.z, order)\r\n                    );\r\n\r\n                    values.push(quat.x, quat.y, quat.z, quat.w);\r\n                } else {\r\n                    values.push(keyframe.value.x, keyframe.value.y, keyframe.value.z);\r\n                }\r\n            }\r\n\r\n            if (type === NjKeyframeTrackType.Rotation) {\r\n                tracks.push(\r\n                    new QuaternionKeyframeTrack(\r\n                        `.bones[${bone_id}].quaternion`,\r\n                        times,\r\n                        values,\r\n                        interpolation\r\n                    )\r\n                );\r\n            } else {\r\n                const name =\r\n                    type === NjKeyframeTrackType.Position\r\n                        ? `.bones[${bone_id}].position`\r\n                        : `.bones[${bone_id}].scale`;\r\n\r\n                tracks.push(new VectorKeyframeTrack(name, times, values, interpolation));\r\n            }\r\n        });\r\n    });\r\n\r\n    return new AnimationClip(\r\n        \"Animation\",\r\n        (nj_motion.frame_count - 1) / PSO_FRAME_RATE,\r\n        tracks\r\n    ).optimize();\r\n}\r\n","import Logger from \"js-logger\";\r\nimport { action, observable } from \"mobx\";\r\nimport {\r\n    AnimationAction,\r\n    AnimationClip,\r\n    AnimationMixer,\r\n    Clock,\r\n    DoubleSide,\r\n    Mesh,\r\n    MeshLambertMaterial,\r\n    SkinnedMesh,\r\n    Texture,\r\n} from \"three\";\r\nimport { Endianness } from \"../data_formats\";\r\nimport { ArrayBufferCursor } from \"../data_formats/cursor/ArrayBufferCursor\";\r\nimport { NjModel, NjObject, parse_nj, parse_xj } from \"../data_formats/parsing/ninja\";\r\nimport { NjMotion, parse_njm } from \"../data_formats/parsing/ninja/motion\";\r\nimport { parse_xvm } from \"../data_formats/parsing/ninja/texture\";\r\nimport { PlayerAnimation, PlayerModel } from \"../domain\";\r\nimport { get_player_animation_data, get_player_data } from \"../loading/player\";\r\nimport { read_file } from \"../read_file\";\r\nimport { create_skinned_mesh, create_mesh } from \"../rendering/conversion/create_mesh\";\r\nimport { create_animation_clip, PSO_FRAME_RATE } from \"../rendering/conversion/ninja_animation\";\r\nimport { ninja_object_to_buffer_geometry } from \"../rendering/conversion/ninja_geometry\";\r\nimport { xvm_to_textures } from \"../rendering/conversion/ninja_textures\";\r\n\r\nconst logger = Logger.get(\"stores/ModelViewerStore\");\r\nconst nj_object_cache: Map<string, Promise<NjObject<NjModel>>> = new Map();\r\nconst nj_motion_cache: Map<number, Promise<NjMotion>> = new Map();\r\n\r\n// TODO: move all Three.js stuff into the renderer.\r\nclass ModelViewerStore {\r\n    readonly models: PlayerModel[] = [\r\n        new PlayerModel(\"HUmar\", 1, 10, new Set([6])),\r\n        new PlayerModel(\"HUnewearl\", 1, 10, new Set()),\r\n        new PlayerModel(\"HUcast\", 5, 0, new Set()),\r\n        new PlayerModel(\"HUcaseal\", 5, 0, new Set()),\r\n        new PlayerModel(\"RAmar\", 1, 10, new Set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])),\r\n        new PlayerModel(\"RAmarl\", 1, 10, new Set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])),\r\n        new PlayerModel(\"RAcast\", 5, 0, new Set()),\r\n        new PlayerModel(\"RAcaseal\", 5, 0, new Set()),\r\n        new PlayerModel(\"FOmar\", 1, 10, new Set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])),\r\n        new PlayerModel(\"FOmarl\", 1, 10, new Set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])),\r\n        new PlayerModel(\"FOnewm\", 1, 10, new Set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])),\r\n        new PlayerModel(\"FOnewearl\", 1, 10, new Set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])),\r\n    ];\r\n    readonly animations: PlayerAnimation[] = new Array(572)\r\n        .fill(undefined)\r\n        .map((_, i) => new PlayerAnimation(i, `Animation ${i + 1}`));\r\n\r\n    readonly clock = new Clock();\r\n\r\n    @observable.ref current_player_model?: PlayerModel;\r\n    @observable.ref current_model?: NjObject<NjModel>;\r\n    @observable.ref current_bone_count: number = 0;\r\n    @observable.ref current_obj3d?: Mesh;\r\n\r\n    @observable.ref animation?: {\r\n        player_animation?: PlayerAnimation;\r\n        mixer: AnimationMixer;\r\n        clip: AnimationClip;\r\n        action: AnimationAction;\r\n    };\r\n    @observable animation_playing: boolean = false;\r\n    @observable animation_frame_rate: number = PSO_FRAME_RATE;\r\n    @observable animation_frame: number = 0;\r\n    @observable animation_frame_count: number = 0;\r\n\r\n    private has_skeleton = false;\r\n    @observable show_skeleton: boolean = false;\r\n\r\n    set_animation_frame_rate = action(\"set_animation_frame_rate\", (rate: number) => {\r\n        if (this.animation) {\r\n            this.animation.mixer.timeScale = rate / PSO_FRAME_RATE;\r\n            this.animation_frame_rate = rate;\r\n        }\r\n    });\r\n\r\n    set_animation_frame = action(\"set_animation_frame\", (frame: number) => {\r\n        if (this.animation) {\r\n            const frame_count = this.animation_frame_count;\r\n            if (frame > frame_count) frame = 1;\r\n            if (frame < 1) frame = frame_count;\r\n            this.animation.action.time = (frame - 1) / PSO_FRAME_RATE;\r\n            this.animation_frame = frame;\r\n        }\r\n    });\r\n\r\n    load_model = async (model: PlayerModel) => {\r\n        const object = await this.get_player_ninja_object(model);\r\n        this.set_model(object, true, model);\r\n        // Ignore the bones from the head parts.\r\n        this.current_bone_count = 64;\r\n    };\r\n\r\n    load_animation = async (animation: PlayerAnimation) => {\r\n        const nj_motion = await this.get_nj_motion(animation);\r\n\r\n        if (this.current_model) {\r\n            this.set_animation(create_animation_clip(this.current_model, nj_motion), animation);\r\n        }\r\n    };\r\n\r\n    // TODO: notify user of problems.\r\n    load_file = async (file: File) => {\r\n        try {\r\n            const buffer = await read_file(file);\r\n            const cursor = new ArrayBufferCursor(buffer, Endianness.Little);\r\n\r\n            if (file.name.endsWith(\".nj\")) {\r\n                const model = parse_nj(cursor)[0];\r\n                this.set_model(model, true);\r\n            } else if (file.name.endsWith(\".xj\")) {\r\n                const model = parse_xj(cursor)[0];\r\n                this.set_model(model, false);\r\n            } else if (file.name.endsWith(\".njm\")) {\r\n                if (this.current_model) {\r\n                    const njm = parse_njm(cursor, this.current_bone_count);\r\n                    this.set_animation(create_animation_clip(this.current_model, njm));\r\n                }\r\n            } else if (file.name.endsWith(\".xvm\")) {\r\n                if (this.current_model) {\r\n                    const xvm = parse_xvm(cursor);\r\n                    this.set_textures(xvm_to_textures(xvm));\r\n                }\r\n            } else {\r\n                logger.error(`Unknown file extension in filename \"${file.name}\".`);\r\n            }\r\n        } catch (e) {\r\n            logger.error(\"Couldn't read file.\", e);\r\n        }\r\n    };\r\n\r\n    pause_animation = action(\"pause_animation\", () => {\r\n        if (this.animation) {\r\n            this.animation.action.paused = true;\r\n            this.animation_playing = false;\r\n            this.clock.stop();\r\n        }\r\n    });\r\n\r\n    toggle_animation_playing = action(\"toggle_animation_playing\", () => {\r\n        if (this.animation) {\r\n            this.animation.action.paused = !this.animation.action.paused;\r\n            this.animation_playing = !this.animation.action.paused;\r\n\r\n            if (this.animation_playing) {\r\n                this.clock.start();\r\n            } else {\r\n                this.clock.stop();\r\n            }\r\n        }\r\n    });\r\n\r\n    update_animation_frame = action(\"update_animation_frame\", () => {\r\n        if (this.animation && this.animation_playing) {\r\n            const time = this.animation.action.time;\r\n            this.animation_frame = Math.round(time * PSO_FRAME_RATE) + 1;\r\n        }\r\n    });\r\n\r\n    set_animation = action(\"set_animation\", (clip: AnimationClip, animation?: PlayerAnimation) => {\r\n        if (!this.current_obj3d || !(this.current_obj3d instanceof SkinnedMesh)) return;\r\n\r\n        let mixer: AnimationMixer;\r\n\r\n        if (this.animation) {\r\n            this.animation.mixer.stopAllAction();\r\n            mixer = this.animation.mixer;\r\n        } else {\r\n            mixer = new AnimationMixer(this.current_obj3d);\r\n        }\r\n\r\n        this.animation = {\r\n            player_animation: animation,\r\n            mixer,\r\n            clip,\r\n            action: mixer.clipAction(clip),\r\n        };\r\n\r\n        this.clock.start();\r\n        this.animation.action.play();\r\n        this.animation_playing = true;\r\n        this.animation_frame_count = Math.round(PSO_FRAME_RATE * clip.duration) + 1;\r\n    });\r\n\r\n    private set_model = action(\r\n        \"set_model\",\r\n        (model: NjObject<NjModel>, skeleton: boolean, player_model?: PlayerModel) => {\r\n            if (this.current_obj3d && this.animation) {\r\n                this.animation.mixer.stopAllAction();\r\n                this.animation.mixer.uncacheRoot(this.current_obj3d);\r\n                this.animation = undefined;\r\n            }\r\n\r\n            this.current_player_model = player_model;\r\n            this.current_model = model;\r\n            this.current_bone_count = model.bone_count();\r\n            this.has_skeleton = skeleton;\r\n\r\n            this.set_obj3d();\r\n        }\r\n    );\r\n\r\n    private add_to_bone(\r\n        object: NjObject<NjModel>,\r\n        head_part: NjObject<NjModel>,\r\n        bone_id: number\r\n    ): void {\r\n        const bone = object.get_bone(bone_id);\r\n\r\n        if (bone) {\r\n            bone.evaluation_flags.hidden = false;\r\n            bone.evaluation_flags.break_child_trace = false;\r\n            bone.children.push(head_part);\r\n        }\r\n    }\r\n\r\n    private async get_player_ninja_object(model: PlayerModel): Promise<NjObject<NjModel>> {\r\n        let ninja_object = nj_object_cache.get(model.name);\r\n\r\n        if (ninja_object) {\r\n            return ninja_object;\r\n        } else {\r\n            ninja_object = this.get_all_assets(model);\r\n            nj_object_cache.set(model.name, ninja_object);\r\n            return ninja_object;\r\n        }\r\n    }\r\n\r\n    private async get_all_assets(model: PlayerModel): Promise<NjObject<NjModel>> {\r\n        const body_data = await get_player_data(model.name, \"Body\");\r\n        const body = parse_nj(new ArrayBufferCursor(body_data, Endianness.Little))[0];\r\n\r\n        if (!body) {\r\n            throw new Error(`Couldn't parse body for player class ${model.name}.`);\r\n        }\r\n\r\n        const head_data = await get_player_data(model.name, \"Head\", 0);\r\n        const head = parse_nj(new ArrayBufferCursor(head_data, Endianness.Little))[0];\r\n\r\n        if (head) {\r\n            this.add_to_bone(body, head, 59);\r\n        }\r\n\r\n        if (model.hair_styles_count > 0) {\r\n            const hair_data = await get_player_data(model.name, \"Hair\", 0);\r\n            const hair = parse_nj(new ArrayBufferCursor(hair_data, Endianness.Little))[0];\r\n\r\n            if (hair) {\r\n                this.add_to_bone(body, hair, 59);\r\n            }\r\n\r\n            if (model.hair_styles_with_accessory.has(0)) {\r\n                const accessory_data = await get_player_data(model.name, \"Accessory\", 0);\r\n                const accessory = parse_nj(\r\n                    new ArrayBufferCursor(accessory_data, Endianness.Little)\r\n                )[0];\r\n\r\n                if (accessory) {\r\n                    this.add_to_bone(body, accessory, 59);\r\n                }\r\n            }\r\n        }\r\n\r\n        return body;\r\n    }\r\n\r\n    private async get_nj_motion(animation: PlayerAnimation): Promise<NjMotion> {\r\n        let nj_motion = nj_motion_cache.get(animation.id);\r\n\r\n        if (nj_motion) {\r\n            return nj_motion;\r\n        } else {\r\n            nj_motion = get_player_animation_data(animation.id).then(motion_data =>\r\n                parse_njm(\r\n                    new ArrayBufferCursor(motion_data, Endianness.Little),\r\n                    this.current_bone_count\r\n                )\r\n            );\r\n\r\n            nj_motion_cache.set(animation.id, nj_motion);\r\n            return nj_motion;\r\n        }\r\n    }\r\n\r\n    private set_textures = action(\"set_textures\", (textures: Texture[]) => {\r\n        this.set_obj3d(textures);\r\n    });\r\n\r\n    private set_obj3d = (textures?: Texture[]) => {\r\n        if (this.current_model) {\r\n            let mesh: Mesh;\r\n\r\n            const materials =\r\n                textures &&\r\n                textures.map(\r\n                    tex =>\r\n                        new MeshLambertMaterial({\r\n                            skinning: this.has_skeleton,\r\n                            map: tex,\r\n                            side: DoubleSide,\r\n                            alphaTest: 0.5,\r\n                        })\r\n                );\r\n\r\n            if (this.has_skeleton) {\r\n                mesh = create_skinned_mesh(\r\n                    ninja_object_to_buffer_geometry(this.current_model),\r\n                    materials\r\n                );\r\n            } else {\r\n                mesh = create_mesh(ninja_object_to_buffer_geometry(this.current_model), materials);\r\n            }\r\n\r\n            // Make sure we rotate around the center of the model.\r\n            const bb = mesh.geometry.boundingBox;\r\n            const height = bb.max.y - bb.min.y;\r\n            mesh.translateY(-height / 2 - bb.min.y);\r\n\r\n            this.current_obj3d = mesh;\r\n        }\r\n    };\r\n}\r\n\r\nexport const model_viewer_store = new ModelViewerStore();\r\n","import { autorun } from \"mobx\";\r\nimport { Object3D, PerspectiveCamera, SkeletonHelper, Vector3 } from \"three\";\r\nimport { model_viewer_store } from \"../stores/ModelViewerStore\";\r\nimport { Renderer } from \"./Renderer\";\r\n\r\nlet renderer: ModelRenderer | undefined;\r\n\r\nexport function get_model_renderer(): ModelRenderer {\r\n    if (!renderer) renderer = new ModelRenderer();\r\n    return renderer;\r\n}\r\n\r\nexport class ModelRenderer extends Renderer<PerspectiveCamera> {\r\n    private model?: Object3D;\r\n    private skeleton_helper?: SkeletonHelper;\r\n\r\n    constructor() {\r\n        super(new PerspectiveCamera(75, 1, 1, 200));\r\n\r\n        autorun(() => {\r\n            this.set_model(model_viewer_store.current_obj3d);\r\n\r\n            const show_skeleton = model_viewer_store.show_skeleton;\r\n\r\n            if (this.skeleton_helper) {\r\n                this.skeleton_helper.visible = show_skeleton;\r\n                this.schedule_render();\r\n            }\r\n\r\n            if (model_viewer_store.animation) {\r\n                this.schedule_render();\r\n            }\r\n\r\n            if (!model_viewer_store.animation_playing) {\r\n                // Reference animation_frame here to make sure we render when the user sets the frame manually.\r\n                model_viewer_store.animation_frame;\r\n                this.schedule_render();\r\n            }\r\n        });\r\n    }\r\n\r\n    set_size(width: number, height: number): void {\r\n        this.camera.aspect = width / height;\r\n        this.camera.updateProjectionMatrix();\r\n        super.set_size(width, height);\r\n    }\r\n\r\n    protected render(): void {\r\n        if (model_viewer_store.animation) {\r\n            model_viewer_store.animation.mixer.update(model_viewer_store.clock.getDelta());\r\n            model_viewer_store.update_animation_frame();\r\n        }\r\n\r\n        this.light_holder.quaternion.copy(this.camera.quaternion);\r\n        super.render();\r\n\r\n        if (model_viewer_store.animation && !model_viewer_store.animation.action.paused) {\r\n            this.schedule_render();\r\n        }\r\n    }\r\n\r\n    private set_model(model?: Object3D): void {\r\n        if (this.model !== model) {\r\n            if (this.model) {\r\n                this.scene.remove(this.model);\r\n                this.scene.remove(this.skeleton_helper!);\r\n                this.skeleton_helper = undefined;\r\n            }\r\n\r\n            if (model) {\r\n                this.scene.add(model);\r\n                this.skeleton_helper = new SkeletonHelper(model);\r\n                this.skeleton_helper.visible = model_viewer_store.show_skeleton;\r\n                (this.skeleton_helper.material as any).linewidth = 3;\r\n                this.scene.add(this.skeleton_helper);\r\n                this.reset_camera(new Vector3(0, 10, 20), new Vector3(0, 0, 0));\r\n            }\r\n\r\n            this.model = model;\r\n            this.schedule_render();\r\n        }\r\n    }\r\n}\r\n","import React, { Component, ReactNode } from \"react\";\r\nimport { model_viewer_store } from \"../../../stores/ModelViewerStore\";\r\nimport \"./AnimationSelectionComponent.less\";\r\nimport { observer } from \"mobx-react\";\r\n\r\n@observer\r\nexport class AnimationSelectionComponent extends Component {\r\n    render(): ReactNode {\r\n        return (\r\n            <section className=\"v-m-AnimationSelectionComponent\">\r\n                <ul>\r\n                    {model_viewer_store.animations.map(animation => {\r\n                        const selected =\r\n                            model_viewer_store.animation &&\r\n                            model_viewer_store.animation.player_animation &&\r\n                            model_viewer_store.animation.player_animation.id === animation.id;\r\n\r\n                        return (\r\n                            <li\r\n                                key={animation.id}\r\n                                className={selected ? \"selected\" : undefined}\r\n                                onClick={() => model_viewer_store.load_animation(animation)}\r\n                            >\r\n                                {animation.name}\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n","import { List } from \"antd\";\r\nimport React, { Component, ReactNode } from \"react\";\r\nimport { model_viewer_store } from \"../../../stores/ModelViewerStore\";\r\nimport \"./ModelSelectionComponent.less\";\r\n\r\nexport class ModelSelectionComponent extends Component {\r\n    render(): ReactNode {\r\n        return (\r\n            <section className=\"v-m-ModelSelectionComponent\">\r\n                <List\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={model_viewer_store.models}\r\n                    size=\"small\"\r\n                    renderItem={model => {\r\n                        const selected = model_viewer_store.current_player_model === model;\r\n\r\n                        return (\r\n                            <List.Item onClick={() => model_viewer_store.load_model(model)}>\r\n                                <List.Item.Meta\r\n                                    title={\r\n                                        <span\r\n                                            className={\r\n                                                \"v-m-ModelSelectionComponent-model\" +\r\n                                                (selected ? \" selected\" : \"\")\r\n                                            }\r\n                                        >\r\n                                            {model.name}\r\n                                        </span>\r\n                                    }\r\n                                />\r\n                            </List.Item>\r\n                        );\r\n                    }}\r\n                />\r\n            </section>\r\n        );\r\n    }\r\n}\r\n","import Logger from \"js-logger\";\r\nimport { autorun } from \"mobx\";\r\nimport {\r\n    Mesh,\r\n    MeshBasicMaterial,\r\n    OrthographicCamera,\r\n    PlaneGeometry,\r\n    Texture,\r\n    Vector2,\r\n    Vector3,\r\n} from \"three\";\r\nimport { Xvm } from \"../data_formats/parsing/ninja/texture\";\r\nimport { texture_viewer_store } from \"../stores/TextureViewerStore\";\r\nimport { Renderer } from \"./Renderer\";\r\nimport { xvm_texture_to_texture } from \"./conversion/ninja_textures\";\r\n\r\nconst logger = Logger.get(\"rendering/TextureRenderer\");\r\n\r\nlet renderer: TextureRenderer | undefined;\r\n\r\nexport function get_texture_renderer(): TextureRenderer {\r\n    if (!renderer) renderer = new TextureRenderer();\r\n    return renderer;\r\n}\r\n\r\nexport class TextureRenderer extends Renderer<OrthographicCamera> {\r\n    private quad_meshes: Mesh[] = [];\r\n\r\n    constructor() {\r\n        super(new OrthographicCamera(-400, 400, 300, -300, 1, 10));\r\n\r\n        this.controls.enableRotate = false;\r\n\r\n        autorun(() => {\r\n            this.scene.remove(...this.quad_meshes);\r\n\r\n            const xvm = texture_viewer_store.current_xvm;\r\n\r\n            if (xvm) {\r\n                this.render_textures(xvm);\r\n            }\r\n\r\n            this.reset_camera(new Vector3(0, 0, 5), new Vector3());\r\n            this.schedule_render();\r\n        });\r\n    }\r\n\r\n    set_size(width: number, height: number): void {\r\n        this.camera.left = -Math.floor(width / 2);\r\n        this.camera.right = Math.ceil(width / 2);\r\n        this.camera.top = Math.floor(height / 2);\r\n        this.camera.bottom = -Math.ceil(height / 2);\r\n        this.camera.updateProjectionMatrix();\r\n        super.set_size(width, height);\r\n    }\r\n\r\n    private render_textures = (xvm: Xvm) => {\r\n        let total_width = 10 * (xvm.textures.length - 1); // 10px spacing between textures.\r\n        let total_height = 0;\r\n\r\n        for (const tex of xvm.textures) {\r\n            total_width += tex.width;\r\n            total_height = Math.max(total_height, tex.height);\r\n        }\r\n\r\n        let x = -Math.floor(total_width / 2);\r\n        const y = -Math.floor(total_height / 2);\r\n\r\n        for (const tex of xvm.textures) {\r\n            let tex_3js: Texture | undefined;\r\n\r\n            try {\r\n                tex_3js = xvm_texture_to_texture(tex);\r\n            } catch (e) {\r\n                logger.warn(\"Couldn't convert XVM texture.\", e);\r\n            }\r\n\r\n            const quad_mesh = new Mesh(\r\n                this.create_quad(\r\n                    x,\r\n                    y + Math.floor((total_height - tex.height) / 2),\r\n                    tex.width,\r\n                    tex.height\r\n                ),\r\n                tex_3js\r\n                    ? new MeshBasicMaterial({\r\n                          map: tex_3js,\r\n                          transparent: true,\r\n                      })\r\n                    : new MeshBasicMaterial({\r\n                          color: 0xff00ff,\r\n                      })\r\n            );\r\n\r\n            this.quad_meshes.push(quad_mesh);\r\n            this.scene.add(quad_mesh);\r\n\r\n            x += 10 + tex.width;\r\n        }\r\n    };\r\n\r\n    private create_quad(x: number, y: number, width: number, height: number): PlaneGeometry {\r\n        const quad = new PlaneGeometry(width, height, 1, 1);\r\n        quad.faceVertexUvs = [\r\n            [\r\n                [new Vector2(0, 0), new Vector2(0, 1), new Vector2(1, 0)],\r\n                [new Vector2(0, 1), new Vector2(1, 1), new Vector2(1, 0)],\r\n            ],\r\n        ];\r\n        quad.translate(x + width / 2, y + height / 2, -5);\r\n        return quad;\r\n    }\r\n}\r\n","import { Button, InputNumber, Switch, Upload } from \"antd\";\r\nimport { UploadChangeParam } from \"antd/lib/upload\";\r\nimport { UploadFile } from \"antd/lib/upload/interface\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { Component, ReactNode } from \"react\";\r\nimport { model_viewer_store } from \"../../../stores/ModelViewerStore\";\r\nimport { AnimationSelectionComponent } from \"./AnimationSelectionComponent\";\r\nimport { ModelSelectionComponent } from \"./ModelSelectionComponent\";\r\nimport \"./ModelViewerComponent.less\";\r\nimport { get_model_renderer } from \"../../../rendering/ModelRenderer\";\r\nimport { RendererComponent } from \"../../RendererComponent\";\r\n\r\n@observer\r\nexport class ModelViewerComponent extends Component {\r\n    componentDidMount(): void {\r\n        if (!model_viewer_store.current_model) {\r\n            model_viewer_store.load_model(model_viewer_store.models[5]);\r\n        }\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return (\r\n            <div className=\"v-m-ModelViewerComponent\">\r\n                <Toolbar />\r\n                <div className=\"v-m-ModelViewerComponent-main\">\r\n                    <ModelSelectionComponent />\r\n                    <AnimationSelectionComponent />\r\n                    <RendererComponent\r\n                        renderer={get_model_renderer()}\r\n                        on_will_unmount={model_viewer_store.pause_animation}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n@observer\r\nclass Toolbar extends Component {\r\n    state = {\r\n        filename: undefined,\r\n    };\r\n\r\n    render(): ReactNode {\r\n        return (\r\n            <div className=\"v-m-ModelViewerComponent-toolbar\">\r\n                <Upload\r\n                    accept=\".nj, .njm, .xj, .xvm\"\r\n                    showUploadList={false}\r\n                    onChange={this.load_file}\r\n                    // Make sure it doesn't do a POST:\r\n                    customRequest={() => false}\r\n                >\r\n                    <Button icon=\"file\">{this.state.filename || \"Open file...\"}</Button>\r\n                </Upload>\r\n                {model_viewer_store.animation && (\r\n                    <>\r\n                        <Button\r\n                            icon={model_viewer_store.animation_playing ? \"pause\" : \"caret-right\"}\r\n                            onClick={model_viewer_store.toggle_animation_playing}\r\n                        >\r\n                            {model_viewer_store.animation_playing\r\n                                ? \"Pause animation\"\r\n                                : \"Play animation\"}\r\n                        </Button>\r\n                        <div className=\"group\">\r\n                            <span>Frame rate:</span>\r\n                            <InputNumber\r\n                                value={model_viewer_store.animation_frame_rate}\r\n                                onChange={value =>\r\n                                    model_viewer_store.set_animation_frame_rate(value || 0)\r\n                                }\r\n                                min={1}\r\n                                step={1}\r\n                            />\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <span>Frame:</span>\r\n                            <InputNumber\r\n                                value={model_viewer_store.animation_frame}\r\n                                onChange={value =>\r\n                                    model_viewer_store.set_animation_frame(value || 0)\r\n                                }\r\n                                step={1}\r\n                            />\r\n                            <span>/ {model_viewer_store.animation_frame_count}</span>\r\n                        </div>\r\n                    </>\r\n                )}\r\n                <div className=\"group\">\r\n                    <span>Show skeleton:</span>\r\n                    <Switch\r\n                        checked={model_viewer_store.show_skeleton}\r\n                        onChange={value => (model_viewer_store.show_skeleton = value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private load_file = (info: UploadChangeParam<UploadFile>) => {\r\n        if (info.file.originFileObj) {\r\n            this.setState({ filename: info.file.name });\r\n            model_viewer_store.load_file(info.file.originFileObj as File);\r\n        }\r\n    };\r\n}\r\n","import { observable } from \"mobx\";\r\nimport { Xvm, parse_xvm } from \"../data_formats/parsing/ninja/texture\";\r\nimport { ArrayBufferCursor } from \"../data_formats/cursor/ArrayBufferCursor\";\r\nimport { read_file } from \"../read_file\";\r\nimport { Endianness } from \"../data_formats\";\r\nimport Logger from \"js-logger\";\r\n\r\nconst logger = Logger.get(\"stores/TextureViewerStore\");\r\n\r\nclass TextureViewStore {\r\n    @observable.ref current_xvm?: Xvm;\r\n\r\n    // TODO: notify user of problems.\r\n    load_file = async (file: File) => {\r\n        try {\r\n            const buffer = await read_file(file);\r\n            this.current_xvm = parse_xvm(new ArrayBufferCursor(buffer, Endianness.Little));\r\n        } catch (e) {\r\n            logger.error(\"Couldn't read file.\", e);\r\n        }\r\n    };\r\n}\r\n\r\nexport const texture_viewer_store = new TextureViewStore();\r\n","import { Button, Upload } from \"antd\";\r\nimport { UploadChangeParam, UploadFile } from \"antd/lib/upload/interface\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { Component, ReactNode } from \"react\";\r\nimport { get_texture_renderer } from \"../../../rendering/TextureRenderer\";\r\nimport { texture_viewer_store } from \"../../../stores/TextureViewerStore\";\r\nimport { RendererComponent } from \"../../RendererComponent\";\r\nimport \"./TextureViewerComponent.less\";\r\n\r\nexport class TextureViewerComponent extends Component {\r\n    render(): ReactNode {\r\n        return (\r\n            <section className=\"v-t-TextureViewerComponent\">\r\n                <Toolbar />\r\n                <RendererComponent\r\n                    renderer={get_texture_renderer()}\r\n                    className={\"v-t-TextureViewerComponent-renderer\"}\r\n                />\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\n@observer\r\nclass Toolbar extends Component {\r\n    state = {\r\n        filename: undefined,\r\n    };\r\n\r\n    render(): ReactNode {\r\n        return (\r\n            <div className=\"v-t-TextureViewerComponent-toolbar\">\r\n                <Upload\r\n                    accept=\".xvm\"\r\n                    showUploadList={false}\r\n                    onChange={this.load_file}\r\n                    // Make sure it doesn't do a POST:\r\n                    customRequest={() => false}\r\n                >\r\n                    <Button icon=\"file\">{this.state.filename || \"Open file...\"}</Button>\r\n                </Upload>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private load_file = (info: UploadChangeParam<UploadFile>) => {\r\n        if (info.file.originFileObj) {\r\n            this.setState({ filename: info.file.name });\r\n            texture_viewer_store.load_file(info.file.originFileObj as File);\r\n        }\r\n    };\r\n}\r\n","import { Menu, Select } from \"antd\";\r\nimport { ClickParam } from \"antd/lib/menu\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { ReactNode, Component } from \"react\";\r\nimport { Server } from \"../domain\";\r\nimport \"./ApplicationComponent.less\";\r\nimport { DpsCalcComponent } from \"./dps_calc/DpsCalcComponent\";\r\nimport { with_error_boundary } from \"./ErrorBoundary\";\r\nimport { HuntOptimizerComponent } from \"./hunt_optimizer/HuntOptimizerComponent\";\r\nimport { QuestEditorComponent } from \"./quest_editor/QuestEditorComponent\";\r\nimport { ViewerComponent } from \"./viewer/ViewerComponent\";\r\nimport { application_store } from \"../stores/ApplicationStore\";\r\n\r\nconst Viewer = with_error_boundary(ViewerComponent);\r\nconst QuestEditor = with_error_boundary(QuestEditorComponent);\r\nconst HuntOptimizer = with_error_boundary(HuntOptimizerComponent);\r\nconst DpsCalc = with_error_boundary(DpsCalcComponent);\r\n\r\n@observer\r\nexport class ApplicationComponent extends Component {\r\n    componentDidMount(): void {\r\n        window.addEventListener(\"keyup\", this.keyup);\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        window.removeEventListener(\"keyup\", this.keyup);\r\n    }\r\n\r\n    render(): ReactNode {\r\n        let tool_component;\r\n\r\n        switch (application_store.current_tool) {\r\n            case \"viewer\":\r\n                tool_component = <Viewer />;\r\n                break;\r\n            case \"quest_editor\":\r\n                tool_component = <QuestEditor />;\r\n                break;\r\n            case \"hunt_optimizer\":\r\n                tool_component = <HuntOptimizer />;\r\n                break;\r\n            case \"dps_calc\":\r\n                tool_component = <DpsCalc />;\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <div className=\"ApplicationComponent\">\r\n                <div className=\"ApplicationComponent-navbar\">\r\n                    <h1 className=\"ApplicationComponent-heading\">Phantasmal World</h1>\r\n                    <Menu\r\n                        className=\"ApplicationComponent-heading-menu\"\r\n                        onClick={this.menu_clicked}\r\n                        selectedKeys={[application_store.current_tool]}\r\n                        mode=\"horizontal\"\r\n                    >\r\n                        <Menu.Item key=\"viewer\">\r\n                            Viewer<sup className=\"ApplicationComponent-beta\">(Beta)</sup>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"quest_editor\">\r\n                            Quest Editor<sup className=\"ApplicationComponent-beta\">(Beta)</sup>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"hunt_optimizer\">Hunt Optimizer</Menu.Item>\r\n                        {/* <Menu.Item key=\"dpsCalc\">\r\n                            DPS Calculator\r\n                        </Menu.Item> */}\r\n                    </Menu>\r\n                    <div className=\"ApplicationComponent-server-select\">\r\n                        <span>Server:</span>\r\n                        <Select defaultValue={Server.Ephinea} style={{ width: 120 }}>\r\n                            <Select.Option value={Server.Ephinea}>{Server.Ephinea}</Select.Option>\r\n                        </Select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"ApplicationComponent-main\">{tool_component}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private menu_clicked = (e: ClickParam) => {\r\n        application_store.current_tool = e.key;\r\n    };\r\n\r\n    private keyup = (e: KeyboardEvent) => {\r\n        application_store.dispatch_global_keyup(e);\r\n    };\r\n}\r\n","import { Tabs } from \"antd\";\r\nimport React, { Component, ReactNode } from \"react\";\r\nimport { ModelViewerComponent } from \"./models/ModelViewerComponent\";\r\nimport { TextureViewerComponent } from \"./textures/TextureViewerComponent\";\r\nimport \"./ViewerComponent.less\";\r\n\r\nexport class ViewerComponent extends Component {\r\n    render(): ReactNode {\r\n        return (\r\n            <section className=\"v-ViewerComponent\">\r\n                <Tabs type=\"card\">\r\n                    <Tabs.TabPane tab=\"Models\" key=\"models\">\r\n                        <ModelViewerComponent />\r\n                    </Tabs.TabPane>\r\n                    <Tabs.TabPane tab=\"Textures\" key=\"textures\">\r\n                        <TextureViewerComponent />\r\n                    </Tabs.TabPane>\r\n                </Tabs>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Logger from \"js-logger\";\r\nimport \"./index.less\";\r\nimport { ApplicationComponent } from \"./ui/ApplicationComponent\";\r\nimport \"react-virtualized/styles.css\";\r\nimport \"react-select/dist/react-select.css\";\r\nimport \"react-virtualized-select/styles.css\";\r\n\r\nLogger.useDefaults({\r\n    defaultLevel: (Logger as any)[process.env[\"REACT_APP_LOG_LEVEL\"] || \"OFF\"],\r\n});\r\n\r\nReactDOM.render(<ApplicationComponent />, document.getElementById(\"phantasmal-world-root\"));\r\n"],"sourceRoot":""}